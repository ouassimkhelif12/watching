/*! For license information please see ustream-player.atlas.min.js.LICENSE.txt */
(self.webpackChunkustreamPlayer = self.webpackChunkustreamPlayer || []).push([[430], {
    85391: function(e, t, n) {
        "use strict";
        n.r(t),
        n.d(t, {
            initialize: function() {
                return Yv
            }
        });
        var r = n(26448)
          , a = n.n(r)
          , i = n(40202)
          , o = n.n(i)
          , s = n(75069)
          , c = n(31065)
          , u = n(81984)
          , d = n(52097);
        function l(e) {
            return l = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            }
            : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }
            ,
            l(e)
        }
        var f = function e() {
            for (var t = {}, n = 0; n < arguments.length; n++)
                for (var r in arguments[n]) {
                    var a = arguments[n][r]
                      , i = t[r];
                    i && "object" === l(a) && "object" === l(i) ? t[r] = e(i, a) : t[r] = a
                }
            return t
        }
          , p = {
            STREAM_UPDATE: "streamUpdate",
            THUMBNAIL_UPDATE: "thumbnailUpdate",
            BROADCASTER_UPDATE: "broadcasterUpdate",
            META_UPDATE: "metaUpdate",
            CONTENT_CUT_UPDATE: "contentCutUpdate",
            VIEWERS_UPDATE: "viewersUpdate",
            ALLVIEWERS_UPDATE: "allViewersUpdate",
            ALLTIMETOTAL_UPDATE: "allTimeTotalUpdate",
            SHARE_UPDATE: "shareUpdate",
            LOGO_UPDATE: "logoUpdate",
            CLIENT_RATE_LIMIT_UPDATE: "clientRateLimitUpdate",
            CHAT_UPDATE: "chatUpdate",
            STREAM_VERSION_UPDATE: "streamVersionUpdate",
            LIVE_CTA_UPDATE: "livectaUpdate",
            CAPTION_UPDATE: "captionUpdate",
            SLIDES_UPDATE: "slidesUpdate",
            POLL_UPDATE: "pollUpdate",
            CAPTION_SEARCH_UPDATE: "captionSearchUpdate",
            WENT_ONLINE_IN_UNIX_TS_UPDATE: "wentOnlineInUnixTsUpdate",
            ID_UPDATE: "idUpdate",
            UNSUPPORTED: "unsupported",
            LIVE: "live",
            OFFLINE_MODULE_RECEIVED: "offlineModuleReceived",
            PLAY: "play",
            PAUSE: "pause",
            LOAD: "load",
            VOLUME: "volume",
            PLAYING: "playing",
            SEEK: "seek",
            PROGRESS: "progress",
            DURATION: "duration",
            CREATE_SLIDESHOW: "createSlideShow",
            DESTROY_SLIDESHOW: "destroySlideShow",
            CREATE_OFFAIR_VIDEO: "createOffairVideo",
            DESTROY_OFFAIR_VIDEO: "destroyOffairVideo",
            NEXT_OFFAIR_VIDEO: "nextOffairVideo",
            VIDEO_FINISHED: "videoFinished",
            AUDIO_TRACKS: "audioTracks",
            URL_RESOLVE_COMPLETE: "urlResolveComplete",
            URL_RESOLVE_FAILURE: "urlResolveFailure",
            PLAY_OPTIONS: "playOptions",
            CHUNK_LENGTH: "chunkLength",
            ATLAS_METADATA: "atlasMetadata",
            ATLAS_STORED_UPDATE: "atlasStoredUpdate",
            ATLAS_BUFFERED_UPDATE: "atlasBufferedUpdate",
            ATLAS_POSITION_UPDATE: "atlasPositionUpdate",
            ATLAS_PROGRESS: "atlasProgress",
            ATLAS_ERROR: "atlasError",
            ATLAS_LOG: "atlasLog",
            ATLAS_CLEANUP: "atlasCleanup",
            ATLAS_THROTTLE: "atlasThrottle",
            ATLAS_DOWNLOAD_ERROR: "atlasDownloadError",
            ATLAS_QUALITY_CHANGE_STARTED: "atlasQualityChangeStarted",
            ATLAS_QUALITY_CHANGE_COMPLETED: "atlasQualityChangeCompleted",
            ATLAS_QUALITY_CHANGE_CANCELLED: "atlasQualityChangeCancelled",
            RECORDED_READY: "recordedReady",
            BANDWIDTH_UPDATED: "bandwidthUpdated",
            QUALITY_CHANGE: "qualityChange",
            CHANGE_PROVIDER: "changeProvider",
            PROVIDER_CHANGE: "providerChange",
            FLASH_CALL_ERROR: "flashCallError",
            SEND_REPORT: "sendReport",
            UMS_CONNECT_START: "umsConnectStart",
            UMS_CONNECTED: "umsConnected",
            UMS_REJECT: "umsReject",
            MODULE_INFO: "moduleInfo",
            REPORT_BANDWIDTH: "reportBandwidth",
            REPORT_BUFFER_EMPTY: "reportBufferEmpty",
            REPORT_BUFFER_FULL: "reportBufferFull",
            REPORT_DROPPED_FRAMES: "reportDroppedFrames",
            REPORT_ERROR: "reportError",
            REPORT_ECDN_TESTS: "reportEcdnTests",
            REPORT_AUDIO_CHANGED: "reportAudioChanged",
            CONTENT_AVAILABLE: "contentAvailable",
            AD_AVAILABLE: "adAvailable",
            DEBUG_FLOT_LOG: "flotLog"
        }
          , m = [p.PROGRESS, p.VIEWERS_UPDATE, p.ALLVIEWERS_UPDATE, p.ALLTIMETOTAL_UPDATE, p.MODULE_INFO, p.DEBUG_FLOT_LOG, p.ATLAS_PROGRESS, p.ATLAS_POSITION_UPDATE, p.ATLAS_STORED_UPDATE, p.ATLAS_BUFFERED_UPDATE, p.ATLAS_LOG, p.SEND_REPORT, p.STREAM_UPDATE, p.THUMBNAIL_UPDATE, p.BROADCASTER_UPDATE, p.META_UPDATE, p.VIEWERS_UPDATE, p.ALLVIEWERS_UPDATE, p.ALLTIMETOTAL_UPDATE, p.SHARE_UPDATE, p.LOGO_UPDATE, p.CLIENT_RATE_LIMIT_UPDATE, p.CHAT_UPDATE, p.LIVE_CTA_UPDATE, p.CAPTION_UPDATE, p.SLIDES_UPDATE, p.POLL_UPDATE, p.CAPTION_SEARCH_UPDATE, p.WENT_ONLINE_IN_UNIX_TS_UPDATE, p.ID_UPDATE]
          , g = n(96534)
          , v = (0,
        c.w)("facade")
          , E = {};
        function h(e, t) {
            return "".concat(e, ".").concat(t)
        }
        var y, b = "command", T = "event", S = "data", O = "report", L = p, A = function(e, t, n) {
            var r = h(e, t);
            -1 === m.indexOf(t) && v.debug("".concat(e, " ").concat(t), n),
            (0,
            g.Z)(E, r, n),
            (0,
            g.Z)(E, "".concat(e, ".*"), t, n)
        }, I = function(e, t, n) {
            var r = h(e, t);
            E[r] || (E[r] = []),
            E[r].push(n)
        }, _ = "flv", P = "flv/segmented", D = "mp4", R = "mp4/segmented", w = "hls", N = n(79884), C = n(60461);
        function U() {
            if (!y)
                throw new Error("uiInstance not inited");
            return y
        }
        var M, F, j, k, G, B, V = n(49612), x = "channel", H = "recorded", Z = "video", Y = "image", K = "highlight", W = (0,
        c.w)("atlas/data/content"), Q = location.pathname, z = N.Z.player ? N.Z.player.contentType : N.Z.contentType, X = z === Z || z === K, q = z === x, $ = z === K, J = 0, ee = 1, te = 0, ne = !1, re = "", ae = null, ie = 0;
        function oe() {
            return k === w
        }
        function se() {
            return (ee - J) * te
        }
        function ce(e) {
            if (oe())
                return e;
            var t = te * J;
            return Math.max(e - t, 0)
        }
        !Q.includes("/embed/") && N.Z.player ? (F = [N.Z.player.contentId],
        N.Z.player.contentType === K && F.unshift(N.Z.player.videoId)) : F = Q.match(/(\d+)/g),
        j = +F[0],
        M = q ? x : H,
        I(T, L.LIVE, (function(e) {
            e && (re = "",
            G = void 0),
            ne = e
        }
        )),
        I(S, L.META_UPDATE, (function(e) {
            B = f(B, e)
        }
        )),
        I(T, L.CREATE_SLIDESHOW, (function() {
            re = Y,
            G = void 0
        }
        )),
        I(T, L.CREATE_OFFAIR_VIDEO, (function(e) {
            re = Z,
            G = e
        }
        )),
        I(T, L.DESTROY_OFFAIR_VIDEO, (function() {
            re = "",
            G = void 0
        }
        )),
        I(T, L.DESTROY_SLIDESHOW, (function() {
            re = ""
        }
        )),
        I(T, L.ATLAS_PROGRESS, (function(e) {
            var t = e.position;
            ie = t
        }
        ));
        var ue = {
            TYPE_CHANNEL: x,
            TYPE_RECORDE: H,
            TYPE_HIGHLIGHT: K,
            setStreamType: function(e) {
                k = e
            },
            getStreamType: function() {
                return k
            },
            isHLS: oe,
            isFLV: function() {
                return k === P || k === _
            },
            isMP4: function() {
                return k === R || k === D
            },
            isSegmentedMP4: function() {
                return k === R
            },
            isContentPlayable: function() {
                return "" === re || re === Z
            },
            live: function() {
                return ne
            },
            meta: function() {
                return B
            },
            cluster: function() {
                return B && B.cluster ? B.cluster : void 0
            },
            offairType: function() {
                return re
            },
            offairVid: function() {
                return G
            },
            getMediaType: function() {
                return X ? Z : re ? "offair" + re : ne ? "live" : "unknown"
            },
            id: function() {
                return j
            },
            app: function() {
                return M
            },
            ids: function() {
                return F
            },
            isCid: function() {
                return q
            },
            getType: function() {
                return q ? x : $ ? K : H
            },
            setHighlight: function(e) {
                J = e[0],
                ee = e[1],
                A(T, L.CONTENT_CUT_UPDATE)
            },
            getHighlight: function() {
                return Ae.get("ignoretrim") ? null : void 0 !== J || void 0 !== ee ? {
                    cutStart: J,
                    cutEnd: ee
                } : null
            },
            getCutStart: function() {
                return J
            },
            getCutEnd: function() {
                return ee
            },
            setDurationInMillisec: function(e) {
                te = e,
                A(T, L.DURATION)
            },
            getDurationInMillisec: function() {
                return te
            },
            getTrimmedDurationInMillisec: se,
            getRelativeSeekPositionInMs: ce,
            getAbsoluteSeekPositionInMs: function(e) {
                var t, n;
                oe() ? (t = 0,
                n = se()) : (t = te * J,
                n = te * ee);
                var r = t + e;
                return Math.min(Math.max(t, r), n)
            },
            getSavedSeek: function() {
                return ae
            },
            hasSavedSeek: function() {
                return !!ae
            },
            saveSeek: function(e) {
                var t, n = e.positionInMs, r = e.initiator, a = (null === (t = ae) || void 0 === t ? void 0 : t.initiator) === C._.USER, i = r === C._.SYSTEM;
                a && i || (ae = {
                    positionInMs: n,
                    initiator: r
                })
            },
            resetSavedSeek: function() {
                ae = null
            },
            getOwnerChannelId: function() {
                return N.Z.cId
            },
            isVid: function() {
                return X
            },
            isHid: function() {
                return $
            },
            isOffairVid: function() {
                return re === Z
            },
            isOffairImg: function() {
                return re === Y
            },
            getMid: function() {
                return [this.app()].concat(F).join(".")
            },
            isLiveContent: function() {
                return !this.isVid() && "" === re
            },
            getUrl: function(e, t) {
                var n = (0,
                s.default)(window, "location.protocol", "https:")
                  , r = (0,
                s.default)(V.Z, "config.contentUrl", "video.ibm.com")
                  , a = new URL("".concat(n, "//").concat(r));
                if (t ? a.pathname += "".concat("embed", "/") : q && (a.pathname += "".concat(x, "/")),
                X && (a.pathname += "".concat(H, "/")),
                a.pathname += "".concat(F[0]),
                $ && (a.pathname += "/".concat(K, "/").concat(F[1])),
                e && (a.pathname += "/pop-out",
                !this.isLiveContent())) {
                    var i = ce(ie)
                      , o = Math.ceil(i / 1e3);
                    o > 0 && (a.hash = "to".concat(o))
                }
                return a.toString()
            },
            update: function(e, t) {
                W.debug("update ", {
                    type: e,
                    ids: t
                }),
                Array.isArray(t) || (t = [t]),
                F = t,
                re = "",
                J = 0,
                ee = 1,
                te = 0,
                e === x ? (q = !0,
                j = t[0],
                M = x,
                X = !1,
                $ = !1) : e === Z || e === H ? (X = !0,
                j = t[0],
                M = H,
                q = !1,
                $ = !1) : e === K && (X = !0,
                $ = !0,
                j = t[0],
                M = H,
                q = !1),
                U().setContentUpdate()
            }
        }
          , de = n(20917)
          , le = n(81)
          , fe = n(304);
        function pe(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++)
                r[n] = e[n];
            return r
        }
        function me(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function ge(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? me(Object(n), !0).forEach((function(t) {
                    ve(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : me(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function ve(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var Ee = (0,
        c.w)("atlas/data/params")
          , he = {
            autoplay: !1,
            bdtools: !1,
            chunkReporting: !1,
            controls: !0,
            cmenu: !0,
            combinedstreammodule: !1,
            debug: !1,
            disableEosSeek: !1,
            loop: !1,
            experiment: !1,
            externalvtt: !1,
            hideaudioswitch: !1,
            hidecaptionsearch: !1,
            hidecc: !1,
            hidechapters: !1,
            hidecopylink: !1,
            hidecta: !1,
            hidecustomlogo: !1,
            hideembedcode: !1,
            hidefacebook: !1,
            hidefullscreen: !1,
            hidelivebadge: !1,
            hidelogo: !1,
            hideplaybackspeed: !1,
            hideplayscreen: !1,
            hidereplaybadge: !1,
            hideseekbar: !1,
            hideaudioonlyoverlay: !1,
            hidethumbnail: !1,
            hideshare: !1,
            hidetitle: !1,
            hidetwitter: !1,
            hideviewernumbers: !1,
            html5: !1,
            ios: !1,
            lite: !1,
            longpoll: !1,
            ignoretrim: !1,
            playsinline: !0,
            qosplayer: !1,
            reftest: !1,
            showhiddencontextmenuitems: Boolean(le.ZP.get("showHiddenContextMenuItems")),
            showpopout: !1,
            showtheatre: !1,
            sitemode: !1,
            uselongpoll: !1,
            allowfullscreen: !0,
            disablecaptionsearch: !1,
            popoutvisible: !1,
            showtitle: !0,
            theatervisible: !1,
            viewingexperience: !1,
            disablejump: !1
        }
          , ye = ge({
            defaultlang: void 0,
            findtext: void 0,
            v: 3,
            volume: 100,
            slideshowspeed: fe.Z.DEFAULT_SLIDE_DELAY_IN_SEC,
            oneclickdelay: fe.Z.DEFAULT_ONE_CLICK_DELAY_IN_MS,
            multiclickdelay: fe.Z.DEFAULT_MULTI_CLICK_DELAY_IN_MS
        }, he)
          , be = {};
        function Te(e) {
            return e.replace(/-/g, "").toLowerCase()
        }
        function Se(e) {
            try {
                var t = new URL(de.ZP);
                return e.test(t.hostname)
            } catch (e) {
                return !1
            }
        }
        function Oe(e, t) {
            var n = ue.id().toString();
            be[n] || (be[n] = {}),
            be[n][Te(e)] = t
        }
        var Le = function() {
            var e = function(e) {
                var t = window.location.hash.match(/to(\d+(?::\d+){0,2})/);
                if (t) {
                    var n = t[1].split(":").map((function(e) {
                        return parseInt(e, 10)
                    }
                    ))
                      , r = n.pop()
                      , a = n.pop() || 0;
                    return 60 * (n.pop() || 0) * 60 + 60 * a + r
                }
            }();
            e && Oe("startAt", e);
            var t, n, r, a, i = window === window.parent && N.Z.player && 0 !== window.location.pathname.indexOf("/embed") ? (Ee.debug("params from exposedVars.player expose", N.Z.player),
            Object.entries(N.Z.player).reduce((function(e, t) {
                var n, r, a = (r = 2,
                function(e) {
                    if (Array.isArray(e))
                        return e
                }(n = t) || function(e, t) {
                    var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                    if (null != n) {
                        var r, a, i = [], o = !0, s = !1;
                        try {
                            for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value),
                            !t || i.length !== t); o = !0)
                                ;
                        } catch (e) {
                            s = !0,
                            a = e
                        } finally {
                            try {
                                o || null == n.return || n.return()
                            } finally {
                                if (s)
                                    throw a
                            }
                        }
                        return i
                    }
                }(n, r) || function(e, t) {
                    if (e) {
                        if ("string" == typeof e)
                            return pe(e, t);
                        var n = Object.prototype.toString.call(e).slice(8, -1);
                        return "Object" === n && e.constructor && (n = e.constructor.name),
                        "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? pe(e, t) : void 0
                    }
                }(n, r) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()), i = a[0], o = a[1], s = ge(ge({}, e), {}, ve({}, Te(i), o));
                return "false" === s.autoplay && (s.autoplay = !1),
                s.hidetitle && (s.hidetitle = !1),
                s
            }
            ), {})) : {}, o = (r = {
                branchname: N.Z.branchName,
                subscription: N.Z.hasSubscription,
                betachannel: N.Z.isBetaChannel,
                islive: N.Z.isLive,
                initialquality: N.Z.initialQuality,
                forcedquality: N.Z.forcedQuality,
                locale: N.Z.locale,
                loggedin: N.Z.loggedIn,
                isibmbranded: N.Z.ibmBranding,
                uumfoffairvods: N.Z.uumfOffAirContentVideoIds,
                uumf: N.Z.isUUMF,
                align: "true" === N.Z.align || !0 === N.Z.align,
                adfree: Boolean(N.Z.sessionId && N.Z.adFree)
            },
            "channel" === (null !== (t = N.Z.contentType) && void 0 !== t ? t : null === (n = N.Z.player) || void 0 === n ? void 0 : n.contentType) && (r.uumf = !0),
            r), s = (a = (window.location.search.match(/([a-z0-9\-_]+)(?:=([a-z0-9\-_.:%]*))?/gi) || []).filter((function(e) {
                return !/^hash=.+/.test(e)
            }
            )),
            Ee.debug("params from url", a),
            a.reduce((function(e, t) {
                var n, r = t.split("="), a = Te(r[0]), i = r[1];
                switch (!0) {
                case Object.keys(he).some((function(e) {
                    return e === a
                }
                )):
                    var o = "bdtools" === a ? {
                        bdtools: !0,
                        autoplay: !0,
                        adfree: !0
                    } : {};
                    return ge(ge({}, e), {}, ve({}, a, "true" === (n = i) || "1" === n || "" === n || void 0 === n), o);
                case "volume" === a:
                    var s = parseInt(i, 10)
                      , c = i && s >= 0 && s <= 100;
                    return ge(ge({}, e), {}, ve({}, a, c ? s : 100));
                case "slideshowspeed" === a:
                    var l = (0,
                    d.Z)(parseInt(i, 10), {
                        lower: 1
                    });
                    return ge(ge({}, e), {}, ve({}, a, (0,
                    u.Z)(l) ? fe.Z.DEFAULT_SLIDE_DELAY_IN_SEC : l));
                case "flot" === a:
                case "defaultlang" === a:
                case "findtext" === a:
                    return ge(ge({}, e), {}, ve({}, a, i));
                case "oneClickDelay" === a:
                    var f = parseInt(i, 10) || fe.Z.DEFAULT_ONE_CLICK_DELAY_IN_MS;
                    return ge(ge({}, e), {}, ve({}, Te(a), f));
                case "multiClickDelay" === a:
                    var p = parseInt(i, 10) || fe.Z.DEFAULT_MULTI_CLICK_DELAY_IN_MS;
                    return ge(ge({}, e), {}, ve({}, Te(a), p))
                }
                return e
            }
            ), {})), c = function() {
                var e = {};
                return ["isonibm", "isonustream", "popout"].forEach((function(t) {
                    switch (t) {
                    case "isonibm":
                        e[t] = Se(/ibm\.com$/);
                        break;
                    case "isonustream":
                        e[t] = Se(/ustream\.tv(?:\.lh)?$/);
                        break;
                    case "popout":
                        e[t] = (n = "/pop-out",
                        window.location.pathname.slice(-1 * n.length) === n)
                    }
                    var n
                }
                )),
                e
            }();
            return ge(ge(ge(ge(ge({}, ye), i), o), s), c)
        }();
        Ee.debug("params object initiated", Le, !0);
        var Ae = {
            get: function(e) {
                return Le[Te(e)]
            },
            set: function(e, t) {
                Le[Te(e)] = t
            },
            getByContent: function(e) {
                var t = ue.id().toString()
                  , n = Te(e);
                return be[t] && be[t][n] || Oe(n, !1),
                be[t][n]
            },
            setByContent: Oe
        };
        function Ie(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function _e(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function Pe(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++)
                r[n] = e[n];
            return r
        }
        var De = (0,
        c.w)("atlas/lib/centralLogger")
          , Re = function() {
            var e, t, n, r, i = {
                subdomain: "eventtracking-log",
                protocol: "localhost" === (null === (e = window) || void 0 === e || null === (t = e.location) || void 0 === t ? void 0 : t.hostname) ? "https:" : "",
                tag: "eventtracking.web.player",
                type: "web",
                callback: function(e, t) {
                    e ? De.debug("error:", e) : t.forEach((function(e) {
                        De.debug("sent:", e)
                    }
                    ))
                }
            }, o = (0,
            s.default)(V.Z.config, "eventtrackingUrl", "").match(/^([^.]+)\.(.+)$/);
            if (o) {
                var c = (r = 3,
                function(e) {
                    if (Array.isArray(e))
                        return e
                }(n = o) || function(e, t) {
                    var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                    if (null != n) {
                        var r, a, i = [], o = !0, s = !1;
                        try {
                            for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value),
                            !t || i.length !== t); o = !0)
                                ;
                        } catch (e) {
                            s = !0,
                            a = e
                        } finally {
                            try {
                                o || null == n.return || n.return()
                            } finally {
                                if (s)
                                    throw a
                            }
                        }
                        return i
                    }
                }(n, r) || function(e, t) {
                    if (e) {
                        if ("string" == typeof e)
                            return Pe(e, t);
                        var n = Object.prototype.toString.call(e).slice(8, -1);
                        return "Object" === n && e.constructor && (n = e.constructor.name),
                        "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Pe(e, t) : void 0
                    }
                }(n, r) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }())
                  , u = c[1]
                  , d = c[2];
                i.subdomain = u,
                i.domain = d
            }
            return a().create(i)
        }();
        function we() {
            return o().storage
        }
        var Ne = {
            isLoggingEnabled: we,
            send: function(e) {
                var t;
                if (we()) {
                    "string" == typeof e && (e = {
                        message: e
                    }),
                    e.message = e.message || "";
                    var n = o().swf ? o().swf.join(".") : "none"
                      , r = ue.getMediaType()
                      , a = ue.app() === ue.TYPE_CHANNEL ? "channel_id" : "recorded_id";
                    e.data = function(e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = null != arguments[t] ? arguments[t] : {};
                            t % 2 ? Ie(Object(n), !0).forEach((function(t) {
                                _e(e, t, n[t])
                            }
                            )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ie(Object(n)).forEach((function(t) {
                                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                            }
                            ))
                        }
                        return e
                    }((_e(t = {
                        cluster: ue.cluster()
                    }, a, ue.id()),
                    _e(t, "branch_name", Ae.get("branchName")),
                    _e(t, "player_version", "v5"),
                    _e(t, "flash_version", n),
                    _e(t, "buildNumber", fe.Z.BUILD_NUMBER),
                    _e(t, "broadcaster_user_id", N.Z.ownerId),
                    _e(t, "contentType", r),
                    t), e.data || {}),
                    Re.send(e)
                }
            }
        }
          , Ce = n(62074)
          , Ue = n(36891)
          , Me = n(45878)
          , Fe = n(3494)
          , je = "ADD_VIDEO_TAG"
          , ke = "REMOVE_VIDEO_TAG"
          , Ge = n(97399);
        function Be(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function Ve(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Be(Object(n), !0).forEach((function(t) {
                    xe(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Be(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function xe(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var He = {}
          , Ze = "TOGGLE_CAPTION_SEARCH_COMPONENT"
          , Ye = "SET_CAPTION_MODULE"
          , Ke = "SET_SEARCH_RESULT"
          , We = n(36811);
        function Qe(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function ze(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Qe(Object(n), !0).forEach((function(t) {
                    Xe(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Qe(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function Xe(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var qe = {
            panelVisibility: !1,
            visibility: !1,
            searchResult: null
        }
          , $e = n(42640);
        function Je(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function et(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Je(Object(n), !0).forEach((function(t) {
                    tt(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Je(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function tt(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var nt = {
            activeCues: [],
            options: {}
        }
          , rt = "DISABLE"
          , at = "SET_SLIDES"
          , it = "SET_CURRENT_SLIDE"
          , ot = n(45663);
        function st(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function ct(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? st(Object(n), !0).forEach((function(t) {
                    ut(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : st(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function ut(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var dt = {
            isEnabled: !1,
            slides: [],
            currentSlide: null,
            slideIndexPanelVisible: !1,
            onboarding: !1
        }
          , lt = n(3515);
        function ft(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function pt(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? ft(Object(n), !0).forEach((function(t) {
                    mt(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ft(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function mt(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var gt = {
            activeMarker: void 0
        }
          , vt = "REMOVE_HASH"
          , Et = "SET_LOCK_INFO"
          , ht = n(8834)
          , yt = n(23607)
          , bt = (0,
        c.w)("shared/ui/screen/hashlockadvanced");
        function Tt() {
            var e = ue.isVid() ? N.Z.cId : ue.id();
            return "c:token-".concat(e)
        }
        function St() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ue.id();
            return "v:token-".concat(e)
        }
        function Ot(e) {
            var t = e.hash
              , n = "video" === e.mediaType ? St() : Tt();
            le.ZP.set(n, t, {
                expires: It(t)
            })
        }
        function Lt() {
            if (ue.isVid() || ue.isOffairVid())
                return le.ZP.get(Tt()) || le.ZP.get(St(ue.offairVid()))
        }
        function At() {
            return "ustreamEmbedHash-".concat(ue.isVid() ? N.Z.cId : ue.id())
        }
        function It(e) {
            var t = function(e) {
                var t;
                try {
                    t = JSON.parse(e)
                } catch (t) {
                    return void bt.error("Failed to parse hash", e)
                }
                return t
            }(e);
            if (!t)
                return 14;
            var n = function(e) {
                var t = function(e) {
                    var t = e.find((function(e) {
                        return Object.keys(e).includes("hashExpire")
                    }
                    ));
                    if (t)
                        return Object.values(t).pop()
                }(e);
                return new Date(1e3 * t)
            }(t);
            return isNaN(n.getTime()) ? 14 : n
        }
        var _t = {
            saveHashToLocalStorage: Ot,
            getHashFromLocalStorage: function() {
                var e = (0,
                s.default)(N.Z, "hash");
                if (e)
                    return e;
                var t = ue.isVid() ? St() : Tt()
                  , n = le.ZP.get(t);
                if (n)
                    return n;
                var r = Lt();
                if (r)
                    return r;
                var a = le.ZP.get(At());
                return a && Ot({
                    hash: a
                }),
                a
            },
            getFallbackHash: Lt,
            removeCurrentHashFromLocalStorage: function() {
                if (le.ZP.set(At(), null),
                ue.isVid()) {
                    var e = St();
                    if (le.ZP.get(e))
                        return void le.ZP.set(e, null)
                }
                le.ZP.set(Tt(), null)
            },
            getPasswordFromSessionStorage: function() {
                var e = (ue.isVid() ? "v:" : "c:") + ue.id()
                  , t = "c:".concat(N.Z.cId)
                  , n = "ustreamContentPw-".concat(e)
                  , r = "ustreamContentPw-".concat(t);
                try {
                    var a = window.sessionStorage.getItem(n);
                    if (a)
                        return JSON.parse(a).value;
                    var i = window.sessionStorage.getItem(r);
                    return JSON.parse(i).value
                } catch (e) {
                    return
                }
            }
        };
        function Pt(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function Dt(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Pt(Object(n), !0).forEach((function(t) {
                    Rt(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Pt(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function Rt(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var wt, Nt = {
            hash: (wt = _t.getHashFromLocalStorage(),
            Ct(wt) ? wt : void 0),
            password: _t.getPasswordFromSessionStorage(),
            info: {},
            id: null,
            lock: {
                type: "",
                data: {}
            },
            hashInvalid: !1,
            viewerAuthToken: N.Z.viewerToken
        };
        function Ct(e) {
            return "false" !== e
        }
        var Ut = {
            setWebkitSupportsFullscreen: "SET_WEBKIT_SUPPORTS_FULLSCREEN",
            setStreamModuleReceivedDate: "SET_STREAM_MODULE_RECEIVED_DATE",
            setHash: "SET_HASH",
            setPosition: "SET_POSITION"
        }
          , Mt = n(76741);
        function Ft(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function jt(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Ft(Object(n), !0).forEach((function(t) {
                    kt(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ft(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function kt(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var Gt = {
            isBufferEmpty: !0,
            webkitSupportsFullscreen: !1,
            audioTracks: [],
            closedCaptionTracks: [],
            selectedAudio: -1,
            selectedClosedCaption: -2,
            closedCaptionSelection: null,
            closedCaptionVisible: !0,
            stats: {
                storages: {},
                buffers: {}
            },
            videoResolution: "",
            playing: !1,
            progress: 0,
            position: 0,
            ready: !1,
            videoTrackDisabled: !1
        };
        function Bt(e, t) {
            var n = e.event
              , r = e.ranges
              , a = e.streamId;
            return "Atlas.stored" !== n ? t : jt(jt({}, t), {}, kt({}, a, r))
        }
        function Vt(e, t) {
            var n = e.event
              , r = e.ranges
              , a = e.bufferId;
            return "Atlas.buffered" !== n ? t : jt(jt({}, t), {}, kt({}, a, r))
        }
        function xt(e) {
            var t = e.prevTracks
              , n = e.nextTracks
              , r = e.selectedTrack
              , a = t.find((function(e) {
                return e.id === r
            }
            ));
            if (!a)
                return -1;
            var i = n.filter((function(e) {
                var t = e.language
                  , n = e.country;
                return t === a.language && n === a.country
            }
            ))
              , o = i.find((function(e) {
                return e.id === a.id
            }
            ));
            return o ? o.id : (0,
            s.default)(i, "0.id", -1)
        }
        var Ht = n(26879);
        function Zt(e) {
            for (var t = document.cookie.split(";"), n = 0; n < t.length; n += 1) {
                var r = t[n].split("=");
                if (r[0].trim() === e)
                    return decodeURIComponent(r[1])
            }
        }
        function Yt(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function Kt(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Yt(Object(n), !0).forEach((function(t) {
                    Wt(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Yt(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function Wt(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var Qt = "notice_preferences"
          , zt = {
            ibmCookie: le.ZP.get(Qt)
        }
          , Xt = n(81635)
          , qt = n.n(Xt)
          , $t = "SET_TITLE"
          , Jt = "SET_TRIM_INFO"
          , en = n(74504)
          , tn = n(72177);
        function nn() {
            return !(!ue.isVid() && !ue.isOffairVid() || N.Z.isDashboard)
        }
        function rn(e, t) {
            var n = e.initialSeekTimeInMs;
            if (nn() && void 0 !== t) {
                if (n)
                    return n;
                var r = ue.isOffairVid() ? ue.offairVid() : ue.id()
                  , a = tn.Z.getSavedProgressToVideoId(r);
                if (a)
                    return a.progress - fe.Z.CONTINUE_WATCHING_OFFSET_IN_MS
            }
        }
        var an = n(29020);
        function on(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function sn(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? on(Object(n), !0).forEach((function(t) {
                    cn(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : on(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function cn(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var un = {
            title: void 0,
            duration: void 0,
            trimmedDuration: void 0,
            audioOnly: !1,
            videoOnly: !1,
            mediaId: "",
            streamInfo: {},
            mediaType: void 0,
            isReplay: !1,
            thumbnails: {},
            trimInfo: void 0,
            defaultLang: void 0,
            is360Video: void 0,
            fov360Video: void 0,
            offairContent: void 0,
            countryCode: void 0,
            regionCode: void 0,
            liveStatus: void 0,
            initialSeekTimeInMs: void 0,
            isAudioOnlyPlaybackAvailable: !1,
            sourceMedia: void 0
        };
        function dn(e) {
            var t = e.streamFormats;
            return Object.prototype.hasOwnProperty.call(t, "hls/improved") ? (0,
            s.default)(t, "hls/improved.contentAccess.accessList.0.data.hasAudioOnlyPlaylist", !1) : !(Object.prototype.hasOwnProperty.call(t, "flv/segmented") && !qt().capabilities.includes(qt().formats.MP4_SEGMENTED))
        }
        function ln(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function fn(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? ln(Object(n), !0).forEach((function(t) {
                    pn(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ln(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function pn(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var mn = {
            allTimeTotal: null,
            allViewers: null,
            viewers: null
        };
        function gn(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function vn(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? gn(Object(n), !0).forEach((function(t) {
                    En(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : gn(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function En(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function hn(e) {
            return "secureUrl"in e
        }
        function yn(e) {
            var t = e.find(hn);
            if (!t)
                return null;
            var n = t.secureUrl
              , r = t.clickUrl;
            return r ? {
                url: n,
                clickUrl: r
            } : {
                url: n
            }
        }
        var bn = {
            showDefaultLogo: !1,
            customLogo: null
        }
          , Tn = n(38727);
        function Sn(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function On(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Sn(Object(n), !0).forEach((function(t) {
                    Ln(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Sn(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function Ln(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var An = {
            facebook: void 0,
            twitter: void 0,
            mail: void 0,
            embed: void 0,
            copyLink: void 0,
            enabled: !1
        }
          , In = n(25790);
        function _n(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function Pn(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? _n(Object(n), !0).forEach((function(t) {
                    Dn(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : _n(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function Dn(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var Rn = {
            showHiddenContextMenuItems: !1
        };
        function wn(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function Nn(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? wn(Object(n), !0).forEach((function(t) {
                    Cn(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : wn(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function Cn(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var Un = {
            userName: null,
            benefits: null
        }
          , Mn = n(47157);
        function Fn(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function jn(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Fn(Object(n), !0).forEach((function(t) {
                    kn(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Fn(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function kn(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var Gn = n(40576);
        function Bn(e) {
            var t = (0,
            s.default)(e, "location", "");
            return /multicast\//.test(t)
        }
        function Vn(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function xn(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Vn(Object(n), !0).forEach((function(t) {
                    Hn(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Vn(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function Hn(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function Zn(e) {
            return Zn = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            }
            : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }
            ,
            Zn(e)
        }
        var Yn = {
            finalResult: [],
            forcedUrl: "",
            fallback: "",
            location: "",
            preferredLocation: [],
            cdnConfig: {}
        };
        function Kn(e) {
            return "object" !== Zn(e) || null === e ? e : Object.assign(e, {
                isMulticastProvider: Bn(e)
            })
        }
        var Wn = n(70875);
        function Qn(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function zn(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Qn(Object(n), !0).forEach((function(t) {
                    Xn(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Qn(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function Xn(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var qn = {
            stats: {}
        };
        function $n(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function Jn(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? $n(Object(n), !0).forEach((function(t) {
                    er(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : $n(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function er(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var tr = {}
          , nr = n(23353)
          , rr = n(65529);
        function ar(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function ir(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? ar(Object(n), !0).forEach((function(t) {
                    or(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ar(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function or(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var sr = {
            visible: !1,
            message: "",
            icon: "",
            isPermanent: !1,
            timeoutInMs: null
        }
          , cr = {
            fullScreen: !1,
            volume: 100,
            speed: 1,
            theaterMode: {
                visible: function() {
                    if (Ae.get("theaterVisible"))
                        return !0;
                    var e = document.querySelector(".ve-container")
                      , t = e && !e.classList.contains("no-rightbar") && !e.classList.contains("no-socialstream");
                    return !(!Ae.get("sitemode") || !t)
                }(),
                enabled: !1
            },
            statsOverlayVisible: !1,
            debugOverlayVisible: !1,
            assistedReportingOverlayVisible: !1,
            playerSize: {
                width: 0,
                height: 0
            },
            isBrowserOldNotificationVisible: !1,
            isAssistedReportingNotificationVisible: !1,
            loading: !1,
            messageScreens: Object.values(rr.Oh).reduce((function(e, t) {
                return ir(ir({}, e), {}, or({}, t, sr))
            }
            ), {})
        };
        function ur(e) {
            var t = e;
            return e > 100 ? t = 100 : e < 0 && (t = 0),
            t
        }
        function dr(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function lr(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? dr(Object(n), !0).forEach((function(t) {
                    fr(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : dr(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function fr(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var pr = {}
          , mr = n(38891)
          , gr = n(50812);
        function vr(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function Er(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? vr(Object(n), !0).forEach((function(t) {
                    hr(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : vr(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function hr(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function yr(e) {
            return function(e) {
                if (Array.isArray(e))
                    return br(e)
            }(e) || function(e) {
                if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"])
                    return Array.from(e)
            }(e) || function(e, t) {
                if (e) {
                    if ("string" == typeof e)
                        return br(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name),
                    "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? br(e, t) : void 0
                }
            }(e) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }
        function br(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++)
                r[n] = e[n];
            return r
        }
        var Tr = function(e, t) {
            var n = yr(e)
              , r = n.length
              , a = n[r - 1]
              , i = a && a[a.length - 1]
              , o = function(e) {
                return e.msg === t.msg && t.timeStamp - e.timeStamp < 3e3
            };
            return Array.isArray(a) && o(i) ? n[r - 1] = [].concat(yr(a), [t]) : a && o(a) ? n[r - 1] = [a, t] : n = [].concat(yr(e), [t]),
            n
        }
          , Sr = {
            keyFrameInterval: "N/A",
            frameRate: "N/A",
            dropRate: "N/A",
            INIT: {
                groupId: "FLOT",
                status: gr.Q.LOADING,
                data: []
            },
            TIMING: {
                groupId: "FLOT",
                status: gr.Q.LOADING,
                data: [],
                timeToStartInMs: null
            },
            DISCONNECTS: {
                groupId: "FLOT",
                status: gr.Q.SUCCESS,
                data: []
            },
            REJECTS: {
                groupId: "FLOT",
                status: gr.Q.SUCCESS,
                data: []
            },
            EMPTY_MODULE: {
                groupId: "FLOT",
                status: gr.Q.SUCCESS,
                data: []
            },
            DOWNLOAD: {
                groupId: "QOS",
                isEcdn: !1,
                status: gr.Q.SUCCESS,
                data: [],
                highestTotal: 0
            },
            PLAYBACK_RECOVERABLE: {
                groupId: "PLAYBACK",
                status: gr.Q.SUCCESS,
                data: []
            },
            PLAYBACK_NON_RECOVERABLE: {
                groupId: "PLAYBACK",
                status: gr.Q.SUCCESS,
                data: []
            },
            EMPTY_CHUNK: {
                groupId: "PLAYBACK",
                status: gr.Q.SUCCESS,
                data: []
            }
        }
          , Or = "SET_INITIAL_LOADING_TIME"
          , Lr = "SET_UMS_CONNECTION_START_TIME"
          , Ar = "SET_UMS_CONNECTION_CONNECTED_TIME"
          , Ir = "SET_STREAM_MODULE_RECEIVED_TIME"
          , _r = "SET_FIRST_FRAME_TIME";
        function Pr(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function Dr(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Pr(Object(n), !0).forEach((function(t) {
                    Rr(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Pr(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function Rr(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var wr = {
            initialLoadingTime: void 0,
            umsConnectionStartTime: void 0,
            umsConnectionConnectedTime: void 0,
            streamModuleReceivedTime: void 0,
            firstFrameTime: void 0
        }
          , Nr = "RESET_CHAPTERS"
          , Cr = n(90271);
        function Ur(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function Mr(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Ur(Object(n), !0).forEach((function(t) {
                    Fr(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ur(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function Fr(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var jr = {
            panelVisible: !1,
            markersVisible: !0,
            chapters: []
        };
        function kr(e) {
            return e.startsWith("channel")
        }
        var Gr = n(28501);
        function Br(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function Vr(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Br(Object(n), !0).forEach((function(t) {
                    xr(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Br(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function xr(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var Hr, Zr, Yr = ["hideAudioSwitch", "hideCTA", "hidePlayScreen", "hideCaptionSearch", "hideChapters", "hideCustomLogo", "hideLogo", "hideShare", "hideFacebook", "hideTwitter", "hideCopyLink", "hideEmbedCode", "hideCC", "hideTitle", "hideViewerNumbers", "hideLiveBadge", "hideReplayBadge", "hideFullscreen", "hidePlaybackSpeed", "hideSeekbar", "hideAudioOnlyOverlay", "hideThumbnail"].reduce((function(e, t) {
            return Vr(Vr({}, e), {}, xr({}, t, Ae.get(t)))
        }
        ), {}), Kr = {
            key: "root",
            storage: Fe.Z,
            whitelist: []
        }, Wr = {
            key: "provider",
            storage: Fe.Z,
            whitelist: ["forcedUrl"]
        }, Qr = {
            key: "mte_viewer_volume",
            storage: Fe.Z,
            whitelist: ["volume"]
        }, zr = {
            key: "captionSettings",
            storage: Fe.Z,
            whitelist: ["options"]
        }, Xr = {
            key: "hidden_context_menu_items",
            storage: Fe.Z,
            whitelist: ["showHiddenContextMenuItems"]
        }, qr = (0,
        Ue.UY)({
            broadcaster: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Un
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                switch (n) {
                case yt.Z.setMetaModule:
                    var a = Nn({}, e)
                      , i = (0,
                    s.default)(r, "userName", null);
                    a.userName = i;
                    var o = (0,
                    s.default)(r, "broadcaster.benefits");
                    return Array.isArray(o) && (a.benefits = o),
                    a;
                case yt.Z.setBroadcasterModule:
                    var c = (0,
                    s.default)(r, "benefits", []);
                    return Nn(Nn({}, e), {}, {
                        benefits: c
                    });
                default:
                    return e
                }
            },
            captionSearch: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : qe
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                switch (n) {
                case We.Z.toggleCaptionSearchPanel:
                    return ze(ze({}, e), {}, {
                        panelVisibility: r.panelVisibility
                    });
                case We.Z.setSearchText:
                    return ze(ze({}, e), {}, {
                        searchText: r.searchText
                    });
                case Ye:
                    return ze(ze({}, e), {}, {
                        module: r.module,
                        visibility: r.visibility
                    });
                case Ke:
                    var a = r.searchResult;
                    return Array.isArray(a) ? ze(ze({}, e), {}, {
                        searchResult: a.slice().sort((function(e, t) {
                            return e.start_sec - t.start_sec
                        }
                        ))
                    }) : ze(ze({}, e), {}, {
                        searchResult: a
                    });
                case Ze:
                    return ze(ze({}, e), {}, {
                        visibility: r.visibility
                    });
                default:
                    return e
                }
            },
            captionSettings: (0,
            Me.OJ)(zr, (function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : nt
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                switch (n) {
                case $e.Z.setActiveCues:
                    return et(et({}, e), {}, {
                        activeCues: r
                    });
                case $e.Z.setOptions:
                    var a = Ae.get("externalvtt") ? e.options : et(et({}, e.options), r);
                    return a.live ? (a.textAlignLive = a.textAlign,
                    delete a.textAlign) : (a.textAlignVod = a.textAlign,
                    delete a.textAlign),
                    et(et({}, e), {}, {
                        options: a
                    });
                case $e.Z.resetOptions:
                    return et(et({}, e), {}, {
                        options: {}
                    });
                default:
                    return e
                }
            }
            )),
            chapters: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : jr
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                switch (n) {
                case Cr.Z.setChapterMarkersVisibility:
                    return Mr(Mr({}, e), {}, {
                        markersVisible: r
                    });
                case Cr.Z.setChaptersPanelVisibility:
                    return Mr(Mr({}, e), {}, {
                        panelVisible: r
                    });
                case yt.Z.setMetaModule:
                    var a = r.chapters
                      , i = r.mid;
                    if ("string" == typeof i && kr(i))
                        return e;
                    if (!a || 0 === a.length)
                        return Mr(Mr({}, e), {}, {
                            chapters: []
                        });
                    var o = a.map((function(e) {
                        return {
                            position: e.position,
                            title: e.title
                        }
                    }
                    )).sort((function(e, t) {
                        return e.position - t.position
                    }
                    ));
                    return Mr(Mr({}, e), {}, {
                        chapters: o
                    });
                case Nr:
                    return jr;
                default:
                    return e
                }
            },
            content: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : un
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                switch (n) {
                case $t:
                    return sn(sn({}, e), {}, {
                        title: r
                    });
                case en.Z.setDuration:
                    return sn(sn({}, e), {}, {
                        duration: r
                    });
                case en.Z.setTrimmedDuration:
                    return sn(sn({}, e), {}, {
                        trimmedDuration: r,
                        initialSeekTimeInMs: rn(e, r)
                    });
                case en.Z.toggleAudioOnly:
                    return sn(sn({}, e), {}, {
                        audioOnly: r
                    });
                case en.Z.toggleVideoOnly:
                    return sn(sn({}, e), {}, {
                        videoOnly: r
                    });
                case en.Z.setStreamInfo:
                    return sn(sn({}, e), {}, {
                        streamInfo: r.streamInfo
                    });
                case en.Z.setMediaId:
                    return sn(sn({}, e), {}, {
                        mediaId: r.id,
                        offairContent: void 0
                    });
                case en.Z.setMediaType:
                    return sn(sn({}, e), {}, {
                        mediaType: r
                    });
                case yt.Z.setMetaModule:
                    var a = r.isReplay
                      , i = r.cut
                      , o = r.highlight
                      , s = r.defaultLang
                      , c = r.video360
                      , u = r.video360Fov
                      , l = r.live360
                      , f = r.live360Fov
                      , p = r.countryCode
                      , m = void 0 === p ? e.countryCode : p
                      , g = r.regionCode
                      , v = void 0 === g ? e.regionCode : g
                      , E = r.offairContent
                      , h = void 0 === E ? e.offairContent : E
                      , y = u || f;
                    return y = y ? (0,
                    d.Z)(parseInt(y, 10), {
                        lower: 0,
                        upper: 360
                    }) : void 0,
                    sn(sn({}, e), {}, {
                        isReplay: a,
                        trimInfo: i || o,
                        defaultLang: s ? s.replace("-00", "") : void 0,
                        is360Video: c || l,
                        fov360Video: y,
                        offairContent: h,
                        countryCode: m,
                        regionCode: v
                    });
                case yt.Z.setStreamModule:
                    var b = e.isAudioOnlyPlaybackAvailable
                      , T = e.sourceMedia;
                    return (0,
                    an.M)(r) || (b = dn(r),
                    r.contentAvailable && (T = r.sourceMedia)),
                    sn(sn({}, e), {}, {
                        sourceMedia: T,
                        isAudioOnlyPlaybackAvailable: b
                    });
                case yt.Z.setThumbnailModule:
                    return sn(sn({}, e), {}, {
                        thumbnails: r
                    });
                case Jt:
                    return sn(sn({}, e), {}, {
                        trimInfo: r
                    });
                case en.Z.setLiveStatus:
                    return sn(sn({}, e), {}, {
                        liveStatus: r
                    });
                default:
                    return e
                }
            },
            contextMenu: (0,
            Me.OJ)(Xr, (function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Rn
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                if (n === In.Z.toggleHiddenContextMenuItems) {
                    var a = r.isVisible;
                    return Pn(Pn({}, e), {}, {
                        showHiddenContextMenuItems: a
                    })
                }
                return e
            }
            )),
            debug: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Sr
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                switch (n) {
                case mr.Z.addFlotInitDiagnostics:
                    return Er(Er({}, e), {}, {
                        INIT: Er(Er({}, e.INIT), {}, {
                            status: r.inited ? gr.Q.SUCCESS : gr.Q.ERROR
                        })
                    });
                case mr.Z.addFlotDisconnectError:
                    return Er(Er({}, e), {}, {
                        DISCONNECTS: Er(Er({}, e.DISCONNECTS), {}, {
                            status: gr.Q.WARNING,
                            data: [].concat(yr(e.DISCONNECTS.data), [r])
                        })
                    });
                case mr.Z.addFlotRejectError:
                    return Er(Er({}, e), {}, {
                        REJECTS: Er(Er({}, e.REJECTS), {}, {
                            status: gr.Q.ERROR,
                            data: [].concat(yr(e.REJECTS.data), [r])
                        })
                    });
                case mr.Z.addFlotTimingDiagnostics:
                    return Er(Er({}, e), {}, {
                        TIMING: Er(Er({}, e.TIMING), {}, {
                            status: r.timeToStartInMs <= 5e3 ? gr.Q.SUCCESS : gr.Q.WARNING,
                            timeToStartInMs: r.timeToStartInMs
                        })
                    });
                case mr.Z.addFlotEmptyStreamModuleError:
                    var a = r.isEmpty
                      , i = !!e.EMPTY_MODULE.data.length;
                    return i || a ? Er(Er({}, e), {}, {
                        EMPTY_MODULE: Er(Er({}, e.EMPTY_MODULE), {}, {
                            status: gr.Q.WARNING,
                            data: [].concat(yr(e.EMPTY_MODULE.data), [r])
                        })
                    }) : e;
                case mr.Z.addSlowChunkWarning:
                    return Er(Er({}, e), {}, {
                        DOWNLOAD: Er(Er({}, e.DOWNLOAD), {}, {
                            status: gr.Q.WARNING,
                            data: [].concat(yr(e.DOWNLOAD.data), [r]),
                            isEcdn: !!r.isEcdn,
                            highestTotal: e.DOWNLOAD.highestTotal < r.total ? r.total : e.DOWNLOAD.highestTotal
                        })
                    });
                case mr.Z.addPlaybackWarning:
                case mr.Z.addPlaybackError:
                    var o = n === mr.Z.addPlaybackError
                      , s = o ? gr.Q.ERROR : gr.Q.WARNING
                      , c = o ? "PLAYBACK_NON_RECOVERABLE" : "PLAYBACK_RECOVERABLE";
                    return Er(Er({}, e), {}, hr({}, c, Er(Er({}, e[c]), {}, {
                        status: s,
                        data: Tr(e[c].data, r)
                    })));
                case mr.Z.addChunkEmptyWarning:
                    return Er(Er({}, e), {}, {
                        EMPTY_CHUNK: Er(Er({}, e.EMPTY_CHUNK), {}, {
                            status: gr.Q.WARNING,
                            data: [].concat(yr(e.EMPTY_CHUNK.data), [r])
                        })
                    });
                case mr.Z.addKeyFrameDiagnostics:
                    return Er(Er({}, e), {}, {
                        keyFrameInterval: "number" == typeof r.keyFrameInterval ? r.keyFrameInterval : "N/A"
                    });
                case mr.Z.addFrameAndDropRate:
                    var u = r.frameRate
                      , d = void 0 === u ? "N/A" : u
                      , l = r.dropRate
                      , f = void 0 === l ? "N/A" : l;
                    return Er(Er({}, e), {}, {
                        frameRate: d,
                        dropRate: f
                    });
                case mr.Z.resetDebugOverlay:
                    return Sr;
                default:
                    return e
                }
            },
            externalVtt: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : He
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                if (n === Ge.Z.addExternalVtt) {
                    var a = r.vtt;
                    return Ve(Ve({}, e), {}, {
                        hasExternalVtt: !!a.length,
                        vtt: a
                    })
                }
                return e
            },
            flags: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Yr
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                return n === Gr.Z.setFlag ? Vr(Vr({}, e), {}, xr({}, r.feature, r.value)) : e
            },
            liveCTA: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : tr
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                if (n === yt.Z.setLiveCTAModule) {
                    var a = r.remove;
                    if (a)
                        return {};
                    var i = r.activate;
                    return i ? Jn({}, i) : e
                }
                return e
            },
            logo: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : bn
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                if (n === yt.Z.setLogoModule) {
                    var a = r && r.some((function(e) {
                        return !hn(e)
                    }
                    ))
                      , i = r ? yn(r) : null;
                    return vn(vn({}, e), {}, {
                        showDefaultLogo: a,
                        customLogo: i
                    })
                }
                return e
            },
            playback: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Gt
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                switch (n) {
                case Mt.Z.setBufferEmpty:
                    return jt(jt({}, e), {}, {
                        isBufferEmpty: r.isBufferEmpty
                    });
                case Ut.setWebkitSupportsFullscreen:
                    return jt(jt({}, e), {}, {
                        webkitSupportsFullscreen: r.supports
                    });
                case Mt.Z.setAudioTracks:
                    var a = r.tracks
                      , i = xt({
                        prevTracks: e.audioTracks,
                        nextTracks: a,
                        selectedTrack: e.selectedAudio
                    });
                    return jt(jt({}, e), {}, {
                        selectedAudio: i,
                        audioTracks: a
                    });
                case Mt.Z.selectAudio:
                    var o = r.index
                      , c = e.audioTracks.some((function(e) {
                        return e.id === o
                    }
                    ));
                    return c ? jt(jt({}, e), {}, {
                        selectedAudio: o
                    }) : e;
                case Ut.setStreamModuleReceivedDate:
                    var u = r.ts;
                    return jt(jt({}, e), {}, {
                        lastStreamModuleReceived: u
                    });
                case Mt.Z.selectClosedCaption:
                    var l = r.index;
                    return jt(jt({}, e), {}, {
                        selectedClosedCaption: l,
                        closedCaptionVisible: -1 !== l
                    });
                case Mt.Z.setClosedCaptionTracks:
                    var f = r.tracks
                      , p = r.closedCaptionActiveFromLocalStorage
                      , m = e.selectedClosedCaption
                      , g = e.closedCaptionSelection;
                    if (f.length > 0 && -2 === m) {
                        var v = (0,
                        s.default)(f.find((function(e) {
                            return e.default
                        }
                        )), "id", null);
                        v || 0 === v ? (m = v,
                        g = "broadcaster") : p ? (m = 0,
                        g = "history") : (m = -1,
                        g = "manual")
                    }
                    return jt(jt({}, e), {}, {
                        closedCaptionTracks: f,
                        selectedClosedCaption: m,
                        closedCaptionSelection: g
                    });
                case Mt.Z.setCodecInfo:
                    var E = r.codec
                      , h = E.width
                      , y = E.height
                      , b = E.audioCodec
                      , T = E.videoCodec;
                    return jt(jt({}, e), {}, {
                        audio: {
                            codec: b
                        },
                        video: {
                            width: h,
                            height: y,
                            codec: T
                        },
                        videoResolution: h && y ? "".concat(h, "x").concat(y) : null
                    });
                case Mt.Z.setPlaybackStats:
                    var S = Bt(r.stats, e.stats.storages)
                      , O = Vt(r.stats, e.stats.buffers);
                    return jt(jt({}, e), {}, {
                        stats: {
                            storages: S,
                            buffers: O
                        }
                    });
                case Mt.Z.togglePlaying:
                    return jt(jt({}, e), {}, {
                        playing: r
                    });
                case Ut.setHash:
                    return jt(jt({}, e), {}, {
                        hashes: jt(jt({}, e.hashes), r)
                    });
                case Mt.Z.setProgress:
                    return jt(jt({}, e), {}, {
                        progress: (0,
                        d.Z)(r, {
                            lower: 0,
                            upper: 1
                        })
                    });
                case Ut.setPosition:
                    var L = r.position;
                    return jt(jt({}, e), {}, {
                        position: L
                    });
                case Mt.Z.setReady:
                    return jt(jt({}, e), {}, {
                        ready: r
                    });
                case Mt.Z.toggleVideoTrack:
                    return jt(jt({}, e), {}, {
                        videoTrackDisabled: r
                    });
                default:
                    return e
                }
            },
            player: (0,
            Me.OJ)(Qr, (function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : cr
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                switch (n) {
                case nr.Z.toggleFullScreen:
                    return ir(ir({}, e), {}, {
                        fullScreen: r
                    });
                case nr.Z.setVolume:
                    return ir(ir({}, e), {}, {
                        volume: ur(r)
                    });
                case nr.Z.setPlaybackSpeed:
                    return ir(ir({}, e), {}, {
                        speed: r
                    });
                case nr.Z.toggleTheaterMode:
                    var a = ir(ir({}, e.theaterMode), r);
                    return ir(ir({}, e), {}, {
                        theaterMode: a
                    });
                case nr.Z.toggleStatsOverlay:
                    return ir(ir({}, e), {}, {
                        statsOverlayVisible: r,
                        debugOverlayVisible: !1,
                        assistedReportingOverlayVisible: !1
                    });
                case nr.Z.toggleDebugOverlay:
                    return ir(ir({}, e), {}, {
                        debugOverlayVisible: r,
                        statsOverlayVisible: !1,
                        assistedReportingOverlayVisible: !1
                    });
                case nr.Z.toggleAssistedReportingOverlay:
                    return ir(ir({}, e), {}, {
                        debugOverlayVisible: !1,
                        statsOverlayVisible: !1,
                        assistedReportingOverlayVisible: r
                    });
                case nr.Z.resize:
                    return ir(ir({}, e), {}, {
                        playerSize: r
                    });
                case nr.Z.showNotification:
                    var i = r === rr.GT.oldBrowser || e.isBrowserOldNotificationVisible
                      , o = r === rr.GT.assistedReporting || e.isAssistedReportingNotificationVisible
                      , s = ir(ir({}, e), {}, {
                        isBrowserOldNotificationVisible: i,
                        isAssistedReportingNotificationVisible: o
                    });
                    return ir(ir({}, e), s);
                case nr.Z.hideNotification:
                    var c = r !== rr.GT.oldBrowser && e.isBrowserOldNotificationVisible
                      , u = r !== rr.GT.assistedReporting && e.isAssistedReportingNotificationVisible
                      , d = ir(ir({}, e), {}, {
                        isBrowserOldNotificationVisible: c,
                        isAssistedReportingNotificationVisible: u
                    });
                    return ir(ir({}, e), d);
                case nr.Z.closeAssistedReportingNotificationByUser:
                    var l = ir(ir({}, e), {}, {
                        isAssistedReportingNotificationVisible: !1,
                        isAssistedReportingNotificationClosedByUser: !0
                    });
                    return ir(ir({}, e), l);
                case nr.Z.toggleLoading:
                    return ir(ir({}, e), {}, {
                        loading: r
                    });
                case nr.Z.showMessageScreen:
                    var f = r.type
                      , p = e.messageScreens
                      , m = Object.keys(p).reduce((function(e, t) {
                        var n = t === f ? ir(ir({}, p[f]), {}, {
                            visible: !0
                        }, r) : sr;
                        return ir(ir({}, e), {}, or({}, t, n))
                    }
                    ), {});
                    return ir(ir({}, e), {}, {
                        messageScreens: ir({}, m)
                    });
                case nr.Z.hideMessageScreen:
                    var g = r.type
                      , v = e.messageScreens
                      , E = ir(ir({}, sr), {}, {
                        visible: !1
                    });
                    return ir(ir({}, e), {}, {
                        messageScreens: ir(ir({}, v), {}, or({}, g, E))
                    });
                default:
                    return e
                }
            }
            )),
            poll: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : pr
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                if (n === yt.Z.setPollModule) {
                    var a = r.remove;
                    if (a)
                        return {};
                    var i = lr({}, e)
                      , o = (0,
                    s.default)(r, "pollStart");
                    o && (i = lr({}, o));
                    var c = (0,
                    s.default)(r, "pollStop.stoppedAt");
                    return c && Object.assign(i, {
                        stoppedAt: c
                    }),
                    i
                }
                return e
            },
            privacy: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : zt
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type;
                return n === Ht.Z.updatePrivacyCookie ? Kt(Kt({}, e), {}, {
                    ibmCookie: Zt(Qt)
                }) : e
            },
            provider: (0,
            Me.OJ)(Wr, (function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Yn
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                switch (n) {
                case Gn.Z.setProvidersStats:
                    var a = (0,
                    s.default)(r.stats, "finalResult", e.finalResult)
                      , i = (0,
                    s.default)(r.stats, "fallback", e.fallback)
                      , o = (0,
                    s.default)(r.stats, "location", e.location)
                      , c = (0,
                    s.default)(r.stats, "preferredLocation", e.preferredLocation)
                      , u = (0,
                    s.default)(r.stats, "cdnConfig", e.cdnConfig);
                    return xn(xn({}, e), {}, {
                        finalResult: a,
                        fallback: i,
                        location: o,
                        preferredLocation: c,
                        cdnConfig: u
                    });
                case Gn.Z.setCurrentProvider:
                    var d = r.provider
                      , l = Kn(d);
                    return xn(xn({}, e), {}, {
                        currentProvider: l
                    });
                case Gn.Z.setForcedProviderUrl:
                    return xn(xn({}, e), {}, {
                        forcedUrl: r.url
                    });
                default:
                    return e
                }
            }
            )),
            qos: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : qn
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                return n === Wn.Z.setStatsData ? zn(zn({}, e), {}, {
                    stats: zn(zn({}, e.stats), r.stats)
                }) : e
            },
            seekbar: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : gt
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                switch (n) {
                case lt.Z.setActiveMarker:
                    return pt(pt({}, e), {}, {
                        activeMarker: r.activeMarker
                    });
                case lt.Z.clearActiveMarker:
                    return gt;
                default:
                    return e
                }
            },
            settings: function(e, t) {
                var n = t.type
                  , r = t.payload
                  , a = {
                    debug: le.ZP.get(le.Bx) || !!Ae.get("debug"),
                    isTitleVisible: !0
                }
                  , i = void 0 === e ? a : e;
                switch (n) {
                case Mn.Z.toggleDebug:
                    return jn(jn({}, i), {}, {
                        debug: r
                    });
                case Mn.Z.toggleTitleVisibility:
                    return jn(jn({}, i), {}, {
                        isTitleVisible: r
                    });
                default:
                    return i
                }
            },
            share: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : An
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                if (n === yt.Z.setShareModule) {
                    var a = (0,
                    Tn.Z)(r, ["facebook", "twitter", "mail", "embed", "copy-link"])
                      , i = a.facebook
                      , o = a.twitter
                      , s = a.mail
                      , c = a.embed
                      , u = a["copy-link"];
                    return On(On({}, e), {}, {
                        facebook: i,
                        twitter: o,
                        mail: s,
                        embed: c,
                        copyLink: u,
                        enabled: !!r
                    })
                }
                return e
            },
            slideDeck: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : dt
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                switch (n) {
                case rt:
                    return ct({}, dt);
                case at:
                    var a = r.slides.slice().sort((function(e, t) {
                        return (0,
                        s.default)(e, "start", -1) - (0,
                        s.default)(t, "start", -1)
                    }
                    ));
                    return ct(ct({}, e), {}, {
                        slides: a,
                        isEnabled: !0
                    });
                case it:
                    var i = (0,
                    s.default)(r, "slide.url", "")
                      , o = i.length ? r.slide : null;
                    return ct(ct({}, e), {}, {
                        currentSlide: o,
                        isEnabled: !0
                    });
                case ot.Z.setOnboarding:
                    return ct(ct({}, e), {}, {
                        onboarding: r.onboarding
                    });
                case ot.Z.toggleSlideIndexPanel:
                    return ct(ct({}, e), {}, {
                        slideIndexPanelVisible: r
                    });
                default:
                    return e
                }
            },
            tracking: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : wr
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                switch (n) {
                case Or:
                    return Dr(Dr({}, e), {}, {
                        initialLoadingTime: r,
                        umsConnectionStartTime: void 0,
                        umsConnectionConnectedTime: void 0,
                        streamModuleReceivedTime: void 0,
                        firstFrameTime: void 0
                    });
                case Lr:
                    return Dr(Dr({}, e), {}, {
                        umsConnectionStartTime: r,
                        umsConnectionConnectedTime: void 0,
                        streamModuleReceivedTime: void 0,
                        firstFrameTime: void 0
                    });
                case Ar:
                    return Dr(Dr({}, e), {}, {
                        umsConnectionConnectedTime: r,
                        streamModuleReceivedTime: void 0,
                        firstFrameTime: void 0
                    });
                case Ir:
                    return Dr(Dr({}, e), {}, {
                        streamModuleReceivedTime: r,
                        firstFrameTime: void 0
                    });
                case _r:
                    return Dr(Dr({}, e), {}, {
                        firstFrameTime: r
                    });
                default:
                    return e
                }
            },
            ums: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Nt
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                switch (n) {
                case ht.Z.addPassword:
                    return Dt(Dt({}, e), {}, {
                        password: r.password,
                        lock: {
                            type: "",
                            data: {}
                        }
                    });
                case ht.Z.addHash:
                    var a = !Ct(r.hash);
                    return Dt(Dt({}, e), {}, {
                        hashInvalid: a,
                        hash: r.hash,
                        lock: {
                            type: "",
                            data: {}
                        }
                    });
                case vt:
                    return Dt(Dt({}, e), {}, {
                        hash: null
                    });
                case ht.Z.setUmsInfo:
                    return Dt(Dt({}, e), {}, {
                        info: r.info
                    });
                case yt.Z.setMetaModule:
                    return Dt(Dt({}, e), {}, {
                        id: r.umsId
                    });
                case Et:
                    return Dt(Dt({}, e), {}, {
                        lock: {
                            type: r.type,
                            data: r.data
                        }
                    });
                default:
                    return e
                }
            },
            videoTag: function(e, t) {
                var n = e || null
                  , r = t.type
                  , a = t.payload;
                switch (r) {
                case je:
                    return a.videoTag;
                case ke:
                    return null;
                default:
                    return n
                }
            },
            viewers: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : mn
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = t.type
                  , r = t.payload;
                switch (n) {
                case yt.Z.setAllTimeTotalModule:
                    return fn(fn({}, e), {}, {
                        allTimeTotal: r
                    });
                case yt.Z.setAllViewersModule:
                    return fn(fn({}, e), {}, {
                        allViewers: r
                    });
                case yt.Z.setViewersModule:
                    return fn(fn({}, e), {}, {
                        viewers: r
                    });
                default:
                    return e
                }
            }
        }), $r = (0,
        Me.OJ)(Kr, qr), Jr = n(38209), ea = (0,
        c.w)("atlas/logic/api"), ta = {
            COMMAND: "api_command"
        }, na = {}, ra = "api-target-origin";
        function aa(e) {
            return Hr || function(e) {
                try {
                    return new URL(e).origin
                } catch (e) {
                    return ""
                }
            }(e)
        }
        function ia(e, t) {
            var n = document.referrer || window.location.href
              , r = window.parent
              , a = /^(\/internal)?\/combined-embed\//.test(window.location.pathname);
            if ((window === window.parent || a) && (n = window.location.href,
            r = window),
            "progress" !== e && ea.debug("send ", [e, t]),
            n) {
                var i = aa(n);
                if (i) {
                    var o = {
                        event: {}
                    };
                    e.property ? o = e : o.event[e] = t,
                    r.postMessage(JSON.stringify(o), i)
                }
            }
        }
        window.addEventListener("message", (function(e) {
            var t, n, r = e.origin, a = window.location, i = document.referrer || a.href;
            if (i) {
                if (r === aa(i) || (n = [r, a.href].map((function(e) {
                    try {
                        return new URL(e).host
                    } catch (e) {
                        return ""
                    }
                }
                )))[0] === n[1]) {
                    try {
                        t = JSON.parse(e.data)
                    } catch (e) {
                        t = {}
                    }
                    if ("CorsFrame" === t.id && t.sessionId && (0,
                    g.Z)(na, ta.COMMAND, {
                        cmd: "setSession",
                        args: [t.sessionId, !1]
                    }),
                    "setSession" === t.cmd && !function(e) {
                        return /(m|www)\.?(dev)?\.ustream\.tv/gi.test(e)
                    }(r))
                        return;
                    t.cmd && (0,
                    g.Z)(na, ta.COMMAND, t)
                }
            } else
                ea.debug("message event handler error: no referrer ")
        }
        )),
        (Zr = document.getElementById("CorsFrame")) && (o().ssl || Ae.get("sitemode") || Zr.setAttribute("src", Zr.getAttribute("data-src")));
        var oa = function() {
            if (void 0 === window.postMessage)
                return {
                    event: ta,
                    send: function() {},
                    on: function() {}
                };
            if (Ae[ra]) {
                var e = decodeURIComponent(Ae[ra]);
                try {
                    var t = new URL(e);
                    Hr = t.origin
                } catch (e) {
                    ea.error("api-target-origin is not a valid URL")
                }
            }
            return {
                event: ta,
                send: ia,
                on: function(e, t) {
                    na[e] || (na[e] = []),
                    na[e].push(t)
                }
            }
        }()
          , sa = [Mt.Z.selectAudio, Mt.Z.setAudioTracks]
          , ca = [Mt.Z.selectClosedCaption, Mt.Z.setClosedCaptionTracks];
        function ua(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function da(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? ua(Object(n), !0).forEach((function(t) {
                    la(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ua(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function la(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var fa = "is_cc_active"
          , pa = n(83935);
        function ma(e, t) {
            var n = e.find((function(e) {
                return e.id === t
            }
            ));
            if (!n)
                return null;
            var r = n.country
              , a = void 0 === r ? "00" : r
              , i = n.language
              , o = n.isGenerated;
            return {
                language: "".concat(i, "-").concat(a),
                generated: o
            }
        }
        function ga(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function va(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? ga(Object(n), !0).forEach((function(t) {
                    Ea(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ga(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function Ea(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function ha(e, t) {
            return function(e) {
                if (Array.isArray(e))
                    return e
            }(e) || function(e, t) {
                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != n) {
                    var r, a, i = [], o = !0, s = !1;
                    try {
                        for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value),
                        !t || i.length !== t); o = !0)
                            ;
                    } catch (e) {
                        s = !0,
                        a = e
                    } finally {
                        try {
                            o || null == n.return || n.return()
                        } finally {
                            if (s)
                                throw a
                        }
                    }
                    return i
                }
            }(e, t) || function(e, t) {
                if (e) {
                    if ("string" == typeof e)
                        return ya(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name),
                    "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? ya(e, t) : void 0
                }
            }(e, t) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }
        function ya(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++)
                r[n] = e[n];
            return r
        }
        var ba = n(38557)
          , Ta = n(30639)
          , Sa = (0,
        Ue.MT)($r, {}, (0,
        Jr.U)((0,
        Ue.md)((function() {
            return function(e) {
                return function(t) {
                    return t.type === ht.Z.addHash && ("false" !== t.payload.hash ? _t.saveHashToLocalStorage(t.payload) : _t.removeCurrentHashFromLocalStorage()),
                    t.type === ht.Z.removeHash && _t.removeCurrentHashFromLocalStorage(),
                    e(t)
                }
            }
        }
        ), (function(e) {
            return function(t) {
                return function(n) {
                    var r = t(n);
                    if (sa.includes(n.type)) {
                        var a = e.getState().playback
                          , i = a.selectedAudio
                          , o = a.audioTracks;
                        if (o.length > 0) {
                            var s = o.map((function(e) {
                                var t = e.id;
                                return {
                                    index: t,
                                    label: e.label,
                                    language: e.language,
                                    country: e.country,
                                    active: i === t
                                }
                            }
                            ));
                            oa.send("audio", s)
                        }
                    }
                    return r
                }
            }
        }
        ), (function(e) {
            return function(t) {
                return function(n) {
                    var r = t(n);
                    if (ca.includes(n.type)) {
                        var a = (0,
                        Ce.I6)(e.getState())
                          , i = e.getState().playback.selectedClosedCaption;
                        if (a.length > 0) {
                            var o = a.map((function(e) {
                                var t = e.id;
                                return {
                                    index: t,
                                    label: e.label,
                                    language: e.language,
                                    country: e.country,
                                    active: i === t
                                }
                            }
                            ));
                            oa.send("cc", o)
                        }
                    }
                    return r
                }
            }
        }
        ), (function(e) {
            return function(t) {
                return function(n) {
                    if (n.type === Mt.Z.selectClosedCaption) {
                        var r = n.payload.index >= 0;
                        le.ZP.set(fa, r, {
                            expires: 3650
                        })
                    }
                    if (n.type === Mt.Z.setClosedCaptionTracks && -2 === e.getState().playback.selectedClosedCaption) {
                        var a = le.ZP.get(fa)
                          , i = da(da({}, n.payload), {}, {
                            closedCaptionActiveFromLocalStorage: a
                        });
                        return t(da(da({}, n), {}, {
                            payload: i
                        }))
                    }
                    return t(n)
                }
            }
        }
        ), (function(e) {
            return function(t) {
                return function(n) {
                    if (n.type === Ut.selectClosedCaption) {
                        var r = (0,
                        s.default)(e.getState(), "playback.selectedClosedCaption")
                          , a = (0,
                        s.default)(n, "payload.index");
                        if (r !== a) {
                            var i = (0,
                            s.default)(e.getState(), "playback.closedCaptionTracks", [])
                              , o = (0,
                            s.default)(e.getState(), "content.mediaType") === pa.w_.live ? "live" : "vod";
                            if (a > -1) {
                                var c = ma(i, a);
                                c && Ne.send({
                                    message: "Turn on CC",
                                    data: {
                                        category: "Interaction",
                                        item: "CC",
                                        action: "turn_on",
                                        type: o,
                                        language: c.language,
                                        generated: c.generated
                                    }
                                })
                            } else {
                                var u = ma(i, r);
                                u && Ne.send({
                                    message: "Turn off CC",
                                    data: {
                                        category: "Interaction",
                                        item: "CC",
                                        action: "turn_off",
                                        type: o,
                                        language: u.language,
                                        generated: u.generated
                                    }
                                })
                            }
                        }
                    }
                    return t(n)
                }
            }
        }
        ), (function(e) {
            return function(t) {
                return function(n) {
                    var r = t(n);
                    if (n.type === Mn.Z.toggleDebug) {
                        var a = e.getState().settings.debug;
                        le.ZP.set(le.Bx, a)
                    }
                    return r
                }
            }
        }
        ), (function() {
            return function(e) {
                return function(t) {
                    var n = t.type
                      , r = t.payload;
                    if (n === yt.Z.setThumbnailModule) {
                        var a = function(e) {
                            return /SecureUrl$/.test(e)
                        }
                          , i = Object.fromEntries(Object.entries(r).filter((function(e) {
                            var t = ha(e, 1)[0];
                            return o().ssl && a(t) || !o().ssl && !a(t)
                        }
                        )).map((function(e) {
                            var t = ha(e, 2)
                              , n = t[0]
                              , r = t[1];
                            return [n.replace(/(?:Secure)?Url$/, ""), r]
                        }
                        )));
                        return e(va(va({}, t), {}, {
                            payload: i
                        }))
                    }
                    return e(t)
                }
            }
        }
        ), ba.Z, (function() {
            return function(e) {
                return function(t) {
                    if (t.type === en.Z.setTrimmedDuration) {
                        if (!nn())
                            return e(t);
                        var n = t.payload
                          , r = ue.isOffairVid() ? ue.offairVid() : ue.id()
                          , a = tn.Z.getSavedProgressToVideoId(r);
                        if (void 0 === n || !a)
                            return e(t);
                        var i = a.progress
                          , o = a.cut
                          , s = o ? ue.getRelativeSeekPositionInMs(i) : i
                          , c = o && (o.cutStart !== ue.getCutStart() || o.cutEnd !== ue.getCutEnd())
                          , u = 1e3 * t.payload
                          , d = s - fe.Z.CONTINUE_WATCHING_OFFSET_IN_MS
                          , l = d < 0 || d >= u - fe.Z.CONTINUE_WATCHING_OFFSET_IN_MS - 500;
                        (c || l) && tn.Z.removeProgressForVideoId(r)
                    }
                    if (t.type === Ut.setPosition) {
                        if (!nn())
                            return e(t);
                        var f = t.payload
                          , p = f.position
                          , m = f.sourceMedia
                          , g = ue.getHighlight()
                          , v = !g || 0 === g.cutStart && 1 === g.cutEnd ? void 0 : g;
                        tn.Z.saveProgressToCurrentVideoId(p, "".concat(m), v)
                    }
                    return e(t)
                }
            }
        }
        ), Ta.Z)));
        (0,
        Me.p5)(Sa);
        var Oa = Sa
          , La = (0,
        n(17719).Z)(Oa)
          , Aa = {};
        function Ia() {
            Aa = {}
        }
        function _a() {
            return Object.keys(Aa.ums).reduce((function(e, t) {
                var n = Aa.ums[t].endTime;
                return n > e ? n : e
            }
            ), 0)
        }
        var Pa = {
            cleanup: Ia,
            setInitStart: function() {
                var e;
                Aa.initStart = Date.now();
                var t = (0,
                Ce.hz)(La.getState())
                  , n = t.width
                  , r = t.height
                  , a = performance.getEntries()[0].responseEnd
                  , i = null === (e = performance.getEntries().find((function(e) {
                    return e.name.includes("ustream-player.atlas-hlsjs")
                }
                ))) || void 0 === e ? void 0 : e.duration;
                Ne.send({
                    message: "Initial loading started",
                    data: {
                        category: "Loading",
                        item: "initial loading",
                        action: "started",
                        width: n,
                        height: r,
                        time_spent: i,
                        time_spent_from_init: a
                    }
                })
            },
            reportUmsConnectionStart: function(e) {
                Aa.ums = Aa.ums || {},
                Aa.ums[e] = {
                    startTime: Date.now()
                },
                Ne.send({
                    message: "UMS connection started",
                    data: {
                        category: "Loading",
                        item: "UMS connection",
                        action: "connected",
                        autoplay: Ae.get("autoplay"),
                        time_spent_from_init: Aa.ums[e].startTime - Aa.initStart
                    }
                })
            },
            reportUmsConnectionFinished: function(e) {
                Aa.ums && Aa.ums[e] && (Aa.ums[e].endTime = Date.now(),
                Ne.send({
                    message: "UMS connection completed",
                    data: {
                        category: "Loading",
                        item: "UMS connection",
                        action: "connected",
                        autoplay: Ae.get("autoplay"),
                        time_spent: Aa.ums[e].endTime - Aa.ums[e].startTime,
                        time_spent_from_init: Aa.ums[e].endTime - Aa.initStart
                    }
                }))
            },
            reportThumbnailModuleReceived: function() {
                Aa.ums && (Aa.thumbnailModule = Date.now(),
                Ne.send({
                    message: "Thumbnail module received",
                    data: {
                        category: "Loading",
                        item: "Thumbnail module",
                        action: "received",
                        time_spent: Aa.thumbnailModule - _a(),
                        time_spent_from_init: Aa.thumbnailModule - Aa.initStart,
                        autoplay: Ae.get("autoplay")
                    }
                }))
            },
            reportStreamModuleReceived: function() {
                Aa.ums && (Aa.streamModule = Date.now(),
                Ne.send({
                    message: "Stream module received",
                    data: {
                        category: "Loading",
                        item: "stream module",
                        action: "received",
                        time_spent_from_init: Aa.streamModule - Aa.initStart,
                        time_spent: Aa.streamModule - _a(),
                        autoplay: Ae.get("autoplay")
                    }
                }))
            },
            reportThumbnailShown: function() {
                Aa.thumbnailShown = Date.now(),
                Ne.send({
                    message: "Thumbnail shown",
                    data: {
                        category: "Loading",
                        item: "Thumbnail",
                        action: "shown",
                        time_spent: Aa.thumbnailShown - Aa.thumbnailModule,
                        time_spent_from_init: Aa.thumbnailShown - Aa.initStart,
                        autoplay: Ae.get("autoplay")
                    }
                })
            },
            reportFirstTimeUpdate: function() {
                var e = Date.now();
                Ne.send({
                    message: "First time update",
                    data: {
                        category: "Playback",
                        item: "playback",
                        action: "started",
                        time_spent: e - Aa.streamModule,
                        time_spent_from_init: e - Aa.initStart,
                        autoplay: Ae.get("autoplay")
                    }
                }),
                Ia()
            },
            reportFirstPlayCall: function() {
                Aa.firstPlayCall = Date.now(),
                Ne.send({
                    message: "First Play call",
                    data: {
                        category: "Interaction",
                        item: "playback",
                        action: "requested",
                        time_spent: Aa.firstPlayCall - Aa.streamModule,
                        time_spent_from_init: Aa.firstPlayCall - Aa.initStart,
                        autoplay: Ae.get("autoplay")
                    }
                })
            },
            reportInitialBufferingCompleted: function() {
                Ne.send({
                    message: "Initial buffering completed",
                    data: {
                        category: "Loading",
                        item: "buffering",
                        action: "first_completed",
                        time_spent: Date.now() - Aa.firstPlayCall
                    }
                })
            }
        }
          , Da = n(43308)
          , Ra = n(71489)
          , wa = n.n(Ra);
        function Na(e) {
            return {
                type: yt.Z.setMetaModule,
                payload: e
            }
        }
        function Ca(e) {
            return {
                type: yt.Z.setLiveCTAModule,
                payload: e
            }
        }
        function Ua(e) {
            return {
                type: yt.Z.setThumbnailModule,
                payload: e
            }
        }
        function Ma(e) {
            return {
                type: yt.Z.setPollModule,
                payload: e
            }
        }
        function Fa(e) {
            return Fa = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            }
            : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }
            ,
            Fa(e)
        }
        var ja = (0,
        c.w)("atlas/data/datamanager")
          , ka = {}
          , Ga = ["broadcaster", "caption", "slides", "meta", "poll", "livecta", "qos", "share", "stream", "tcdn"];
        function Ba(e) {
            var t = {};
            if ("boolean" == typeof e)
                return e;
            for (var n = 0; n < e.length; n++)
                t[e[n].name] = e[n];
            return t
        }
        function Va(e) {
            var t, n = e.name, r = e.payload;
            switch (n) {
            case "stream":
                return La.dispatch(function(e) {
                    return {
                        type: yt.Z.setStreamModule,
                        payload: e
                    }
                }(r));
            case "meta":
                return La.dispatch(Na(r));
            case "allTimeTotal":
                return La.dispatch(function(e) {
                    return {
                        type: yt.Z.setAllTimeTotalModule,
                        payload: e
                    }
                }(r));
            case "allViewers":
                return La.dispatch(function(e) {
                    return {
                        type: yt.Z.setAllViewersModule,
                        payload: e
                    }
                }(r));
            case "viewers":
                return La.dispatch(function(e) {
                    return {
                        type: yt.Z.setViewersModule,
                        payload: e
                    }
                }(r));
            case "logo":
                return La.dispatch(function(e) {
                    return {
                        type: yt.Z.setLogoModule,
                        payload: e
                    }
                }(r));
            case "share":
                return La.dispatch(function(e) {
                    return {
                        type: yt.Z.setShareModule,
                        payload: e
                    }
                }(r));
            case "broadcaster":
                return La.dispatch(function(e) {
                    return {
                        type: yt.Z.setBroadcasterModule,
                        payload: e
                    }
                }(r));
            case "livecta":
                return La.dispatch(Ca(r));
            case "thumbnail":
                return La.dispatch(Ua(r));
            case "poll":
                if (null === (t = r) || (Array.isArray(t) ? 0 === t.length : "object" === Fa(t) && 0 === Object.keys(t).length))
                    return;
                return La.dispatch(Ma(r));
            default:
                return ja.debug("".concat(n, " module received but haven't added to the store")),
                null
            }
        }
        var xa = function(e) {
            ja.debug("createMedia: ".concat(e), void 0, !0),
            ka[e] = {}
        }
          , Ha = function(e, t) {
            if (e && ka[e] && void 0 !== t && t instanceof Object) {
                for (var n in t)
                    -1 === Ga.indexOf(n) && ("object" !== Fa(t[n]) || null === t[n] || Array.isArray(t[n]) || (t[n].mid = e),
                    ka[e][n] = t[n],
                    Va({
                        name: n,
                        payload: t[n]
                    }),
                    A(S, "".concat(n, "Update"), t[n]),
                    A(O, L.MODULE_INFO, {
                        mid: e,
                        send: n
                    }));
                for (var r = 0; r < Ga.length; ++r)
                    void 0 !== t[Ga[r]] && ("object" !== Fa(t[Ga[r]]) || null === t[Ga[r]] || Array.isArray(t[Ga[r]]) || (t[Ga[r]].mid = e),
                    "share" === Ga[r] && (t[Ga[r]] = Ba(t[Ga[r]])),
                    ka[e][Ga[r]] = t[Ga[r]],
                    Va({
                        name: Ga[r],
                        payload: t[Ga[r]]
                    }),
                    A(S, "".concat(Ga[r], "Update"), t[Ga[r]]),
                    A(O, L.MODULE_INFO, {
                        mid: e,
                        send: Ga[r]
                    }))
            }
        }
          , Za = function(e) {
            ja.debug("destroyMedia:", e),
            delete ka[e]
        }
          , Ya = n(26451)
          , Ka = n(87757)
          , Wa = n(4469)
          , Qa = n(25657)
          , za = n(24396)
          , Xa = n(63647)
          , qa = (0,
        c.w)("htmlApiProxy")
          , $a = Math.pow(10, 3)
          , Ja = !1
          , ei = 0
          , ti = 0
          , ni = 0
          , ri = 0;
        function ai(e) {
            Ja = e
        }
        function ii(e) {
            ei = e
        }
        function oi(e) {
            ti = e
        }
        function si(e) {
            var t = function(e) {
                var t = ue.getDurationInMillisec() / 1e3;
                return 0 === e || 0 === t ? 0 : ue.isHLS() ? ue.getTrimmedDurationInMillisec() / 1e3 * e : e * t - t * ue.getCutStart()
            }(e);
            ni = Math.round(t * $a) / $a
        }
        function ci(e) {
            ri = e
        }
        function ui(e, t) {
            var n = {
                property: {}
            };
            n.property[e] = t,
            oa.send(n)
        }
        function di(e) {
            switch (qa.debug("api command received", e),
            e.cmd) {
            case "probe":
                (0,
                Ce.DK)(La.getState()) && oa.send("ready", !0);
                break;
            case "play":
                Ae.set("autoplay", !0),
                U().setPlay();
                break;
            case "pause":
                U().setPause();
                break;
            case "stop":
                U().setPause(),
                U().setSeek(0);
                break;
            case "load":
                A(b, L.LOAD, e.args),
                Ja && A(b, L.PLAY);
                break;
            case "seek":
                var t = 1e3 * e.args[0]
                  , n = ue.getTrimmedDurationInMillisec();
                if (!qt().initialized || !n)
                    return void ue.saveSeek({
                        positionInMs: t,
                        initiator: C._.USER
                    });
                if (t < 0 || t > n)
                    return;
                ue.resetSavedSeek();
                var r = t / n;
                U().setSeek(r);
                break;
            case "volume":
                if (null !== e.args[0])
                    return void La.dispatch((0,
                    rr.jA)(e.args[0]));
                var a = qt().initialized ? 100 * qt().getVolume() : null;
                ui(e.cmd, a);
                break;
            case "content":
                ui(e.cmd, [ue.app()].concat(ue.ids()));
                break;
            case "playingContent":
                !function(e) {
                    ue.isCid() && !ue.live() ? ui(e.cmd, ri ? ["recorded", ri] : []) : ui(e.cmd, [ue.app()].concat(ue.ids()))
                }(e);
                break;
            case "duration":
                ui(e.cmd, ue.getDurationInMillisec() / 1e3);
                break;
            case "progress":
                ui(e.cmd, ni);
                break;
            case "visibility":
                ui(e.cmd, La.getState().flags);
                break;
            case "viewers":
                ui(e.cmd, ti);
                break;
            case "allTimeTotalViewers":
                ui(e.cmd, ei);
                break;
            case "quality":
                var i = e.args[0];
                A(b, L.QUALITY_CHANGE, i);
                break;
            case "setSession":
                U().setSession(e.args);
                break;
            case "setTitleVisibility":
                var o = !!e.args[0];
                La.dispatch((0,
                Wa.w)(o));
                break;
            case "pollAnswer":
                U().setPollAnswer(e.args[0]);
                break;
            case "pollTracking":
                U().setPollTracking(e.args[0]);
                break;
            case "cc":
                La.dispatch((0,
                Ka.JM)(parseInt(e.args[0], 10)));
                break;
            case "setExternalVtt":
                La.dispatch((0,
                Ya.R)(e.args[0][0].forVTTCue));
                break;
            case "audio":
                La.dispatch((0,
                Ka.Ft)(parseInt(e.args[0], 10)));
                break;
            case "theater":
                La.dispatch((0,
                rr.Eu)({
                    visible: e.args[0]
                }));
                break;
            case "webkitEnterFullscreen":
                try {
                    var s = qt().getVideoTag();
                    (0,
                    Qa.g)(s)
                } catch (e) {
                    oa.send("error", {
                        name: "webkitEnterFullscreenRejected",
                        message: e.message
                    })
                }
                break;
            case "stats":
                var c = (0,
                Ce.af)(La.getState());
                ui(e.cmd, c);
                break;
            case "sendLog":
                var u = U();
                u.setLogSendingStarted(),
                (0,
                Xa.Z)({
                    onProgress: u.setLogSendingProgress
                }).then((function(e) {
                    u.setLogSendingCompleted(e)
                }
                )).catch((function(e) {
                    qa.error(e.message),
                    u.setLogSendingCompleted()
                }
                ));
                break;
            case "hideAudioSwitch":
            case "hideCTA":
            case "hidePlayScreen":
            case "hideCaptionSearch":
            case "hideChapters":
            case "hideCustomLogo":
            case "hideLogo":
            case "hideShare":
            case "hideFacebook":
            case "hideTwitter":
            case "hideCopyLink":
            case "hideEmbedCode":
            case "hideCC":
            case "hideTitle":
            case "hideViewerNumbers":
            case "hideLiveBadge":
            case "hideReplayBadge":
            case "hideFullscreen":
            case "hidePlaybackSpeed":
            case "hideSeekbar":
            case "hideAudioOnlyOverlay":
            case "hideThumbnail":
                La.dispatch((0,
                za.m)({
                    feature: e.cmd,
                    value: e.args[0]
                }))
            }
        }
        var li, fi, pi = function() {
            I(S, L.ALLTIMETOTAL_UPDATE, ii),
            I(S, L.VIEWERS_UPDATE, oi),
            I(T, L.PLAYING, ai),
            I(T, L.PROGRESS, si),
            I(T, L.CREATE_OFFAIR_VIDEO, ci),
            oa.on(oa.event.COMMAND, di),
            Ae.get("viewingexperience") && window.$ && (window.$.capture("HIDETHEATERBUTTON", (function() {
                return La.dispatch((0,
                rr.Eu)({
                    visible: !1
                }))
            }
            )),
            window.$.capture("SHOWTHEATERBUTTON", (function() {
                return La.dispatch((0,
                rr.Eu)({
                    visible: !0
                }))
            }
            )))
        }, mi = n(33484), gi = n.n(mi), vi = n(37255), Ei = n(38172), hi = {}, yi = {}, bi = (0,
        c.w)("atlas/logic/stats/aggregator");
        function Ti() {
            var e;
            if ((0,
            vi.Z)(hi)) {
                for (e in hi)
                    hi[e].common && hi[e].common.bufempty.length && (hi[e].common.bufempty = hi[e].common.bufempty.pop().value),
                    A(O, L.SEND_REPORT, {
                        mid: e,
                        send: {
                            cmd: "stats",
                            data: [hi[e]]
                        }
                    });
                hi = {}
            }
        }
        function Si() {
            var e, t, n;
            if ((0,
            vi.Z)(yi)) {
                for (e in yi) {
                    if (yi[e].benchmark && yi[e].benchmark.bwrpt && yi[e].benchmark.bwrpt.length)
                        for (t = yi[e].benchmark.bwrpt,
                        n = 0; n < t.length - 1; ++n)
                            t[n].url === t[n + 1].url && (t[n].size += t[n + 1].size,
                            t[n].time += t[n + 1].time,
                            t.splice(n + 1, 1),
                            n--);
                    A(O, L.SEND_REPORT, {
                        mid: e.split("_").join("."),
                        send: {
                            cmd: "stats",
                            data: [yi[e]]
                        }
                    })
                }
                yi = {}
            }
        }
        function Oi() {
            hi = {},
            yi = {},
            clearInterval(li),
            clearInterval(fi),
            li = window.setInterval(Ti, 1e3),
            fi = window.setInterval(Si, 5e3)
        }
        var Li = {
            init: function() {
                Oi()
            },
            feed: function(e, t) {
                bi.debug("aggregator feed", {
                    mid: e,
                    data: t
                }),
                t.common && void 0 !== t.common.bufempty && (hi[e] = hi[e] ? hi[e] : {
                    common: {
                        bufempty: []
                    }
                },
                t.common.strurl && (hi[e].common.strurl = t.common.strurl,
                delete t.common.strurl),
                hi[e].common.bufempty.push({
                    value: t.common.bufempty,
                    time: (new Date).getTime()
                }),
                delete t.common.bufempty,
                (0,
                vi.Z)(t.common) || delete t.common),
                (0,
                vi.Z)(t) && (yi[e] ? (0,
                Ei.Z)(t, yi[e]) : yi[e] = t)
            },
            feedImmediate: function(e, t) {
                A(O, L.SEND_REPORT, {
                    mid: e,
                    send: {
                        cmd: "stats",
                        data: [t]
                    }
                })
            },
            reset: Oi
        }
          , Ai = n(40126)
          , Ii = n(50420)
          , _i = n(51361)
          , Pi = n(37722)
          , Di = n(62549);
        function Ri(e) {
            return {
                type: Lr,
                payload: e
            }
        }
        function wi(e) {
            return function(e) {
                if (Array.isArray(e))
                    return Ci(e)
            }(e) || function(e) {
                if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"])
                    return Array.from(e)
            }(e) || Ni(e) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }
        function Ni(e, t) {
            if (e) {
                if ("string" == typeof e)
                    return Ci(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name),
                "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Ci(e, t) : void 0
            }
        }
        function Ci(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++)
                r[n] = e[n];
            return r
        }
        var Ui, Mi, Fi, ji, ki, Gi, Bi, Vi, xi, Hi, Zi = 3e5, Yi = "ecdnPreferredLocation", Ki = 0, Wi = {
            pingPath: "/ping",
            pingThreads: 6,
            pingRounds: 1,
            pingTimeout: 400,
            addRndParam: !0,
            locationPriority: []
        }, Qi = {}, zi = {}, Xi = {}, qi = 0, $i = le.ZP.get(Yi) || [], Ji = !0, eo = (0,
        c.w)("atlas/logic/sdcdnHandler"), to = (0,
        c.w)("atlas/logic/sdcdnHandler"), no = La.getState().provider.forcedUrl, ro = (0,
        _i.default)(no) ? no : null;
        function ao(e) {
            var t = e && e.result && e.result.time > -1;
            eo.debug("Ping result", e),
            t && ((!xi || xi.time > e.result.time) && (xi = e.result),
            !Mi && Qi[Bi] && (Mi = !0,
            eo.debug("Send first result"),
            co([e.result], Bi))),
            Hi.onStat({
                type: "overlay",
                data: {
                    pingResult: e
                }
            })
        }
        function io(e) {
            var t, n;
            qi = (new Date).getTime(),
            Xi[Bi] = e,
            eo.debug("Pings finished", {
                duration: qi - ki,
                data: Xi[Bi]
            }),
            co(Xi[Bi], Bi),
            ji = Bi,
            Bi = !1,
            zi[n = ji] && (!Xi[n] && zi[n] || !Xi[n].some((function(e) {
                return uo(e.url)
            }
            )) && zi[n].data.some((function(e) {
                return e.useBestSite
            }
            ))) ? (t = Ki ? 1e3 : 0,
            t = Math.min(Zi, t * Math.pow(2, Ki - 1)) + Math.floor(5e3 * Math.random()),
            eo.debug("Retry ecdn pings in ".concat(Math.round(t / 1e3), "sec")),
            clearTimeout(Ui),
            Ui = setTimeout((function() {
                Ki += 1,
                po()
            }
            ), t)) : Ki = 0,
            Hi.onStat({
                type: "report",
                data: qi - ki
            })
        }
        function oo(e) {
            to.debug(e.line, e.data)
        }
        function so(e) {
            to.error("SDCDN lib error:", e)
        }
        function co(e, t) {
            if (Qi[t] && e)
                if (ro)
                    !function(e, t) {
                        eo.debug("Send forced providers", {
                            mid: t,
                            results: ro
                        });
                        var n = e.find((function(e) {
                            return e.url === ro
                        }
                        ));
                        if (n) {
                            var r = [{
                                url: n.url,
                                location: n.location
                            }];
                            Qi[t].providers = r,
                            Hi.onComplete(t, {
                                stream: Qi[t]
                            }),
                            Hi.onStat({
                                type: "overlay",
                                data: {
                                    finalResult: Xi[t],
                                    fallback: "not available",
                                    location: "not available",
                                    preferredLocation: $i,
                                    forcedProvider: ro,
                                    cdnConfig: zi[ji]
                                }
                            })
                        }
                    }(e, t);
                else {
                    var n = e
                      , r = function(e) {
                        var t = lo(e);
                        if (!t)
                            return !0;
                        var n = function(e) {
                            var t = [];
                            return e.forEach((function(e) {
                                e.data.forEach((function(n) {
                                    Object.prototype.hasOwnProperty.call(n, "cdnFallbackEnabled") && t.push({
                                        location: n.location,
                                        cdnFallbackEnabled: n.cdnFallbackEnabled,
                                        group: e.name
                                    })
                                }
                                ))
                            }
                            )),
                            t
                        }(t);
                        if (!n.length)
                            return !0;
                        if ((0,
                        Ii.Z)($i) && $i.length) {
                            var r = n.filter((function(e) {
                                return $i.indexOf("".concat(e.group, "/").concat(e.location)) > -1
                            }
                            ));
                            if (r.length)
                                return r[0].cdnFallbackEnabled
                        }
                        return n.some((function(e) {
                            return e.cdnFallbackEnabled
                        }
                        ))
                    }(t)
                      , a = xi && xi.location;
                    eo.debug("use cdn fallback: ".concat(r)),
                    a && function(e) {
                        if ($i && (0,
                        Ii.Z)($i)) {
                            var t = $i.indexOf(e);
                            t > -1 && $i.splice(t, 1),
                            $i.unshift(e),
                            $i = $i.slice(0, 5)
                        } else
                            $i = [e];
                        le.ZP.set(Yi, $i)
                    }(a),
                    r || (n = e.filter((function(e) {
                        return e.location === a
                    }
                    ))),
                    n = function(e) {
                        var t, n, r = e.reduce((function(e, t) {
                            return function(e) {
                                var t = e.location || "";
                                return /^fallback\//i.test(t)
                            }(t) ? e[1].push(t) : e[0].push(t),
                            e
                        }
                        ), [[], []]), a = (n = 2,
                        function(e) {
                            if (Array.isArray(e))
                                return e
                        }(t = r) || function(e, t) {
                            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                            if (null != n) {
                                var r, a, i = [], o = !0, s = !1;
                                try {
                                    for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value),
                                    !t || i.length !== t); o = !0)
                                        ;
                                } catch (e) {
                                    s = !0,
                                    a = e
                                } finally {
                                    try {
                                        o || null == n.return || n.return()
                                    } finally {
                                        if (s)
                                            throw a
                                    }
                                }
                                return i
                            }
                        }(t, n) || Ni(t, n) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()), i = a[0], o = a[1];
                        return [].concat(wi(i), wi(o))
                    }(n),
                    Qi[t].providers = (0,
                    Ai.Z)(n),
                    eo.debug("Send results", {
                        mid: t,
                        results: Qi[t].providers
                    }),
                    Hi.onComplete(t, {
                        stream: Qi[t]
                    }),
                    Hi.onStat({
                        type: "overlay",
                        data: {
                            finalResult: n,
                            fallback: r,
                            location: a,
                            preferredLocation: $i,
                            forcedProvider: ro,
                            cdnConfig: zi[ji]
                        }
                    }),
                    clearTimeout(Gi),
                    Gi = setTimeout(fo, Zi)
                }
        }
        function uo(e) {
            var t, n, r = decodeURIComponent(e).toLowerCase();
            for (t in zi)
                if (Object.prototype.hasOwnProperty.call(zi, t))
                    return (n = zi[t].data,
                    n.filter((function(e) {
                        return e.useBestSite
                    }
                    )).reduce((function(e, t) {
                        var n = t.data.reduce((function(e, t) {
                            return e.concat(t.sites)
                        }
                        ), []);
                        return e.concat(n)
                    }
                    ), [])).some((function(e) {
                        var t = e.host.toLowerCase();
                        return r.indexOf(t) > -1 || t.indexOf(r) > -1
                    }
                    ));
            return !1
        }
        function lo(e) {
            var t;
            return zi[e] && (t = zi[e].data.filter((function(e) {
                return e.useBestSite
            }
            )).map((function(e) {
                return (0,
                Ai.Z)(e)
            }
            ))),
            t && t.length ? t : null
        }
        function fo(e) {
            var t = e || ji;
            (new Date).getTime() - qi >= Zi && Qi[t] && zi[t] && !Bi && (Gi = clearTimeout(Gi),
            $i && (Wi.locationPriority = $i),
            (-1 === t.indexOf("recorded") || t.indexOf("recorded") > -1 && !Xi[t]) && (ki = (new Date).getTime(),
            Bi = t,
            Pi.Z.test(zi[t], Wi)))
        }
        function po() {
            Bi || (qi = 0,
            eo.debug("Force tests"),
            fo())
        }
        function mo(e) {
            eo.debug("force provider ", e || "off"),
            ro = ro === e ? null : e,
            co(Xi[ji], ji)
        }
        Hi = {
            update: function(e, t) {
                e !== ji && (qi = 0);
                var n, r = (0,
                Ai.Z)(t);
                r.thumbnail && Pa.reportThumbnailModuleReceived(),
                r.stream && r.stream.version && (eo.debug("Stream module received"),
                La.dispatch({
                    type: Ut.setStreamModuleReceivedDate,
                    payload: {
                        ts: Date.now()
                    }
                }),
                Ji && (Pa.reportStreamModuleReceived(),
                La.dispatch((n = performance.now(),
                {
                    type: Ir,
                    payload: n
                })),
                Ji = !1),
                r.stream.contentAvailable ? (Qi[e] = (0,
                Ai.Z)(r.stream),
                Qi[e].mid = e,
                delete r.stream) : (Gi = clearTimeout(Gi),
                Bi && Pi.Z.test(),
                Vi = null,
                Bi = !1,
                qi = 0,
                Xi = {},
                Qi = {},
                Mi = !1,
                ro = null,
                Ji = !0),
                co(Xi[e], e)),
                r.cdnConfig && (Fi || (Pi.Z.on(Pi.Z.events.PING_RESULT, ao),
                Pi.Z.on(Pi.Z.events.FINISHED, io),
                Pi.Z.on(Pi.Z.events.ERROR, so),
                Pi.Z.on(Pi.Z.events.LOG, oo),
                Fi = !0),
                ji = ji || e,
                qi = 0,
                zi[e] = (0,
                Ai.Z)(r.cdnConfig),
                zi[e].mid = e,
                eo.debug("CDN config received"),
                delete r.cdnConfig),
                (0,
                Di.Z)(r) || Hi.onComplete(e, r),
                function(e) {
                    return e && e.streamFormats && (e.streamFormats.mp4 || e.streamFormats.flv) && !(e.streamFormats.hasOwnProperty("flv/segmented") || e.streamFormats.hasOwnProperty("mp4/segmented") || e.streamFormats.hasOwnProperty("hls/improved"))
                }(Qi[e]) ? (eo.debug("Mp4 or Flv movie, cdn tests skipped!"),
                Hi.onComplete(e, {
                    stream: Qi[e]
                })) : fo(e)
            },
            onStat: function() {},
            onComplete: function() {},
            onProviderChange: function(e) {
                eo.debug("Provider changed");
                var t = e && Object.prototype.hasOwnProperty.call(e, "to") && !uo(e.to)
                  , n = Vi && uo(Vi) || !Vi && lo(ji);
                t && n && po(),
                Vi = e.to
            },
            onProviderFailure: function(e) {
                eo.debug("Provider failure", e),
                (e && Object.prototype.hasOwnProperty.call(e, "url") && uo(e.url) || lo(ji)) && po()
            },
            isEcdnProvider: uo,
            getEcdnConfig: lo,
            forceProvider: mo
        },
        La.subscribe("provider.forcedUrl", mo);
        var go, vo, Eo = Hi, ho = n(27685), yo = (0,
        c.w)("providers"), bo = -1, To = [];
        function So(e) {
            var t = go.length;
            if (go && t && e >= 0 && e < t ? vo = go[bo = e] : (bo = -1,
            vo = null),
            vo) {
                var n = vo.name;
                To.includes(n) || To.push(n)
            }
        }
        function Oo(e) {
            var t = function(e) {
                for (var t = go.length, n = -1, r = 0; r < t; r += 1)
                    if (e === go[r].name) {
                        n = r;
                        break
                    }
                return n
            }(e);
            So(t = Math.max(0, t))
        }
        var Lo, Ao, Io, _o = function(e) {
            e.name || (e.name = e.url),
            go.push(e)
        }, Po = function() {
            var e = go.findIndex((function(e, t) {
                return t !== bo && !To.includes(e.name)
            }
            ));
            return So(-1 !== e ? e : (bo + 1) % go.length),
            vo
        }, Do = function(e) {
            return e ? Oo(e) : -1 === bo ? So(0) : Oo(vo.name),
            La.dispatch((0,
            ho.DJ)(vo)),
            yo.info("selected provider: ", vo),
            vo
        }, Ro = function() {
            go = []
        }, wo = function() {
            return vo
        }, No = ((0,
        c.w)("atlas/logic/stats/collector"),
        {
            LOGIC_INITIATED: "lid",
            UMS_CONNECTED: "ucd",
            FIRST_MODULE_INFO: "fmi",
            KEYFRAME_AFTER_PLAY: "kfap",
            SEEK_COMPLETE: "kfas",
            JUMP_COMPLETE: "kfaj",
            BANDWIDTH_REPORT: "bwrpt",
            DROPPED_FRAMES: "dpfs",
            UMS_COMMAND_PLAYING: "playing",
            UMS_COMMAND_SEEK: "seek"
        }), Co = {}, Uo = -1, Mo = !1, Fo = !1;
        function jo(e) {
            var t = e.send.duration
              , n = [Math.round(e.send.from * t), Math.round(e.send.to * t)];
            -1 !== Uo && clearTimeout(Uo),
            Uo = setTimeout((function() {
                !function(e, t) {
                    Uo = -1,
                    A(O, L.SEND_REPORT, {
                        mid: e,
                        send: {
                            cmd: No.UMS_COMMAND_SEEK,
                            data: t
                        }
                    })
                }(e.mid, n)
            }
            ), 1e3)
        }
        function ko() {
            void 0 !== Ao && (Io = Ao,
            Ao = void 0,
            Go({
                playing: !0
            }))
        }
        function Go(e) {
            var t, n, r = e.playing, a = e.reason, i = void 0 === a ? "" : a, o = (n = Io,
            La.getState().playback.audioTracks.find((function(e) {
                return e.id === n
            }
            ))), c = (0,
            s.default)(o, "language");
            c && (t = {
                language: c,
                country: (0,
                s.default)(o, "country", "00")
            }),
            A(O, L.SEND_REPORT, {
                mid: Lo,
                send: {
                    cmd: No.UMS_COMMAND_PLAYING,
                    data: [Lo.split(".")[1], r, {
                        reason: i,
                        multiaudio: t
                    }]
                }
            })
        }
        function Bo(e) {
            Lo = e.mid,
            Mo ? Go({
                mid: e.mid,
                reason: e.reason,
                playing: e.playing
            }) : Fo = !0
        }
        function Vo(e) {
            Co[e] = {},
            Co[e].start = Date.now(),
            Co[e].success = -1,
            Co[e].firstModule = -1
        }
        function xo(e) {
            Lo = e,
            -1 === Co[e].success && (Co[e].success = Date.now(),
            Li.feed(e, {
                benchmark: {
                    ucd: Co[e].success - Co[e].start
                }
            })),
            function(e) {
                Li.feed(e, {
                    branchName: Ae.get("branchName")
                })
            }(e)
        }
        function Ho(e) {
            -1 === Co[e.mid].success && (Co[e.mid].start = -1,
            Co[e.mid].firstModule = -1)
        }
        function Zo(e) {
            -1 !== Co[e.mid].success && -1 === Co[e.mid].firstModule && (Co[e.mid].firstModule = Date.now(),
            Li.feed(e.mid, {
                benchmark: {
                    fmi: Co[e.mid].firstModule - Co[e.mid].success
                }
            }))
        }
        function Yo(e) {
            var t = Eo.isEcdnProvider(e.url);
            Li.feed(Lo, {
                benchmark: {
                    bwrpt: [{
                        time: e.time,
                        size: e.size,
                        url: e.url,
                        ecdn: t
                    }]
                }
            })
        }
        function Ko(e) {
            Li.feed(Lo, {
                common: {
                    bufempty: e
                }
            })
        }
        function Wo() {
            Ko(!0)
        }
        function Qo() {
            Ko(!1)
        }
        function zo(e) {
            var t = {
                type: e.error,
                details: e.details ? e.details : {}
            }
              , n = Lo.split(".");
            "channel" === n[0] ? t.details.cid = n[1] : t.details.vid = n[1],
            Li.feed(Lo, {
                error: [t]
            })
        }
        function Xo(e) {
            Li.feed(Lo, {
                benchmark: {
                    ecdnt: e
                }
            })
        }
        function qo() {
            var e = Do();
            if (e && e.location && e.url) {
                var t, n = function(e) {
                    var t = e.match(/(.+?)\/.+/);
                    if (t)
                        return t[1]
                }(e.location), r = e.providerHost || (t = e.url,
                new URL(t).host);
                Li.feed(Lo, {
                    common: {
                        cdnProviderType: n,
                        cdnProviderHostname: r
                    }
                })
            }
        }
        function $o() {
            Co = {},
            Lo = null,
            Li.reset(),
            Ao = void 0,
            Io = void 0,
            Mo = !1,
            Fo = !1
        }
        function Jo() {
            ue.isHLS() && (Mo = !0,
            Fo && (Fo = !1,
            Go({
                playing: !0
            })))
        }
        function es() {
            ue.isHLS() || (Mo = !0,
            Fo && (Fo = !1,
            Go({
                playing: !0
            })))
        }
        La.subscribe("playback.selectedAudio", (function(e) {
            void 0 === Io ? Io = e : Ao = e
        }
        ));
        var ts = function() {
            Li.init(),
            $o(),
            I(O, L.PLAYING, Bo),
            I(O, L.SEEK, jo),
            I(O, L.UMS_CONNECT_START, Vo),
            I(O, L.UMS_CONNECTED, xo),
            I(O, L.UMS_REJECT, Ho),
            I(O, L.MODULE_INFO, Zo),
            I(O, L.REPORT_BANDWIDTH, Yo),
            I(O, L.REPORT_BUFFER_EMPTY, Wo),
            I(O, L.REPORT_BUFFER_FULL, Qo),
            I(O, L.REPORT_ERROR, zo),
            I(T, L.PROVIDER_CHANGE, qo),
            I(T, L.AUDIO_TRACKS, Jo),
            I(T, L.PLAY_OPTIONS, es),
            I(O, L.REPORT_AUDIO_CHANGED, ko),
            I(O, L.REPORT_ECDN_TESTS, Xo)
        }
          , ns = {}
          , rs = {}
          , as = (0,
        c.w)("atlas/logic/stats/reporter");
        function is(e) {
            var t;
            rs[e.mid] ? (t = gi()(e.mid)) ? (as.debug("report to ums", {
                cmd: e.send.cmd,
                data: e.send.data
            }),
            t.send(e.send.cmd, e.send.data)) : as.warn("umsInstance not available!", {
                report: e
            }) : (as.debug("cache data", {
                mid: e.mid,
                data: e.send
            }),
            ns[e.mid] = ns[e.mid] ? ns[e.mid] : [],
            ns[e.mid].push(e))
        }
        function os(e) {
            if (rs[e] = !0,
            ns[e]) {
                for (; ns[e].length; )
                    is(ns[e].shift());
                delete ns[e]
            }
        }
        var ss, cs = function() {
            ts(),
            I(O, L.SEND_REPORT, is),
            I(O, L.UMS_CONNECTED, os)
        }, us = function() {
            return La.dispatch({
                type: vt
            })
        }, ds = function(e) {
            var t = e.type
              , n = e.data;
            return {
                type: Et,
                payload: {
                    type: t,
                    data: n
                }
            }
        }, ls = !1, fs = !1, ps = -1, ms = (0,
        c.w)("atlas/logic/offiarContentHandler"), gs = !0, vs = !1, Es = !1;
        function hs() {
            if (ms.debug("Stop offair content"),
            fs) {
                fs = !1,
                A(T, L.DESTROY_SLIDESHOW);
                var e = La.getState()
                  , t = (0,
                Ce.Im)(e);
                ps > -1 && (0,
                Ce.Z)(e) && A(T, L.DESTROY_OFFAIR_VIDEO, t[ps])
            }
            ps = -1
        }
        function ys() {
            var e = La.getState();
            if ((0,
            Ce.Z)(e) && fs) {
                ps += 1;
                var t = (0,
                Ce.Im)(e);
                0 !== ps && A(T, L.DESTROY_OFFAIR_VIDEO, t[ps - 1]),
                ms.debug("Next offair video", {
                    next: t[ps]
                }),
                A(T, L.CREATE_OFFAIR_VIDEO, t[ps])
            }
        }
        function bs() {
            ms.debug("Start offair content"),
            fs || (gs = !1),
            fs = !0;
            var e = La.getState();
            (0,
            Ce.J_)(e) ? A(T, L.CREATE_SLIDESHOW) : (0,
            Ce.Z)(e) ? -1 === ps && (ms.debug("Init offair vids", {
                videos: (0,
                Ce.Im)(e)
            }),
            ys()) : (hs(),
            Ls())
        }
        function Ts() {
            fs && hs(),
            bs()
        }
        function Ss() {
            var e = La.getState();
            return (0,
            Ce.J_)(e) || (0,
            Ce.Z)(e)
        }
        function Os() {
            U().setContentAvailable(!0),
            La.dispatch(ds({
                type: ""
            }))
        }
        function Ls() {
            U().setContentAvailable(!1),
            La.dispatch((0,
            pa.y5)(pa.w_.offairScreen)),
            La.dispatch(ds({
                type: "offair"
            }))
        }
        function As() {
            if (vs && Es) {
                var e = La.getState()
                  , t = (0,
                Ce.Z)(e) && !gs;
                if (!ss && (!Ss() || t))
                    return hs(),
                    void Ls();
                ss ? (fs && hs(),
                Os()) : Ss() && (Os(),
                Ts())
            }
        }
        function Is(e) {
            e !== ss && (vs = !0,
            (ss = e) && (gs = !1),
            As())
        }
        var _s, Ps = function() {
            ls || (ls = !0,
            I(T, L.LIVE, Is),
            I(T, L.NEXT_OFFAIR_VIDEO, ys),
            La.subscribe("content.offairContent", (function(e, t) {
                var n, r;
                Es = !0,
                n = e,
                r = t,
                JSON.stringify(n) === JSON.stringify(r) || As()
            }
            )))
        }, Ds = function() {
            hs(),
            ss = void 0,
            vs = !1,
            Es = !1,
            gs = !0,
            Os()
        }, Rs = function() {
            var e, t = La.getState();
            return !fs || fs && (0,
            Ce.Z)(t) && (e = (0,
            Ce.Im)(La.getState()),
            ps === e.length - 1)
        }, ws = function() {
            var e = La.getState()
              , t = (0,
            Ce.Im)(e)
              , n = ps + 1;
            return n > -1 && n < t.length
        }, Ns = n(97894);
        function Cs(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++)
                r[n] = e[n];
            return r
        }
        function Us(e) {
            var t = e.hasExternalVtt
              , n = e.vtt;
            if (t) {
                var r = n.map((function(e) {
                    var t, n, r = (n = 3,
                    function(e) {
                        if (Array.isArray(e))
                            return e
                    }(t = e) || function(e, t) {
                        var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                        if (null != n) {
                            var r, a, i = [], o = !0, s = !1;
                            try {
                                for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value),
                                !t || i.length !== t); o = !0)
                                    ;
                            } catch (e) {
                                s = !0,
                                a = e
                            } finally {
                                try {
                                    o || null == n.return || n.return()
                                } finally {
                                    if (s)
                                        throw a
                                }
                            }
                            return i
                        }
                    }(t, n) || function(e, t) {
                        if (e) {
                            if ("string" == typeof e)
                                return Cs(e, t);
                            var n = Object.prototype.toString.call(e).slice(8, -1);
                            return "Object" === n && e.constructor && (n = e.constructor.name),
                            "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Cs(e, t) : void 0
                        }
                    }(t, n) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }()), a = r[0], i = r[1], o = r[2];
                    return new VTTCue(a,i,o)
                }
                ));
                La.dispatch((0,
                Ns._r)(r))
            } else
                La.dispatch((0,
                Ns._r)([]))
        }
        var Ms = function() {
            _s || (_s = !0,
            La.subscribe("externalVtt", Us))
        }
          , Fs = !(ue.isCid() && o().android && 2 === o().android[0]) && !o().swf && !o().ie && !!document.createElement("video").canPlayType && o().android || o().blackberry || o().ios || o().playstation || !!Ae.get("ios") || !!Ae.get("refTest") || !!Ae.get("html5")
          , js = (0,
        c.w)("contentAvailabilityChecker")
          , ks = !1
          , Gs = !1
          , Bs = !1
          , Vs = !1;
        function xs() {
            return ks && Gs && Bs
        }
        function Hs() {
            js.debug("runCheck", {
                isAllInformationAvailableForContent: xs(),
                contentAvailableEventSent: Vs
            }),
            Vs || xs() && (oa.send("contentAvailable", !0),
            A(T, L.CONTENT_AVAILABLE),
            Vs = !0)
        }
        function Zs() {
            ks = !1,
            Gs = !1,
            Bs = !1,
            Vs = !1
        }
        var Ys = function() {
            Zs()
        }
          , Ks = function() {
            js.debug("reset"),
            Zs()
        }
          , Ws = function() {
            var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
            js.debug("setHasLiveStatus", e);
            var t = Gs;
            Gs = e,
            !t && Gs && Hs()
        }
          , Qs = function() {
            var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
            js.debug("setHasMeta", e);
            var t = Bs;
            Bs = e,
            !t && Bs && Hs()
        }
          , zs = function() {
            var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
            js.debug("setHasPlayBackData", e);
            var t = ks;
            ks = e,
            !t && ks && Hs()
        }
          , Xs = function(e) {
            return La.dispatch({
                type: je,
                payload: {
                    videoTag: e
                }
            })
        }
          , qs = n(26193)
          , $s = (0,
        c.w)("lockManager")
          , Js = ["reject", "ipLock", "geoLock", "hashLock", "passwordLock", "referrerLock", "sessionAuthLock", "viewerAuth", "viewerHourLimitLock", "nonexistent"];
        var ec = n(46060)
          , tc = n(21957)
          , nc = n(42610)
          , rc = function(e) {
            return [function(e) {
                return (0,
                nc.Z)(e)
            }
            , function(e) {
                var t = e.size;
                return (0,
                tc.default)(t) && t > 0
            }
            , function(e) {
                var t = e.time;
                return (0,
                tc.default)(t) && t > 25
            }
            , function(e) {
                var t = e.url;
                return (0,
                _i.default)(t)
            }
            , function(e) {
                var t = e.url;
                return !/\.m4[va]h$/.test(t)
            }
            , function(e) {
                var t = e.url;
                return !/\.vtt$/.test(t)
            }
            ].every((function(t) {
                return t(e)
            }
            ))
        }
          , ac = function(e) {
            return (0,
            s.default)(e, "performance.responseStart") && (0,
            s.default)(e, "performance.responseEnd") && (0,
            s.default)(e, "performance.startTime")
        };
        function ic(e) {
            if (ac(e)) {
                var t = e.performance;
                return {
                    waitingTime: t.responseStart - t.startTime,
                    loadingTime: t.responseEnd - t.responseStart
                }
            }
            return {
                waitingTime: 0,
                loadingTime: e.time
            }
        }
        function oc(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++)
                r[n] = e[n];
            return r
        }
        function sc(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function cc(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? sc(Object(n), !0).forEach((function(t) {
                    uc(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : sc(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function uc(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function dc(e) {
            return function(e) {
                return e.map((function(e) {
                    var t = e.language;
                    if ("string" != typeof t)
                        return e;
                    var n = t.match(/(\w+)(?:-(\w+))?/);
                    if (!n)
                        return e;
                    var r, a, i = (a = 3,
                    function(e) {
                        if (Array.isArray(e))
                            return e
                    }(r = n) || function(e, t) {
                        var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                        if (null != n) {
                            var r, a, i = [], o = !0, s = !1;
                            try {
                                for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value),
                                !t || i.length !== t); o = !0)
                                    ;
                            } catch (e) {
                                s = !0,
                                a = e
                            } finally {
                                try {
                                    o || null == n.return || n.return()
                                } finally {
                                    if (s)
                                        throw a
                                }
                            }
                            return i
                        }
                    }(r, a) || function(e, t) {
                        if (e) {
                            if ("string" == typeof e)
                                return oc(e, t);
                            var n = Object.prototype.toString.call(e).slice(8, -1);
                            return "Object" === n && e.constructor && (n = e.constructor.name),
                            "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? oc(e, t) : void 0
                        }
                    }(r, a) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }()), o = i[1], s = i[2], c = void 0 === s ? "00" : s;
                    return cc(cc({}, e), {}, {
                        language: o,
                        country: c
                    })
                }
                ))
            }(function(e) {
                return e.map((function(e, t) {
                    var n = parseInt(e.id, 10);
                    return cc(cc({}, e), {}, {
                        id: n || 0 === n ? n : t
                    })
                }
                ))
            }(e))
        }
        var lc = n(1692);
        function fc(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function pc(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? fc(Object(n), !0).forEach((function(t) {
                    mc(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : fc(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function mc(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var gc, vc, Ec, hc, yc, bc, Tc, Sc, Oc = (0,
        c.w)("playbackhandler"), Lc = Math.random() <= .05, Ac = ["m4vh", "m4ah", "flv"], Ic = !1, _c = !1, Pc = {}, Dc = 0, Rc = [], wc = {
            playing: !1,
            pauseTime: 0,
            data: null
        }, Nc = "", Cc = !1, Uc = !1, Mc = !0, Fc = !0, jc = !0, kc = -2;
        function Gc() {
            _u("".concat(3, " segment not found error")),
            A(O, L.PLAYING, {
                mid: ue.getMid(),
                playing: !1
            }),
            Pu()
        }
        function Bc() {
            vc = clearTimeout(vc)
        }
        function Vc(e) {
            Oc.info("handleMultipleAtlasDownloadError"),
            gc ? (function() {
                Oc.debug("handle multiple atlas download error by getting updated stream module");
                var e, t = Dc ? 1e3 : 0;
                e = t = Math.min(16e3, t * Math.pow(2, Dc - 1)),
                Bc(),
                vc = setTimeout(Gc, e),
                Dc += 1
            }(),
            gc = !1) : (Oc.debug("handle multiple atlas download error by changing provider"),
            A(b, L.CHANGE_PROVIDER, {
                reason: "multiple segment not found error"
            }),
            gc = !0),
            A(T, L.ATLAS_DOWNLOAD_ERROR, e)
        }
        function xc() {
            Du(),
            U().showPlayScreen(),
            qt().removeListener(qt().events.ATLAS_FULLY_INITIALIZED, xc)
        }
        function Hc() {
            var e;
            Oc.debug("initializeAtlas"),
            qt().initialized || (qt().initialize("ViewerContainer"),
            qt().addListener(qt().events.BANDWIDTH, vu),
            qt().addListener(qt().events.BUFFER_EMPTY, Eu),
            qt().addListener(qt().events.BUFFER_FULL, hu),
            qt().addListener(qt().events.ERROR, yu),
            qt().addListener(qt().events.POSITION, Tu),
            qt().addListener(qt().events.LOG, bu),
            qt().addListener(qt().events.FINISHED, su),
            qt().addListener(qt().events.METADATA, ou),
            qt().addListener(qt().events.THROTTLE, Xc),
            qt().addListener(qt().events.AUDIO_TRACKS, qc),
            qt().addListener(qt().events.TEXT_TRACKS, $c),
            qt().addListener(qt().events.TEXT_TRACK_CUE_CHANGE, Jc),
            qt().addListener(qt().events.X08_DETECTED, eu),
            qt().addListener(qt().events.WEBKIT_SUPPORTS_FULLSCREEN, tu),
            qt().addListener(qt().events.WEBKIT_ENTER_FULLSCREEN, au),
            qt().addListener(qt().events.WEBKIT_END_FULLSCREEN, iu),
            qt().addListener(qt().events.STORED, Ou),
            qt().addListener(qt().events.BUFFERED, Lu),
            qt().addListener(qt().events.ATLAS_FULLY_INITIALIZED, Kc),
            qt().addListener(qt().events.QUALITY_CHANGE_STARTED, cu),
            qt().addListener(qt().events.QUALITY_CHANGE_COMPLETED, uu),
            qt().addListener(qt().events.QUALITY_CHANGE_CANCELLED, du),
            qt().addListener(qt().events.LANGUAGE_CHANGE_STARTED, lu),
            qt().addListener(qt().events.LANGUAGE_CHANGE_COMPLETED, fu),
            qt().addListener(qt().events.LANGUAGE_CHANGE_CANCELLED, pu),
            qt().addListener(qt().events.SEEK_STARTED, Zc),
            qt().addListener(qt().events.SEEK_COMPLETED, Yc),
            e = {},
            Fs && !1 !== Ae.get("playsinline") && (e["webkit-playsinline"] = !0,
            e.playsinline = !0),
            "native" === Ae.get("controls") && (e.controls = "true"),
            0 === Ae.get("volume") && (e.defaultMuted = !0,
            o().ios && (e.muted = !0)),
            Ae.get("autoplay") && (e.autoplay = !0),
            La.getState().content.is360Video && o().ios && (e.crossOrigin = "anonymous"),
            qt().setOption(qt().optionNames.VIDEO_TAG_ATTRIBUTES, e),
            qt().setOption(qt().optionNames.RENDER_TEXT_TRACKS_NATIVELY, ue.isHLS()),
            qt().setOption(qt().optionNames.HIDE_NATIVE_TRACKS, ue.isHLS()),
            qt().setOption(qt().optionNames.FLASH_PROXY_URL_PLAIN, "http://".concat(V.Z.config.cdn1)),
            qt().setOption(qt().optionNames.FLASH_PROXY_URL_SECURE, "https://".concat(V.Z.config.staticSecure)),
            Oc.debug("Atlas is initialized"))
        }
        function Zc(e) {
            var t = e.from
              , n = e.to
              , r = e.initiator;
            oa.send("seekStarted", {
                from: ue.getRelativeSeekPositionInMs(1e3 * t) / 1e3,
                to: ue.getRelativeSeekPositionInMs(1e3 * n) / 1e3,
                initiator: r
            }),
            Ne.send({
                message: "Seek started",
                data: {
                    category: "Playback",
                    item: "playback",
                    action: "started"
                }
            })
        }
        function Yc() {
            oa.send("seekCompleted", !0),
            Ne.send({
                message: "Seek completed",
                data: {
                    category: "Playback",
                    item: "playback",
                    action: "completed"
                }
            })
        }
        function Kc() {
            _c = !0,
            A(T, "onAtlasSeekable")
        }
        function Wc() {
            Iu("nextoffair")
        }
        function Qc(e) {
            return e.split(".").pop()
        }
        function zc(e) {
            wc.data = pc(pc({}, e), {}, {
                isLive: !ue.isVid() && !ue.isOffairVid(),
                lastStreamModuleReceived: La.getState().playback.lastStreamModuleReceived
            }),
            wc.data.debug = Ae.get("showHiddenContextMenuItems"),
            (Ec && Object.prototype.hasOwnProperty.call(wc.data, "format") && Ec !== wc.data.format || e.format === w && Nc && function(e) {
                if (e === Nc)
                    return !1;
                if (!e)
                    return !0;
                var t = new URL(Nc)
                  , n = new URL(e);
                return t.searchParams.get("sourceChannel") !== n.searchParams.get("sourceChannel")
            }(e.url) || Sc && wc.data.sourceMedia !== Sc) && Iu("Format changed");
            var t = (0,
            s.default)(wc, "data.representations", []).map((function(e) {
                return e.contentType
            }
            ))
              , n = function(e) {
                return e.includes("video/mp4")
            }
              , r = n(Rc) && !n(t)
              , a = !n(Rc) && n(t);
            if (r || a) {
                if (!wc.data.isLive && wc.position >= 0) {
                    var i = ue.getRelativeSeekPositionInMs(wc.position);
                    ue.saveSeek({
                        positionInMs: i,
                        initiator: C._.SYSTEM
                    })
                }
                Iu("Toggle video track")
            }
            Rc = t,
            Ec = wc.data.format,
            Sc = wc.data.sourceMedia,
            Nc = e.url,
            qt().initialized || Hc();
            var o = La.getState().player.volume;
            qt().setVolume(o / 100),
            wc.playing && Au(wc.data),
            zs()
        }
        function Xc(e) {
            var t = "throttle" === e.state;
            A(T, L.ATLAS_THROTTLE, t)
        }
        function qc(e) {
            if (ue.isHLS()) {
                var t = dc(e.data);
                if (La.dispatch((0,
                Ka.KS)(t)),
                jc) {
                    var n = La.getState().playback.selectedAudio
                      , r = Ae.get("defaultLang")
                      , a = (0,
                    ec.Z)(t, r);
                    if (-1 !== n)
                        qt().selectAudio(n);
                    else if (a)
                        La.dispatch((0,
                        Ka.Ft)(a.id));
                    else {
                        var i = t.find((function(e) {
                            return e.enabled
                        }
                        ));
                        i && La.dispatch((0,
                        Ka.Ft)(i.id))
                    }
                    jc = !1
                } else {
                    var o = t.find((function(e) {
                        return e.enabled
                    }
                    ));
                    o && La.dispatch((0,
                    Ka.Ft)(o.id))
                }
                A(T, L.AUDIO_TRACKS, t)
            }
        }
        function $c(e) {
            if (ue.isHLS() && !Ae.get("externalvtt")) {
                var t = dc(e.data);
                La.dispatch((0,
                Ka.kY)(t))
            }
        }
        function Jc(e) {
            var t = e.data.activeCues;
            La.dispatch((0,
            Ns._r)(t))
        }
        function eu() {
            Ae.get("externalvtt") || La.dispatch((0,
            Ka.kY)([{
                id: 1,
                label: "ui.closedCaption",
                shouldTranslate: !0
            }]))
        }
        function tu(e) {
            var t;
            La.dispatch((t = e.data,
            {
                type: Ut.setWebkitSupportsFullscreen,
                payload: {
                    supports: t
                }
            }))
        }
        function nu() {
            wc.playing && (wc.playing = !1,
            A(T, L.PLAYING, !1));
            var e = qt().getVideoTag();
            e && e.removeEventListener("pause", nu),
            yc = clearTimeout(yc)
        }
        function ru() {
            var e = qt().getVideoTag();
            if (e) {
                var t = !e.paused;
                wc.playing !== t && (wc.playing = t,
                A(T, L.PLAYING, t)),
                t && (e.addEventListener("pause", nu),
                yc = setTimeout((function() {
                    e.removeEventListener("pause", nu)
                }
                ), 1e3))
            }
        }
        function au() {
            ru()
        }
        function iu() {
            ru()
        }
        function ou(e) {
            A(T, L.ATLAS_METADATA, e)
        }
        function su() {
            Cc && ue.isCid() && !1 === ue.isOffairVid() ? gu() : (A(T, L.VIDEO_FINISHED),
            oa.send("finished", !0))
        }
        function cu() {
            Uc || (Uc = !0,
            A(T, L.ATLAS_QUALITY_CHANGE_STARTED))
        }
        function uu() {
            Uc && (Uc = !1,
            A(T, L.ATLAS_QUALITY_CHANGE_COMPLETED))
        }
        function du() {
            Uc && (Uc = !1,
            A(T, L.ATLAS_QUALITY_CHANGE_CANCELLED))
        }
        function lu(e) {
            e.activeStreamId.includes("text") || U().setAudioLoading(!0)
        }
        function fu(e) {
            e.activeStreamId.includes("text") || (A(O, L.REPORT_AUDIO_CHANGED),
            U().setAudioLoading(!1))
        }
        function pu(e) {
            e.activeStreamId.includes("text") || U().setAudioLoading(!1)
        }
        function mu() {
            Cc && Tc === wc.position && (Oc.debug("check end of stream"),
            gu()),
            Tc = wc.position
        }
        function gu() {
            Oc.debug("end of stream"),
            bc = clearInterval(bc),
            Iu("End of stream"),
            Pc = {},
            A(T, L.LIVE, !1)
        }
        function vu(e) {
            var t = Qc(e.url);
            Object.prototype.hasOwnProperty.call(Pc, t) && (Pc[t] = 0),
            Dc = 0,
            Bc(),
            function(e) {
                if (Lc || Ae.get("chunkReporting")) {
                    var t = Qc(e.url);
                    if (!Ac.includes(t)) {
                        var n = ic(e)
                          , r = n.waitingTime
                          , a = n.loadingTime;
                        Ne.send({
                            message: "Chunk download",
                            data: {
                                category: "Chunk",
                                item: "download",
                                action: "success",
                                start_loading: Date.now() - e.time,
                                chunk_size: e.size,
                                chunk_type: t,
                                waiting_time: r,
                                loading_time: a
                            }
                        })
                    }
                }
            }(e),
            A(O, L.REPORT_BANDWIDTH, e)
        }
        function Eu() {
            La.dispatch((0,
            Ka.Bt)(!0)),
            !0 !== Cc && !1 === (ue.isVid() && wc.position > wc.data.contentLength - 200) && A(O, L.REPORT_BUFFER_EMPTY)
        }
        function hu() {
            La.dispatch((0,
            Ka.Bt)(!1)),
            A(O, L.REPORT_BUFFER_FULL)
        }
        function yu(e) {
            if (A(T, L.ATLAS_ERROR, e),
            !e.recoverable)
                return Oc.debug("handleAtlasUnrecoverableError"),
                A(T, L.ATLAS_CLEANUP, "Unrecoverable atlas error"),
                _c = !1,
                Pc = {},
                Bc(),
                jc = !0,
                void (hc = setTimeout(Nu, 750));
            switch (e.error) {
            case qt().errors.SEGMENT_NOT_FOUND:
            case qt().errors.SEGMENT_LOAD_FAILED:
                A(O, L.REPORT_ERROR, e),
                function(e) {
                    if (Oc.debug("handleAtlasDownloadError"),
                    e.status >= 500 || 0 === e.status)
                        !function(e) {
                            var t = e.url
                              , n = wo()
                              , r = (0,
                            s.default)(n, "url");
                            Oc.info("serverError", {
                                currentProvider: r,
                                url: t
                            }),
                            r && !t.includes(r) || A(b, L.CHANGE_PROVIDER, {
                                reason: "server error"
                            })
                        }(e);
                    else if (Cc && !1 === ue.isOffairVid())
                        bc || (Oc.debug("start end of stream interval"),
                        bc = setInterval(mu, 1e3));
                    else if (!vc) {
                        var t = Qc(e.url);
                        Object.prototype.hasOwnProperty.call(Pc, t) || (Pc[t] = 0),
                        Pc[t] += 1,
                        Pc[t] >= 3 && Vc(e)
                    }
                }(e.details);
                break;
            case qt().errors.PLAY_ERROR:
                "NotAllowedError" === (t = e.details).error.name && (_c ? xc() : qt().addListener(qt().events.ATLAS_FULLY_INITIALIZED, xc),
                oa.send("error", {
                    name: "autoplayRejected",
                    message: t.error.message
                }),
                Su());
                break;
            default:
                A(O, L.REPORT_ERROR, e)
            }
            var t
        }
        function bu(e) {
            c.Z.log(pc(pc({}, e), {}, {
                source: "atlas/".concat(e.source)
            })),
            A(T, L.ATLAS_LOG, e)
        }
        function Tu(e) {
            var t = ue.isHLS() ? ue.getTrimmedDurationInMillisec() : ue.getDurationInMillisec();
            if (t = t || 0,
            e.position > 0) {
                var n = function() {
                    if (!ue.hasSavedSeek())
                        return null;
                    var e = ue.getSavedSeek()
                      , t = e.positionInMs
                      , n = e.initiator;
                    return {
                        positionInMs: ue.getAbsoluteSeekPositionInMs(t),
                        initiator: n
                    }
                }();
                qt().initialized && _c && n ? (qt().seek(n.positionInMs, n.initiator),
                ue.resetSavedSeek()) : U().showViewerContainer()
            }
            if (e.position >= 0) {
                var r = t ? e.position / t : 0;
                wc.position = e.position,
                A(T, L.PROGRESS, r)
            }
            Fc && (Pa.reportInitialBufferingCompleted(),
            Su()),
            A(T, L.ATLAS_PROGRESS, {
                position: e.position,
                sourceMedia: (0,
                s.default)(wc, "data.sourceMedia")
            })
        }
        function Su() {
            var e;
            Pa.reportFirstTimeUpdate(),
            La.dispatch((e = performance.now(),
            {
                type: _r,
                payload: e
            })),
            N.Z.isDashboard || N.Z.align || function(e) {
                var t, n = La.getState().ums.hash;
                if (!e || !n || !e.watchedUrl)
                    return null;
                try {
                    t = JSON.parse(n)
                } catch (e) {
                    return $s.error("Parsing hash data failed", n),
                    null
                }
                var r = (0,
                s.default)(t.find((function(e) {
                    return e.hash
                }
                )), "hash", null)
                  , a = function(e, t) {
                    return decodeURIComponent(e).replace("@@channelId@@", ue.id()).replace("@@contentType@@", ue.isCid() ? "channel" : "recorded").replace("@@contentId@@", ue.id()).replace("@@hash@@", t)
                }(e.watchedUrl, r);
                fetch(a).then((function(e) {
                    return e.json()
                }
                )).then((function(e) {
                    return $s.info("WatchedUrl successfully called", e)
                }
                )).catch((function(e) {
                    return $s.warn(e.message)
                }
                ))
            }(N.Z.hashLockData),
            Fc = !1
        }
        function Ou(e) {
            A(T, L.ATLAS_STORED_UPDATE, e)
        }
        function Lu(e) {
            A(T, L.ATLAS_BUFFERED_UPDATE, e)
        }
        function Au(e) {
            Mc && (Pa.reportFirstPlayCall(),
            Mc = !1),
            wc.data && Object.prototype.hasOwnProperty.call(wc.data, "format") && wc.data.format === P && U().showViewerContainer(),
            qt().play(e),
            qt().getVideoTag() && Xs(qt().getVideoTag())
        }
        function Iu(e) {
            Oc.debug("atlasReset"),
            qt().initialized && (qt().removeListener(qt().events.BANDWIDTH, vu),
            qt().removeListener(qt().events.BUFFER_EMPTY, Eu),
            qt().removeListener(qt().events.BUFFER_FULL, hu),
            qt().removeListener(qt().events.ERROR, yu),
            qt().removeListener(qt().events.POSITION, Tu),
            qt().removeListener(qt().events.FINISHED, su),
            qt().removeListener(qt().events.METADATA, ou),
            qt().removeListener(qt().events.STORED, Ou),
            qt().removeListener(qt().events.BUFFERED, Lu),
            qt().removeListener(qt().events.THROTTLE, Xc),
            qt().removeListener(qt().events.AUDIO_TRACKS, qc),
            qt().removeListener(qt().events.TEXT_TRACKS, $c),
            qt().removeListener(qt().events.TEXT_TRACK_CUE_CHANGE, Jc),
            qt().removeListener(qt().events.X08_DETECTED, eu),
            qt().removeListener(qt().events.WEBKIT_SUPPORTS_FULLSCREEN, tu),
            qt().removeListener(qt().events.WEBKIT_ENTER_FULLSCREEN, au),
            qt().removeListener(qt().events.WEBKIT_END_FULLSCREEN, iu),
            qt().removeListener(qt().events.QUALITY_CHANGE_STARTED, cu),
            qt().removeListener(qt().events.QUALITY_CHANGE_COMPLETED, uu),
            qt().removeListener(qt().events.QUALITY_CHANGE_CANCELLED, du),
            qt().removeListener(qt().events.ATLAS_FULLY_INITIALIZED, Kc),
            qt().removeListener(qt().events.LANGUAGE_CHANGE_STARTED, lu),
            qt().removeListener(qt().events.LANGUAGE_CHANGE_COMPLETED, fu),
            qt().removeListener(qt().events.LANGUAGE_CHANGE_CANCELLED, pu),
            qt().removeListener(qt().events.SEEK_STARTED, Zc),
            qt().removeListener(qt().events.SEEK_COMPLETED, Yc),
            qt().removeListener(qt().events.ATLAS_FULLY_INITIALIZED, xc),
            qt().cleanup(),
            _c = !1,
            A(T, L.ATLAS_CLEANUP, e || "unknown reason"),
            Pa.cleanup(),
            Pa.setInitStart()),
            Pc = {},
            Dc = 0,
            kc = -2,
            jc = !0,
            Bc()
        }
        function _u(e) {
            Oc.debug("reset"),
            Iu(e),
            wc = {
                playing: !1,
                pauseTime: 0,
                position: 0
            },
            ue.resetSavedSeek(),
            Dc = 0,
            Fc = !0,
            Mc = !0,
            Pa.setInitStart(),
            hc = clearTimeout(hc),
            Sc = void 0,
            Rc = []
        }
        function Pu() {
            Oc.debug("playbackhandler.onPlay()", {
                playback: wc
            });
            var e = !1;
            if (qt().initialized || Hc(),
            wc.playing) {
                var t = Date.now();
                qt().resume(),
                Oc.debug("resume"),
                wc.pauseTime > 0 && t - wc.pauseTime > 100 && !ue.isVid() && !ue.isOffairVid() ? (Oc.debug("resume.time: ".concat(t, " - diff: ").concat(t - wc.pauseTime)),
                qt().seek(wc.position + (t - wc.pauseTime)),
                wc.pauseTime = 0) : e = !0
            }
            wc.playing && !e || !wc.data || (wc.playing = !0,
            Au(wc.data),
            Fc || qt().resume()),
            wc.playing || (wc.playing = !0),
            A(T, L.PLAYING, !0)
        }
        function Du() {
            Oc.debug("playbackhandler.onPause()"),
            qt().initialized && (wc.pauseTime = Date.now(),
            Oc.debug("pause.time", wc.pauseTime),
            vc && (Pc = {},
            Dc = 0,
            Bc()),
            qt().pause(),
            wc.playing = !1,
            A(T, L.PLAYING, !1))
        }
        function Ru(e) {
            var t = e.position
              , n = e.initiator
              , r = qt().getVideoTag()
              , a = 1e3 * t;
            qt().initialized && _c && (!ue.isHLS() || null != r && r.seekable.length) ? qt().seek(a, n) : ue.saveSeek({
                positionInMs: ue.getRelativeSeekPositionInMs(a),
                initiator: n
            })
        }
        function wu() {
            if (qt().initialized) {
                var e = La.getState().playback
                  , t = e.selectedClosedCaption
                  , n = e.closedCaptionVisible;
                if (qt().toggleCaptions({
                    trackId: t > -1 ? t : kc,
                    isVisible: n
                }),
                kc = t,
                document.pictureInPictureElement) {
                    var r = n ? {
                        fromMode: "hidden",
                        toMode: "showing"
                    } : {
                        fromMode: "showing",
                        toMode: "hidden"
                    };
                    (0,
                    lc.T)(r, qt().getVideoTag())
                }
            }
        }
        function Nu() {
            wc.playing && wc.data && zc(wc.data)
        }
        Oc.debug("atlas", {
            capabilities: qt().capabilities
        }),
        La.subscribe("playback.selectedAudio", (function(e) {
            qt().initialized && qt().selectAudio(e)
        }
        )),
        La.subscribe("playback.selectedClosedCaption", wu),
        La.subscribe("playback.closedCaptionVisible", wu),
        La.subscribe("playback.hashes", (function(e) {
            qt().initialized && qt().setHash(e)
        }
        )),
        La.subscribe("player.volume", (function(e) {
            var t = e / 100;
            qt().initialized && qt().setVolume(t)
        }
        )),
        La.subscribe("player.speed", (function(e) {
            qt().initialized && qt().setPlaybackSpeed(e)
        }
        ));
        var Cu = {
            init: function() {
                gc = !0,
                Ic ? (Oc.debug("reinit"),
                _u("Atlas init")) : (Oc.debug("init"),
                Ic = !0,
                I(T, L.PLAY_OPTIONS, zc),
                I(T, L.CONTENT_CUT_UPDATE, (function() {
                    ue.getCutStart() && !Fs && U().hideViewerContainer()
                }
                )),
                I(T, L.NEXT_OFFAIR_VIDEO, Wc),
                I(T, L.LIVE, (function(e) {
                    wc.pauseTime = 0,
                    wc.data = null,
                    Cc = !e,
                    !0 === e && (bc = clearInterval(bc),
                    Iu("Status changed"))
                }
                )),
                I(T, L.OFFLINE_MODULE_RECEIVED, (function() {
                    Oc.debug("offline module received", {
                        playing: wc.playing
                    }),
                    Cc = !0,
                    wc.playing || gu()
                }
                )),
                I(b, L.PLAY, Pu),
                I(b, L.PAUSE, Du),
                I(b, L.SEEK, Ru))
            },
            reset: _u
        }
          , Uu = (0,
        c.w)("atlas/logic/getstream")
          , Mu = {}
          , Fu = {
            SUCCESS: "mte_getstream_success",
            ERROR: "mte_getstream_error"
        }
          , ju = 1e3
          , ku = 1e4
          , Gu = 2e3
          , Bu = null
          , Vu = 0
          , xu = 0
          , Hu = 0
          , Zu = 0
          , Yu = !1;
        function Ku(e) {
            var t = e.target;
            switch (t.readyState) {
            case XMLHttpRequest.HEADERS_RECEIVED:
                !function(e) {
                    switch (Uu.debug("UHLS polling - status ", e.status),
                    e.status) {
                    case 202:
                        Uu.debug("UHLS polling - retry in 2 seconds"),
                        e.abort(),
                        zu(),
                        Hu = setTimeout((function() {
                            return Qu(e.streamUrl)
                        }
                        ), Gu),
                        Yu = !1;
                        break;
                    case 204:
                        Yu ? (Uu.debug("UHLS polling - going offline"),
                        (0,
                        g.Z)(Mu, Fu.ERROR, 204),
                        Yu = !1) : (Uu.debug("UHLS polling - retry in 10 seconds"),
                        e.abort(),
                        zu(),
                        Zu = setTimeout((function() {
                            return Qu(e.streamUrl)
                        }
                        ), ku),
                        Yu = !0);
                        break;
                    case 404:
                        (0,
                        g.Z)(Mu, Fu.ERROR, 404),
                        zu(),
                        Vu = 0,
                        clearTimeout(xu),
                        clearTimeout(Hu),
                        clearTimeout(Zu),
                        xu = 0,
                        Hu = 0,
                        Zu = 0,
                        Yu = !1
                    }
                }(t);
                break;
            case XMLHttpRequest.DONE:
                !function(e) {
                    200 === e.status && (Uu.info("Master playlist downloaded", {
                        url: e.responseURL,
                        content: e.responseText
                    }),
                    Vu = 1,
                    (0,
                    g.Z)(Mu, Fu.SUCCESS, e.streamUrl),
                    zu(),
                    Yu = !1)
                }(t)
            }
        }
        function Wu(e) {
            var t = e.target;
            if (Vu > 6)
                (0,
                g.Z)(Mu, Fu.ERROR, 408);
            else {
                Vu += 1;
                var n = Math.pow(2, Vu);
                Uu.debug("UHLS timeout. Retrying in ".concat(n, " secs")),
                zu(),
                xu = setTimeout((function() {
                    return Qu(t.streamUrl)
                }
                ), n * ju)
            }
        }
        function Qu(e) {
            Uu.debug("load", e),
            e ? Bu && void 0 !== Bu.readyState ? Uu.debug("current request already sent, abort first") : ((Bu = new XMLHttpRequest).streamUrl = e,
            Bu.timeout = 5e3,
            Bu.onreadystatechange = Ku,
            Bu.ontimeout = Wu,
            Bu.onerror = Wu,
            e && o().playstation && (e = e.replace("/iphone/", "/sony/")),
            Bu.open("GET", e, !0),
            Bu.setRequestHeader("Content-type", "application/x-www-form-urlencoded"),
            Bu.send()) : Uu.debug("no url")
        }
        function zu() {
            Bu = null
        }
        var Xu, qu, $u = {
            event: Fu,
            load: Qu,
            abort: function() {
                Uu.debug("abort"),
                clearTimeout(xu),
                clearTimeout(Hu),
                clearTimeout(Zu),
                Bu && Bu.abort && Bu.abort(),
                zu()
            },
            on: function(e, t) {
                Mu[e] || (Mu[e] = []),
                Mu[e].push(t)
            },
            setPollingInterval: function(e) {
                Gu = e
            },
            setRetryTimeout: function(e) {
                ju = e
            },
            setOfflineTimeout: function(e) {
                ku = e
            },
            setRetryCount: function(e) {
                Vu = e
            }
        }, Ju = [], ed = (0,
        c.w)("lib/hlsChecker");
        function td(e) {
            $u.load(e)
        }
        $u.on($u.event.SUCCESS, (function() {
            Xu(qu)
        }
        )),
        $u.on($u.event.ERROR, (function(e) {
            ed.debug("hls check error:", e),
            qu.streams.length > 0 && (Ju.push(qu.streams.shift()),
            td(qu.streams[0].initUrl))
        }
        ));
        var nd = function(e, t, n) {
            var r, a;
            t = t || {},
            n.forEach((function(n) {
                n.hasOwnProperty("name") && (r = n.name,
                a = n.hasOwnProperty("updatedName") ? n.updatedName : n.name,
                t[a] = e.hasOwnProperty(a) ? e[a] : e[r])
            }
            ))
        }
          , rd = [{
            name: "name"
        }, {
            name: "url"
        }, {
            name: "varnishUrl"
        }, {
            name: "seek"
        }]
          , ad = [{
            name: "width"
        }, {
            name: "height"
        }, {
            name: "videoCodec",
            updatedName: "codec"
        }, {
            name: "bitrate"
        }, {
            name: "description"
        }, {
            name: "contentType"
        }, {
            name: "initUrl"
        }, {
            name: "chunkId"
        }, {
            name: "streamNameService"
        }, {
            name: "url",
            updatedName: "initUrl"
        }, {
            name: "streamName",
            updatedName: "segmentUrl"
        }, {
            name: "chunkTime",
            updatedName: "segmentLength"
        }]
          , id = (0,
        c.w)("shim/legacy")
          , od = function(e) {
            return function(e) {
                return !!(e && (0,
                Ii.Z)(e) && e[0] && e[0].streams && (0,
                Ii.Z)(e[0].streams) && e[0].streams[0])
            }(e) ? (e.providers = function(e) {
                return e.map((function(e) {
                    var t = {};
                    return nd(e, t, rd),
                    t
                }
                ))
            }(e),
            e.hashes = function(e) {
                var t, n = e[0].streams[0];
                return n.hasOwnProperty("chunkRange") && (t = n.chunkRange),
                t
            }(e),
            e.streams = function(e) {
                return e[0].streams.map((function(e) {
                    var t = {};
                    return nd(e, t, ad),
                    (0,
                    Ii.Z)(t.segmentUrl) && (t.segmentUrl = t.segmentUrl[0]),
                    t
                }
                ))
            }(e),
            e.chunkTime = function(e) {
                var t, n;
                for (n = 0; n < e[0].streams.length; n++)
                    if (e[0].streams[n].hasOwnProperty("chunkTime")) {
                        t = e[0].streams[n].chunkTime;
                        break
                    }
                return t
            }(e),
            e.streamType = e.hashes ? P : _,
            e) : (id.warn("cannot validate module structure"),
            null)
        }
          , sd = function(e) {
            return function(e) {
                return !!(e.hasOwnProperty("providers") && e.hasOwnProperty("streams") && e.hasOwnProperty("hashes") && e.hashes)
            }(e) ? (e.streams = function(e) {
                return e.streams.map((function(t) {
                    var n = {};
                    return nd(t, n, ad),
                    e.hasOwnProperty("chunkTime") && (n.segmentLength = e.chunkTime),
                    e.hasOwnProperty("chunkId") && (n.chunkId = e.chunkId),
                    n
                }
                ))
            }(e),
            e) : (debugLogger.warn("cannot validate module structure"),
            null)
        }
          , cd = (0,
        c.w)("shim/flvsegmented")
          , ud = function(e) {
            return function(e) {
                return !!(e.hasOwnProperty("providers") && e.hasOwnProperty("streams") && e.hasOwnProperty("hashes") && e.hashes)
            }(e) ? (e.hashes = function(e) {
                var t = {};
                return e && e.hashes && ((0,
                Ii.Z)(e.hashes) ? t = e.hashes[0] : (0,
                nc.Z)(e.hashes) && (t = e.hashes)),
                t
            }(e),
            e.streams = function(e) {
                var t;
                return t = e.streams.map((function(e) {
                    var t = {};
                    return nd(e, t, ad),
                    (0,
                    Ii.Z)(t.segmentUrl) && (t.segmentUrl = t.segmentUrl[0]),
                    t
                }
                )),
                e.hasOwnProperty("keyframe") && (0,
                Ii.Z)(e.keyframe) ? e.keyframe.forEach((function(e, n) {
                    t[n] && (t[n].chunkId = +e.chunkId || 0)
                }
                )) : t.forEach((function(e) {
                    e.chunkId = e.chunkId || 0
                }
                )),
                t
            }(e),
            e.hasOwnProperty("keyframe") && delete e.keyframe,
            e) : (cd.warn("cannot validate module structure"),
            null)
        }
          , dd = (0,
        c.w)("shim/hls")
          , ld = function(e) {
            return function(e) {
                return !!(e && (0,
                Ii.Z)(e) && e[0] && e[0].name && e[0].url)
            }(e) ? (e.streamType = w,
            e.streams = function(e) {
                return e.map((function(e) {
                    var t = {};
                    return nd(e, t, ad),
                    t
                }
                ))
            }(e),
            e) : (dd.warn("cannot validate module structure"),
            null)
        }
          , fd = (0,
        c.w)("shim/mp4movie")
          , pd = function(e) {
            return function(e) {
                return !!(e && (0,
                Ii.Z)(e) && e[0] && e[0].streams && e[0].streams[0].mimetype)
            }(e) ? (e.streamType = D,
            e.streams = function(e) {
                return e[0].streams.map((function(e) {
                    var t = {};
                    return nd(e, t, ad),
                    t
                }
                ))
            }(e),
            e) : (fd.warn("cannot validate module structure"),
            null)
        }
          , md = (0,
        c.w)("shim/simple")
          , gd = function(e) {
            return function(e) {
                return !(!e.hasOwnProperty("providers") || !e.hasOwnProperty("streams"))
            }(e) ? (e.streamType = _,
            e.streams = function(e) {
                return e.streams.map((function(e) {
                    var t = {};
                    return nd(e, t, ad),
                    t
                }
                ))
            }(e),
            e) : (md.warn("cannot validate module structure"),
            null)
        };
        function vd(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function Ed(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? vd(Object(n), !0).forEach((function(t) {
                    hd(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : vd(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function hd(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var yd = function(e) {
            return function(e) {
                var t = (0,
                s.default)(e, "streamFormats.mp4/segmented")
                  , n = (0,
                s.default)(t, "contentAccess.accessList")
                  , r = e.providers.map((function(e) {
                    var t = new URL(e.url)
                      , r = (0,
                    s.default)(n, "0.data.protocol");
                    t.protocol = r;
                    var a = (0,
                    s.default)(n, "0.data.path")
                      , i = "".concat(t.pathname, "/").concat(a, "/").replace(/\/{2,}/g, "/");
                    return t.pathname = i,
                    Object.assign(e, {
                        url: t.toString()
                    })
                }
                ))
                  , a = t.streams.map((function(e) {
                    return Ed(Ed({}, e), {}, {
                        segmentLength: t.chunkTime,
                        chunkId: t.chunkId
                    })
                }
                ));
                return Ed(Ed({}, t), {}, {
                    streams: a,
                    providers: r,
                    streamType: R,
                    sourceMedia: e.sourceMedia
                })
            }(e)
        }
          , bd = function(e) {
            var t = (0,
            s.default)(e, "streamFormats.mp4/segmented.contentAccess.accessList");
            return qt().capabilities.includes(qt().formats.MP4_SEGMENTED) && e && 1 === e.version && t && t.length
        };
        function Td(e) {
            return function(e) {
                if (Array.isArray(e))
                    return _d(e)
            }(e) || function(e) {
                if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"])
                    return Array.from(e)
            }(e) || Id(e) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }
        function Sd(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function Od(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Sd(Object(n), !0).forEach((function(t) {
                    Ld(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Sd(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function Ld(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function Ad(e, t) {
            return function(e) {
                if (Array.isArray(e))
                    return e
            }(e) || function(e, t) {
                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != n) {
                    var r, a, i = [], o = !0, s = !1;
                    try {
                        for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value),
                        !t || i.length !== t); o = !0)
                            ;
                    } catch (e) {
                        s = !0,
                        a = e
                    } finally {
                        try {
                            o || null == n.return || n.return()
                        } finally {
                            if (s)
                                throw a
                        }
                    }
                    return i
                }
            }(e, t) || Id(e, t) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }
        function Id(e, t) {
            if (e) {
                if ("string" == typeof e)
                    return _d(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name),
                "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _d(e, t) : void 0
            }
        }
        function _d(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++)
                r[n] = e[n];
            return r
        }
        function Pd(e) {
            var t = (0,
            Tn.Z)(e, ["language", "country", "label", "default", "audioCodec", "segmentUrl", "segmentLength", "chunkId"]);
            return Object.assign(t, {
                contentType: "audio",
                bitrate: (0,
                s.default)(t, "audioCodec.audioBitrate")
            })
        }
        function Dd(e) {
            var t = (0,
            Tn.Z)(e, ["offsetInMs", "offset", "preset", "transcoded", "videoCodec", "segmentUrl", "segmentLength", "chunkId"]);
            return Object.assign(t, {
                contentType: "video",
                bitrate: (0,
                s.default)(t, "videoCodec.videoBitrate"),
                width: (0,
                s.default)(t, "videoCodec.width"),
                height: (0,
                s.default)(t, "videoCodec.height")
            })
        }
        function Rd(e) {
            return {
                audio: Pd(e),
                video: Dd(e)
            }
        }
        function wd(e) {
            var t = (0,
            s.default)(e, "streamFormats.flv/segmented")
              , n = t.streams
              , r = t.chunkTime
              , a = t.chunkId;
            if (0 === n.length)
                return [];
            var i = n.map((function(e) {
                return Object.assign(e, {
                    segmentLength: r,
                    chunkId: a
                })
            }
            ));
            if (function(e) {
                var t = Ad(e, 1)[0];
                return -1 === (0,
                s.default)(t, "videoCodec.videoBitrate", -1) && -1 === (0,
                s.default)(t, "videoCodec.height", -1)
            }(n))
                return i.map(Pd);
            if (function(e) {
                var t = Ad(e, 1)[0];
                return -1 === (0,
                s.default)(t, "audioCodec.audioBitrate", -1)
            }(n))
                return i.map(Dd);
            var o = function(e) {
                var t = e.map(Rd).reduce((function(e, t) {
                    var n, r, a, i = t.audio, o = t.video, c = (n = o,
                    r = (0,
                    s.default)(n, "videoCodec.height", 0),
                    a = (0,
                    s.default)(n, "videoCodec.videoBitrate", 0),
                    "".concat(r, ":").concat(a));
                    return e.hasOwnProperty(c) || (e[c] = Object.assign(o, {
                        audioVersions: [],
                        segmentUrl: void 0
                    })),
                    e[c].audioVersions.push(i),
                    e
                }
                ), {});
                return Object.values(t)
            }(i)
              , c = o[0].audioVersions.map((function(e) {
                return Od(Od({}, e), {}, {
                    segmentUrl: void 0
                })
            }
            ));
            return [].concat(Td(o), Td(c))
        }
        var Nd = function(e) {
            return function(e) {
                var t = function(e) {
                    var t = (0,
                    s.default)(e, "providers", [])
                      , n = (0,
                    s.default)(e, "streamFormats.flv/segmented.contentAccess")
                      , r = (0,
                    s.default)(n, "accessList.0.data");
                    return r && "INSERT" === n.accessMode ? t.map((function(e) {
                        var t = new URL(e.url);
                        return r.protocol && (t.protocol = r.protocol),
                        r.path && (t.pathname = r.path),
                        Od(Od({}, e), {}, {
                            url: t.toString()
                        })
                    }
                    )) : t
                }(e)
                  , n = wd(e);
                return Od(Od({}, (0,
                s.default)(e, "streamFormats.flv/segmented")), {}, {
                    streams: n,
                    providers: t,
                    streamType: P,
                    sourceMedia: e.sourceMedia
                })
            }(e)
        }
          , Cd = function(e) {
            var t = (0,
            s.default)(e, "streamFormats.flv/segmented.contentAccess.accessList");
            return -1 !== qt().capabilities.indexOf(qt().formats.FLV_SEGMENTED) && e && 1 === e.version && t && t.length
        };
        function Ud(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function Md(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Ud(Object(n), !0).forEach((function(t) {
                    Fd(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ud(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function Fd(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var jd = function(e) {
            return function(e) {
                var t = function(e) {
                    var t = (0,
                    s.default)(e, "providers", [])
                      , n = (0,
                    s.default)(e, "streamFormats.hls/improved.contentAccess")
                      , r = (0,
                    s.default)(n, "accessList.0.data");
                    return r && "APPEND" === n.accessMode ? t.map((function(e) {
                        var t = new URL(e.url).host
                          , n = new URL(r.url);
                        return n.searchParams.set(r.parameter, encodeURIComponent(t)),
                        Md(Md({}, e), {}, {
                            url: n.toString(),
                            providerHost: t
                        })
                    }
                    )) : t
                }(e)
                  , n = function(e, t) {
                    var n = (0,
                    s.default)(e, "streamFormats.hls/improved.contentAccess.accessList.0.data.parameter");
                    return t.map((function(e) {
                        return {
                            parameter: n,
                            initUrl: e.url
                        }
                    }
                    ))
                }(e, t);
                return {
                    providers: t,
                    streams: n,
                    streamType: w
                }
            }(e)
        }
          , kd = function(e) {
            var t = (0,
            s.default)(e, "streamFormats.hls/improved.contentAccess.accessList");
            return t && t.length && e && 1 === e.version
        }
          , Gd = function(e) {
            return e.streamType = D,
            e.streams = [],
            function(e) {
                var t = (0,
                s.default)(e, "streamFormats.mp4.contentAccess.accessList");
                return e.streams = t.map((function(e) {
                    return {
                        mimetype: "video/mp4",
                        segmentUrl: e.data.url
                    }
                }
                )),
                e
            }(e)
        }
          , Bd = function(e) {
            var t = (0,
            s.default)(e, "streamFormats.mp4.contentAccess.accessList");
            return e && 1 === e.version && t && t.length
        }
          , Vd = function(e) {
            return e.streamType = _,
            e.streams = [],
            function(e) {
                var t, n = (0,
                s.default)(e, "streamFormats.flv.contentAccess.accessList");
                return e.providers = [],
                t = n.map((function(t) {
                    return e.providers.push({
                        name: t.data.provider,
                        seek: {
                            mode: "byte",
                            param: "fs"
                        }
                    }),
                    t.data.url
                }
                )),
                e.streams = [{
                    segmentUrl: t
                }],
                e
            }(e)
        }
          , xd = function(e) {
            var t = (0,
            s.default)(e, "streamFormats.flv.contentAccess.accessList");
            return e && 1 === e.version && t && t.length
        }
          , Hd = (0,
        c.w)("streamshim")
          , Zd = function(e) {
            if (!e)
                return null;
            if (e.hasOwnProperty("version") && 1 === e.version)
                bd(e) ? e = yd(e) : Cd(e) ? e = Nd(e) : kd(e) ? e = jd(e) : Bd(e) ? e = Gd(e) : xd(e) && (e = Vd(e));
            else if (e.hasOwnProperty("streamType"))
                switch (Hd.debug("shim ".concat(e.streamType, " type")),
                e.streamType) {
                case R:
                    e = sd(e);
                    break;
                case P:
                    e = ud(e)
                }
            else
                e = (0,
                Ii.Z)(e) ? function(e) {
                    return !(!(e && (0,
                    Ii.Z)(e) && e[0] && e[0].name && e[0].url) || e[0].providers)
                }(e) ? ld(e) : function(e) {
                    return !!(e && (0,
                    Ii.Z)(e) && e[0] && e[0].streams && e[0].streams[0].mimetype && "video/mp4" === e[0].streams[0].mimetype)
                }(e) ? pd(e) : od(e) : gd(e);
            return e
        };
        function Yd(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++)
                r[n] = e[n];
            return r
        }
        function Kd(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function Wd(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var Qd = (0,
        c.w)("streams")
          , zd = {
            text: [],
            audio: [],
            video: []
        };
        function Xd() {
            var e = zd.audio.reduce((function(e, t) {
                var n, r = t.label || "Default", a = e[r] || [];
                return e[r] = [].concat(function(e) {
                    if (Array.isArray(e))
                        return Yd(e)
                }(n = a) || function(e) {
                    if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"])
                        return Array.from(e)
                }(n) || function(e, t) {
                    if (e) {
                        if ("string" == typeof e)
                            return Yd(e, t);
                        var n = Object.prototype.toString.call(e).slice(8, -1);
                        return "Object" === n && e.constructor && (n = e.constructor.name),
                        "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Yd(e, t) : void 0
                    }
                }(n) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }(), [t]),
                e
            }
            ), {});
            return Object.keys(e).map((function(t) {
                return e[t]
            }
            )).map((function(e) {
                return e.reduce((function(e, t) {
                    return e.transcoded ? e : t
                }
                ))
            }
            ))
        }
        var qd, $d, Jd, el, tl, nl = {
            store: function(e) {
                var t, n = (t = e.contentType) ? t.split("/")[0] : "video";
                if (zd.hasOwnProperty(n)) {
                    var r = function(e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = null != arguments[t] ? arguments[t] : {};
                            t % 2 ? Kd(Object(n), !0).forEach((function(t) {
                                Wd(e, t, n[t])
                            }
                            )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Kd(Object(n)).forEach((function(t) {
                                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                            }
                            ))
                        }
                        return e
                    }({
                        id: zd[n].length
                    }, e);
                    zd[n].push(r)
                } else
                    Qd.warn("Unknown stream type: ".concat(n))
            },
            clear: function() {
                Object.assign(zd, {
                    text: [],
                    audio: [],
                    video: []
                })
            },
            getAvailableQualities: function() {
                return zd.video.filter((function(e) {
                    return e.height || e.bitrate
                }
                ))
            },
            getVideoVersions: function() {
                return zd.video
            },
            getAudioVersions: Xd,
            getDefaultAudioVersion: function() {
                var e = Xd()
                  , t = Ae.get("defaultLang");
                return (0,
                ec.Z)(e, t) || e.find((function(e) {
                    return !!e.default
                }
                )) || e[0]
            },
            getTextVersions: function() {
                return zd.text
            },
            findOneVideoVersionById: function(e) {
                return zd.video.find((function(t) {
                    return t.id === e
                }
                ))
            },
            findOneTextVersionBySourceStream: function(e) {
                return zd.text.find((function(t) {
                    return t.sourceStreamVersion === e
                }
                ))
            },
            findOneAudioVersionById: function(e) {
                return Xd().find((function(t) {
                    return t.id === e
                }
                ))
            }
        }, rl = n(63833), al = ["Opus", "a3ds", "ac-3", "ac-4", "alac", "alaw", "dra1", "dts+", "dts-", "dtsc", "dtse", "dtsh", "dtsl", "dtsx", "dtsy", "ec+3", "ec-3", "enca", "g719", "g726", "m4ae", "m4ae", "mha1", "mha2", "mhm1", "mhm2", "mlpa", "mp4a", "raw ", "samr", "sawb", "sawp", "sevc", "sevs", "sqcp", "ssmv", "twos", "ulaw"], il = null, ol = null, sl = !1, cl = (0,
        c.w)("streamparser");
        function ul() {
            A(T, L.STREAM_VERSION_UPDATE)
        }
        function dl(e) {
            return Object.prototype.hasOwnProperty.call(e, "videoLength") ? e.videoLength : ue.getDurationInMillisec()
        }
        function ll(e) {
            (function(e) {
                Jd = e.streamType,
                qd = e.hashes;
                var t = dl(e);
                t && t !== ue.getDurationInMillisec() && ue.setDurationInMillisec(t),
                e.streams = e.streams || [],
                nl.clear(),
                e.streams.forEach((function(e) {
                    !function(e) {
                        Object.prototype.hasOwnProperty.call(e, "chunkId") && ($d = e.chunkId)
                    }(e),
                    nl.store(e)
                }
                )),
                Ro(),
                e.providers && e.providers.forEach((function(e) {
                    _o(e)
                }
                ))
            }
            )(e),
            ul()
        }
        function fl(e) {
            if (!ue.isSegmentedMP4() && !ue.isFLV()) {
                var t = dl(e)
                  , n = e.cut && sl;
                ol = e,
                t && t !== ue.getDurationInMillisec() && (ue.setDurationInMillisec(1e3 * t),
                n = !0),
                n && ul()
            }
        }
        function pl() {
            ol && ol.cut && ul(),
            sl = !0
        }
        function ml(e) {
            if (function(e) {
                return cl.debug("handleLiveStatus", {
                    previousLiveStatus: tl,
                    liveStatus: el
                }),
                (gl(e) || "offline" === e || gl(e) && e.hasOwnProperty("version")) && ((el = !("offline" === e || gl(e) && !1 === e.contentAvailable)) !== tl && (!tl || el || ue.isHLS() ? A(T, L.LIVE, el) : A(T, L.OFFLINE_MODULE_RECEIVED, el),
                el && ue.setDurationInMillisec(0),
                tl = el),
                "offline" === e || !1 === e.contentAvailable) ? (ue.setStreamType(void 0),
                !1) : (function(e) {
                    var t = e.mid;
                    return t && t.indexOf("recorded") > -1
                }(e) && (tl = !1,
                el = !1,
                A(T, L.RECORDED_READY)),
                !0)
            }(e) && function(e) {
                return e && e.streamFormats && Object.keys(e.streamFormats).length
            }(e) && (e = Zd(e)))
                if (e.streamType) {
                    if (ue.setStreamType(e.streamType),
                    il || Ne.send({
                        message: "Streamtype selected",
                        data: {
                            category: "Playback",
                            item: "initial loading",
                            action: "selected"
                        }
                    }),
                    t = e,
                    n = il,
                    JSON.stringify(t) !== JSON.stringify(n)) {
                        var t, n, r;
                        if (il = (0,
                        Ai.Z)(e),
                        e.streamType === w)
                            if (ue.isCid() && !ue.isOffairVid())
                                La.dispatch((0,
                                pa.zp)(!1));
                            else {
                                var a = (0,
                                s.default)(e, "streams.0.initUrl");
                                "string" == typeof a && (cl.debug("Detect audio only playlist", {
                                    masterManifest: a
                                }),
                                (r = a,
                                fetch(r).then((function(e) {
                                    return e.text()
                                }
                                )).then((function(e) {
                                    var t = (0,
                                    rl.Xw)(e);
                                    if (0 === t.length)
                                        throw new Error("There are no variant streams");
                                    return t.every((function(e) {
                                        var t = (0,
                                        rl.oN)(e);
                                        return "string" == typeof t && t.split(",").every((function(e) {
                                            var t = e.substr(0, 4);
                                            return al.includes(t)
                                        }
                                        ))
                                    }
                                    ))
                                }
                                ))).then((function(e) {
                                    e && cl.info("Audio only playlist detected"),
                                    La.dispatch((0,
                                    pa.zp)(e))
                                }
                                )).catch((function(e) {
                                    cl.warn("Failed to check audio only playlist", e)
                                }
                                )))
                            }
                        !function(e, t) {
                            var n;
                            Xu = t,
                            qu = e,
                            ue.isCid() && (n = qu) && "hls" === n.streamType && n.streams && n.streams.length ? (ed.debug("check hls", qu),
                            Ju = [],
                            $u.abort(),
                            td(qu.streams[0].initUrl)) : Xu(qu)
                        }(e, ll)
                    }
                } else
                    A(T, L.UNSUPPORTED)
        }
        function gl(e) {
            var t = e.mid;
            return t && t.indexOf("channel") > -1
        }
        var vl = function() {
            I(T, L.CONTENT_CUT_UPDATE, pl),
            I(S, L.STREAM_UPDATE, ml),
            I(S, L.META_UPDATE, fl)
        }
          , El = function() {
            return qd
        }
          , hl = function() {
            return Jd
        }
          , yl = function() {
            return il && il.sourceMedia
        }
          , bl = function() {
            return $d
        }
          , Tl = function() {
            cl.debug("reset"),
            $d = void 0,
            qd = null,
            Jd = void 0,
            el = void 0,
            tl = void 0,
            sl = !1,
            ol = null,
            il = null,
            nl.clear(),
            Ro()
        };
        function Sl(e) {
            return Sl = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            }
            : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }
            ,
            Sl(e)
        }
        function Ol(e, t) {
            var n, r = e.length;
            for (n = 0; n < r && e[n] != t; n++)
                ;
            return e.splice(n, 1),
            e
        }
        var Ll = {
            emit: function(e, t, n, r) {
                if (r = r || "def",
                e && e[t]) {
                    var a = [];
                    if ("def" === r)
                        for (var i in e[t])
                            a = a.concat(e[t][i]);
                    else
                        a = e[t][r];
                    var o, s = a.length;
                    for (i = 0; i < s; i++)
                        o = a[i],
                        "undefined" !== Sl(n) ? o.call(null, n) : o.call(null)
                }
            },
            on: function(e, t, n, r) {
                r = r || "def",
                e[t] || (e[t] = {},
                e[t].def = []),
                e[t][r] || (e[t][r] = []),
                e[t][r].push(n)
            },
            off: function(e, t, n, r) {
                if (t && n && r)
                    e[t][r] = Ol(e[t][r], n);
                else if (t && n && !r)
                    for (var a in e[t])
                        e[t][a] = Ol(e[t][a], n);
                else if (!t || n || r) {
                    if (t && !n && r)
                        e[t][r] = [];
                    else if (!t && !n && r)
                        for (var i in e)
                            e[i][r] = []
                } else
                    e[t] = {
                        def: []
                    }
            }
        };
        function Al(e) {
            if (!e.length)
                return 0;
            var t = e.reduce((function(e, t) {
                return 0 !== t ? e + 1 / t : e
            }
            ), 0);
            return 0 === t ? 0 : e.length / t
        }
        function Il(e) {
            return e.length ? e.reduce((function(e, t) {
                return e + t
            }
            ), 0) / e.length : 0
        }
        var _l, Pl, Dl, Rl, wl, Nl, Cl, Ul, Ml = {
            harmonicFromList: Al,
            harmonicFromKey: function(e, t) {
                return e.length ? Al(e.map((function(e) {
                    return e[t]
                }
                ))) : 0
            },
            fromList: Il,
            fromKey: function(e, t) {
                return e.length ? Il(e.map((function(e) {
                    return e[t]
                }
                ))) : 0
            }
        }, Fl = function(e) {
            function t(e) {
                var t = Pl.slice(Pl.length - e);
                return t.map((function(e) {
                    return e.sizeInKiloBit / e.loadingTimeInSec
                }
                ))
            }
            function n(e) {
                return e <= Pl.length
            }
            return Pl = [],
            {
                getName: function() {
                    return e
                },
                addThroughputSample: function(e) {
                    if (rc(e)) {
                        var t = ic(e)
                          , n = t.waitingTime
                          , r = t.loadingTime;
                        Pl.push({
                            sizeInKiloBit: .008 * e.size,
                            waitingTimeInSec: n / 1e3,
                            loadingTimeInSec: r / 1e3
                        }),
                        Pl = Pl.slice(-50),
                        Rl = null,
                        Dl = null,
                        wl = null,
                        _l = Date.now()
                    }
                },
                getHarmonicMeanWaitingTime: function(e) {
                    if (n(e)) {
                        if (null === Rl || e !== Rl.calcLength) {
                            var t = Pl.slice(Pl.length - e);
                            Rl = {
                                calcLength: e,
                                value: Ml.harmonicFromKey(t, "waitingTimeInSec")
                            }
                        }
                        return Rl.value
                    }
                },
                getHarmonicMeanThroughput: function(e) {
                    if (n(e)) {
                        if (null === Dl || e !== Dl.calcLength) {
                            var r = t(e);
                            Dl = {
                                calcLength: e,
                                value: Ml.harmonicFromList(r)
                            }
                        }
                        return Dl.value
                    }
                },
                getMeanThroughput: function(e) {
                    if (n(e)) {
                        if (null === wl || e !== wl.calcLength) {
                            var r = t(e);
                            wl = {
                                calcLength: e,
                                value: Ml.fromList(r)
                            }
                        }
                        return wl.value
                    }
                },
                getLastUpdatedTimeStamp: function() {
                    return _l
                }
            }
        }, jl = [], kl = {
            UPDATE: "update",
            PROVIDER: "stats"
        }, Gl = {}, Bl = (0,
        c.w)("atlas/playback/qos/network"), Vl = {
            getCurrentProviderName: function() {
                return Nl ? Nl.getName() : void 0
            },
            setCurrentProviderName: function(e) {
                Nl = function(e) {
                    return jl.find((function(t) {
                        return t.name === e
                    }
                    ))
                }(e),
                void 0 === Nl && (Nl = Fl(e),
                jl.push(Nl)),
                Ll.emit(Gl, kl.PROVIDER, e)
            },
            getHarmonicMeanWaitingTime: function(e) {
                return Nl ? Nl.getHarmonicMeanWaitingTime(e) : void 0
            },
            getHarmonicMeanThroughput: function(e) {
                return Nl ? Nl.getHarmonicMeanThroughput(e) : void 0
            },
            getMeanThroughput: function(e) {
                return Nl ? Nl.getMeanThroughput(e) : void 0
            },
            addThroughputSample: function(e) {
                Nl ? (Nl.addThroughputSample(e),
                Ll.emit(Gl, kl.UPDATE)) : Bl.warn("sample data without provider set")
            },
            event: kl,
            on: Ll.on.bind(null, Gl)
        }, xl = {}, Hl = {
            BANDWIDTH_UPDATE: "bandwidthUpdate",
            QUALITY_SELECTED: "qualitySelected",
            EMPTY_SELECTION: "emptySelection",
            STATS: "stats"
        }, Zl = (0,
        c.w)("qos"), Yl = [], Kl = [], Wl = {
            waitingTimeInSec: 0,
            playerWidth: 0,
            playerHeight: 0,
            shortMean: void 0,
            longMean: void 0,
            chunkLengthInSec: 0,
            forcedId: void 0,
            currentVersion: null
        };
        function Ql(e) {
            var t = {};
            return e.forEach((function(e) {
                Object.prototype.hasOwnProperty.call(Wl, e) ? t[e] = Wl[e] : Zl.debug("Warning: dependency does not exist")
            }
            )),
            t
        }
        function zl(e, t) {
            var n = [];
            return t.forEach((function(t) {
                Object.prototype.hasOwnProperty.call(e, t) && void 0 !== e[t] || n.push(t)
            }
            )),
            n
        }
        function Xl(e, t) {
            var n = (0,
            Ai.Z)(e)
              , r = Ql(t.getDependencies())
              , a = t.getLeastWorstFilter();
            return Ll.emit(xl, Hl.EMPTY_SELECTION, t.NAME),
            a.call(null, n, r)
        }
        function ql(e, t) {
            var n = (0,
            Ai.Z)(e)
              , r = t.getDependencies()
              , a = Ql(r)
              , i = t.getFilter()
              , o = zl(a, r);
            return 0 === o.length ? n = i.call(null, n, a) : Zl.debug("Filter ".concat(t.NAME, "function has the following missing dependencies: "), o),
            n
        }
        function $l() {
            var e;
            0 !== Yl.length && (e = function(e) {
                var t, n, r = (0,
                Ai.Z)(e);
                for (n = 0; n < Kl.length; n += 1)
                    if (0 === (r = ql(r, t = Kl[n])).length) {
                        r = Xl(e, t);
                        break
                    }
                return r
            }(Yl),
            Cl = Ul ? function(e) {
                var t = e[0]
                  , n = Ul.getDependencies()
                  , r = Ql(n)
                  , a = Ul.getRunner()
                  , i = zl(r, n);
                return 0 === i.length ? t = a.call(null, e, r) : Zl.warn("Select module has the following missing dependencies: ", i),
                t
            }(e) : e[0],
            Ll.emit(xl, Hl.QUALITY_SELECTED, Cl))
        }
        function Jl() {
            Wl.shortMean = Vl.getHarmonicMeanThroughput(3),
            Wl.longMean = Vl.getHarmonicMeanThroughput(5),
            Wl.waitingTimeInSec = Vl.getHarmonicMeanWaitingTime(5),
            Ll.emit(xl, Hl.STATS, {
                throughput: {
                    shortMean: Wl.shortMean,
                    longMean: Wl.longMean,
                    waitingTimeInSec: Wl.waitingTimeInSec
                }
            }),
            Ll.emit(xl, Hl.BANDWIDTH_UPDATE)
        }
        function ef(e) {
            Ll.emit(xl, Hl.STATS, {
                provider: {
                    name: e
                }
            })
        }
        var tf = {
            init: function() {
                Vl.on(Vl.event.UPDATE, Jl),
                Vl.on(Vl.event.PROVIDER, ef)
            },
            reset: function() {},
            setStreams: function(e) {
                Yl = (0,
                Ai.Z)(e),
                $l()
            },
            getStreams: function() {
                return Yl
            },
            setFilters: function(e) {
                var t = (Kl = e).map((function(e) {
                    return e.NAME
                }
                ));
                Ll.emit(xl, Hl.STATS, {
                    filters: {
                        names: t
                    }
                })
            },
            setSelectModule: function(e) {
                Ul = e
            },
            setParameters: function(e) {
                Wl = Object.assign(Wl, e),
                $l()
            },
            setForcedId: function(e) {
                Wl.forcedId = e >= 0 ? e : void 0
            },
            setQualityPlaying: function(e) {
                Wl.currentVersion = e
            },
            setCurrentProviderName: function(e) {
                Vl.setCurrentProviderName(e)
            },
            getAverageBandwidth: function(e) {
                return Vl.getMeanThroughput(e)
            },
            addThroughputSample: function(e) {
                Vl.addThroughputSample(e),
                $l()
            },
            getSelectedQuality: function() {
                return Cl ? Cl.id : void 0
            },
            getSelectedStreamVerison: function() {
                return Cl
            },
            event: Hl,
            on: Ll.on.bind(null, xl),
            off: Ll.off.bind(null, xl)
        }
          , nf = function() {
            return {
                NAME: "network",
                getDependencies: function() {
                    return ["longMean", "shortMean", "waitingTimeInSec", "chunkLengthInSec"]
                },
                getFilter: function() {
                    return function(e, t) {
                        var n = function(e) {
                            var t = e.shortMean
                              , n = e.longMean;
                            if (t && n)
                                return Math.min(n, t)
                        }(t);
                        if (!n || void 0 === t.chunkLengthInSec)
                            return e;
                        var r = t.chunkLengthInSec;
                        return e.filter((function(e) {
                            return e.bitrate * r / n + t.waitingTimeInSec < .8 * r
                        }
                        ))
                    }
                },
                getLeastWorstFilter: function() {
                    return function(e, t) {
                        return 0 === e.length ? [] : [e.reduce((function(e, t) {
                            return t.bitrate < e.bitrate ? t : e
                        }
                        ))]
                    }
                }
            }
        }
          , rf = function() {
            function e(e) {
                return e.video.width * e.video.height
            }
            return {
                NAME: "initialScreen",
                getDependencies: function() {
                    return ["playerWidth", "playerHeight"]
                },
                getFilter: function() {
                    return function(t, n) {
                        var r = n.playerWidth
                          , a = n.playerHeight;
                        return t.filter((function(t) {
                            return !Object.hasOwnProperty.call(t, "video") || e(t) / (r * a) < .6
                        }
                        ))
                    }
                },
                getLeastWorstFilter: function() {
                    return function(t) {
                        return t.length && Object.hasOwnProperty.call(t[0], "video") ? [t.reduce((function(t, n) {
                            return e(n) < e(t) ? n : t
                        }
                        ))] : t
                    }
                }
            }
        }
          , af = function() {
            return {
                NAME: "screen",
                getDependencies: function() {
                    return ["playerWidth", "playerHeight"]
                },
                getFilter: function() {
                    return function(e, t) {
                        var n = t.playerWidth
                          , r = t.playerHeight;
                        return e.filter((function(e) {
                            return !Object.hasOwnProperty.call(e, "video") || n >= e.video.width || r >= e.video.height
                        }
                        ))
                    }
                },
                getLeastWorstFilter: function() {
                    return function(e) {
                        return e
                    }
                }
            }
        }
          , of = function() {
            return {
                NAME: "streamVersionId",
                getDependencies: function() {
                    return ["forcedId"]
                },
                getFilter: function() {
                    return function(e, t) {
                        var n = t.forcedId;
                        return e.filter((function(e) {
                            return n === e.id
                        }
                        ))
                    }
                },
                getLeastWorstFilter: function() {
                    return function(e) {
                        return e
                    }
                }
            }
        };
        function sf(e, t) {
            return t.bitrate - e.bitrate
        }
        var cf = function() {
            return {
                NAME: "select",
                getDependencies: function() {
                    return []
                },
                getRunner: function() {
                    return function(e) {
                        return e.slice().sort(sf)[0]
                    }
                }
            }
        };
        function uf(e) {
            if (e) {
                var t = ["segmentId", "hashId"];
                return e.replace(/%/g, (function() {
                    return "#".concat(t.shift(), "#")
                }
                ))
            }
        }
        var df = function(e, t) {
            switch (t) {
            case "mp4/segmented":
                return function(e) {
                    return {
                        contentType: e.contentType,
                        codecs: e.codec,
                        initUrl: uf(e.initUrl),
                        segmentUrl: uf(e.segmentUrl),
                        segmentLength: e.segmentLength,
                        label: e.label,
                        language: e.language,
                        country: e.country
                    }
                }(e);
            case "flv/segmented":
                return function(e) {
                    return {
                        contentType: "video/flv",
                        codecs: "",
                        segmentUrl: uf(e.segmentUrl),
                        segmentLength: e.segmentLength,
                        label: e.label,
                        language: e.language,
                        country: e.country
                    }
                }(e);
            case "hls":
            case "mp4":
            case "flv/movie":
                return function(e) {
                    var t = {
                        segmentUrl: e.segmentUrl
                    };
                    return e.streamNameService && (t.streamNameService = e.streamNameService),
                    t
                }(e);
            default:
                return null
            }
        }
          , lf = function(e) {
            return {
                contentType: e.contentType,
                segmentUrl: uf(e.segmentUrl),
                country: e.country,
                default: e.default,
                language: e.language,
                label: e.label,
                sourceStreamVersion: e.sourceStreamVersion,
                segmentLength: e.segmentLength
            }
        };
        function ff(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function pf(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? ff(Object(n), !0).forEach((function(t) {
                    mf(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ff(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function mf(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function gf(e, t) {
            return "".concat(e, "://").concat(V.Z.config.tcdn, "/").concat(t, "/?protocol=http&version=1")
        }
        var vf, Ef = function(e) {
            var t = function(e) {
                switch (e.format) {
                case "hls":
                    return function(e) {
                        return {
                            url: e.provider.url || e.videoVersion.initUrl,
                            hlsSdcdnHostParameterName: e.hlsSdcdnHostParameterName
                        }
                    }(e);
                case "mp4":
                    return function(e) {
                        return {
                            url: e.videoVersion.segmentUrl
                        }
                    }(e);
                case "flv":
                    return function(e) {
                        return {
                            url: e.videoVersion.segmentUrl[0],
                            seekParameter: "fs"
                        }
                    }(e);
                case "flv/segmented":
                    return function(e) {
                        var t = {
                            contentStart: 0,
                            segmentId: e.chunkId,
                            hashes: e.hashes,
                            baseUrl: e.provider.url
                        };
                        if ("uhs_tcdn" === e.provider.name) {
                            var n = e.ssl ? "https" : "http";
                            t.streamNameService = gf(n, e.mediaId)
                        }
                        var r, a = e.videoVersion, i = e.audioVersion;
                        if (a)
                            if (i) {
                                var o = a.audioVersions.find((function(e) {
                                    return e.label === i.label
                                }
                                )).segmentUrl
                                  , s = (0,
                                Tn.Z)(a, ["segmentLength"])
                                  , c = (0,
                                Tn.Z)(i, ["label", "language", "country"])
                                  , u = pf(pf({
                                    segmentUrl: o
                                }, s), c);
                                r = df(u, e.format)
                            } else
                                r = df(a, e.format);
                        else
                            r = df(i, e.format);
                        return t.representations = [r],
                        t
                    }(e);
                default:
                    return function(e) {
                        var t = {
                            contentStart: 0,
                            segmentId: e.chunkId,
                            hashes: e.hashes,
                            baseUrl: e.provider.url,
                            sourceMedia: e.sourceMedia
                        };
                        if ("uhs_tcdn" === e.provider.name) {
                            var n = e.ssl ? "https" : "http";
                            t.streamNameService = gf(n, e.mediaId)
                        }
                        t.representations = [];
                        var r = e.videoVersion;
                        if (r) {
                            var a = df(r, e.format);
                            t.representations.push(a)
                        }
                        var i = e.audioVersion;
                        if (i) {
                            var o = df(i, e.format);
                            t.representations.push(o)
                        }
                        var s = e.textVersion;
                        if (s) {
                            var c = lf(s);
                            t.representations.push(c)
                        }
                        return t
                    }(e)
                }
            }(e)
              , n = function(e) {
                var t = {
                    format: e.format
                };
                return e.contentLength && (t.contentLength = e.isHLS ? e.trimmedLength : e.contentLength),
                t
            }(e);
            return Object.assign(t, n)
        }, hf = !1, yf = (0,
        c.w)("atlas/playback/tcdnurlresolver");
        vf = {
            isInProgress: function() {
                return hf
            },
            resolve: function(e, t, n) {
                yf.debug("resolving: ".concat(e, " - ").concat(n));
                var r = new XMLHttpRequest
                  , a = window.setTimeout(r.ontimeout, 5e3);
                function i(n, r) {
                    hf = !1,
                    t && t({
                        status: n,
                        url: e,
                        resolved: r
                    })
                }
                r.ontimeout = function() {
                    window.clearTimeout(a),
                    yf.error("timeout: ".concat(e, " - "), n),
                    i(vf.status.TIMEOUT, this.responseText)
                }
                ,
                r.onreadystatechange = function() {
                    4 === this.readyState && (window.clearTimeout(a),
                    200 === this.status ? this.responseText && this.responseText.length ? (yf.info("resolved: ".concat(e, " - "), this.responseText),
                    i(vf.status.SUCCESS, this.responseText)) : (yf.warn("resolve failed (empty response): ".concat(e, " - "), this.responseText),
                    i(vf.status.ERROR, this.responseText)) : (yf.error("resolve failed (status error): ".concat(e, " - "), this.responseText),
                    i(vf.status.ERROR, this.responseText)))
                }
                ,
                hf = !0,
                r.open("GET", n, !0),
                r.send(null)
            },
            status: {
                SUCCESS: "success",
                ERROR: "error",
                TIMEOUT: "timeout"
            }
        };
        var bf = vf;
        function Tf(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++)
                r[n] = e[n];
            return r
        }
        var Sf, Of, Lf, Af = null, If = null;
        function _f() {
            var e = Af.url || Af.baseUrl;
            if (function(e) {
                var t, n, r = e.url || e.baseUrl, a = e.format === w, i = If.format === w;
                if (a && i && Of) {
                    var o = (t = [If.url, e.url].map((function(e) {
                        try {
                            return new URL(e).searchParams
                        } catch (e) {
                            return new URLSearchParams
                        }
                    }
                    )).map((function(e) {
                        return e.get(Of)
                    }
                    )),
                    n = 2,
                    function(e) {
                        if (Array.isArray(e))
                            return e
                    }(t) || function(e, t) {
                        var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                        if (null != n) {
                            var r, a, i = [], o = !0, s = !1;
                            try {
                                for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value),
                                !t || i.length !== t); o = !0)
                                    ;
                            } catch (e) {
                                s = !0,
                                a = e
                            } finally {
                                try {
                                    o || null == n.return || n.return()
                                } finally {
                                    if (s)
                                        throw a
                                }
                            }
                            return i
                        }
                    }(t, n) || function(e, t) {
                        if (e) {
                            if ("string" == typeof e)
                                return Tf(e, t);
                            var n = Object.prototype.toString.call(e).slice(8, -1);
                            return "Object" === n && e.constructor && (n = e.constructor.name),
                            "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Tf(e, t) : void 0
                        }
                    }(t, n) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }())
                      , s = o[0]
                      , c = o[1];
                    return s && c && s !== c
                }
                return r !== Lf
            }(Af)) {
                var t = {
                    from: Lf,
                    to: e
                };
                Eo.onProviderChange(t),
                A(T, L.PROVIDER_CHANGE, t)
            }
            Lf = e
        }
        function Pf() {
            var e, t;
            _f(),
            e = (0,
            s.default)(Af, "representations.0.segmentLength"),
            A(T, L.CHUNK_LENGTH, e),
            t = {
                format: Af.format,
                url: Af.baseUrl || Af.url
            },
            La.dispatch((0,
            pa.Ab)(t)),
            A(T, L.PLAY_OPTIONS, Af)
        }
        function Df(e) {
            Af.hasOwnProperty("representation") ? Af.baseUrl = e : Af.url = e
        }
        function Rf(e) {
            e.status === bf.status.SUCCESS && e.resolved ? (Sf[e.url] = e.resolved,
            Df(e.resolved),
            delete Af.streamNameService,
            Pf()) : A(b, L.CHANGE_PROVIDER, {
                reason: "tcdn resolve error"
            })
        }
        var wf, Nf, Cf, Uf, Mf, Ff, jf, kf = function(e) {
            var t, n, r;
            Of = e.hlsSdcdnHostParameterName,
            t = Af = (0,
            Ai.Z)(e),
            n = If,
            JSON.stringify(t) !== JSON.stringify(n) && (If = (0,
            Ai.Z)(Af),
            Object.prototype.hasOwnProperty.call(Af, "streamNameService") ? Sf[Af.streamNameService] ? (Df(Af, Sf[Af.streamNameService]),
            delete Af.streamNameService,
            Pf()) : (r = Af.url || Af.baseUrl,
            bf.isInProgress() || bf.resolve(r, Rf, Af.streamNameService)) : Pf())
        }, Gf = function() {
            Af = null,
            If = null
        };
        function Bf(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function Vf(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Bf(Object(n), !0).forEach((function(t) {
                    xf(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Bf(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function xf(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function Hf() {
            Nf = (new Date).getTime()
        }
        function Zf() {
            if (void 0 === Mf)
                return Nf = void 0,
                void (Cf = 0);
            if (void 0 !== Nf) {
                var e = (new Date).getTime();
                Cf += e - Nf
            }
            Nf = void 0
        }
        function Yf() {
            Uf = wf ? "bandwidth update" : "quality change",
            Mf = (new Date).getTime(),
            Nf = Nf ? (new Date).getTime() : void 0,
            zf("started", void 0, {
                from_kbps: jf.bitrate,
                from_height: jf.height
            })
        }
        function Kf() {
            var e = (new Date).getTime() - Mf;
            if (void 0 !== Nf) {
                var t = (new Date).getTime();
                Cf += t - Nf,
                Nf = t
            }
            Mf = void 0,
            zf("completed", e, {
                to_kbps: Ff.bitrate,
                to_height: Ff.height
            }),
            Cf = 0
        }
        function Wf() {
            if (void 0 !== Nf) {
                var e = (new Date).getTime();
                Cf += e - Nf
            }
            Mf = void 0,
            zf("cancelled", (new Date).getTime() - Mf),
            Cf = 0
        }
        function Qf() {
            Xf()
        }
        function zf(e, t, n) {
            var r = {
                message: Uf,
                data: Vf(Vf({}, n), {}, {
                    category: "Playback",
                    item: "quality change",
                    action: e
                })
            };
            void 0 !== t && (r.data.time_spent = t,
            void 0 !== Nf && Zf(),
            r.data.buffer_spent = Cf),
            Ne.send(r)
        }
        function Xf() {
            Nf = void 0,
            Cf = void 0,
            Mf = void 0,
            jf = void 0,
            Ff = void 0
        }
        var qf = function() {
            Xf(),
            I(O, L.REPORT_BUFFER_EMPTY, Hf),
            I(O, L.REPORT_BUFFER_FULL, Zf),
            I(T, L.ATLAS_CLEANUP, Qf),
            I(T, L.ATLAS_QUALITY_CHANGE_STARTED, Yf),
            I(T, L.ATLAS_QUALITY_CHANGE_COMPLETED, Kf),
            I(T, L.ATLAS_QUALITY_CHANGE_CANCELLED, Wf)
        }
          , $f = function() {
            Xf()
        }
          , Jf = function(e) {
            wf = e
        }
          , ep = function(e, t) {
            jf = e,
            Ff = t
        }
          , tp = n(29186);
        function np(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function rp(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? np(Object(n), !0).forEach((function(t) {
                    ap(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : np(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function ap(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        var ip, op, sp, cp, up, dp = 10, lp = 3, fp = (0,
        c.w)("atlas/playback/qosHandler"), pp = null, mp = null, gp = !0, vp = !1, Ep = 1, hp = !1, yp = null, bp = !1;
        function Tp() {
            var e = La.getState().playback
              , t = e.selectedAudio;
            return e.audioTracks.find((function(e) {
                return e.id === t
            }
            ))
        }
        function Sp(e) {
            return e.filter((function(e) {
                return e && Object.hasOwnProperty.call(e, "bitrate")
            }
            )).reduce((function(e, t) {
                return e + t.bitrate
            }
            ), 0)
        }
        function Op() {
            bp || (Tp() || mp ? ((0,
            s.default)(pp, "id") !== (0,
            s.default)(mp, "id") && (ep(pp || mp, mp),
            pp = mp),
            function() {
                var e = {};
                mp && (e.width = mp.width,
                e.height = mp.height,
                e.videoCodec = mp.codec);
                var t = Tp();
                t && t.codec && (e.audioCodec = t.codec),
                La.dispatch((0,
                Ka.h3)(e))
            }(),
            function() {
                var e, t, n, r = La.getState(), a = {
                    format: hl(),
                    hashes: El(),
                    chunkId: bl(),
                    audioVersion: Tp(),
                    videoVersion: (0,
                    Ce.Mr)(r) ? null : mp,
                    textVersion: (e = La.getState().playback,
                    t = e.selectedClosedCaption,
                    n = e.closedCaptionTracks.find((function(e) {
                        return e.id === t
                    }
                    )),
                    n ? (yp = n,
                    n) : yp),
                    provider: Do(),
                    contentLength: ue.getDurationInMillisec(),
                    trimmedLength: ue.getTrimmedDurationInMillisec(),
                    isHLS: ue.isHLS(),
                    hlsSdcdnHostParameterName: mp && mp.parameter,
                    mediaId: ue.id(),
                    sourceMedia: yl(),
                    ssl: o().ssl
                }, i = Ef(a);
                if (ue.isHLS())
                    try {
                        var s = new URL(i.url);
                        (0,
                        Ce.Mr)(r) ? s.searchParams.set("audioOnly", !0) : s.searchParams.delete("audioOnly"),
                        i.url = s.toString()
                    } catch (e) {}
                kf(i)
            }()) : fp.warn("No quality selected"))
        }
        function Lp() {
            var e = (0,
            Ce.hz)(La.getState())
              , t = e.width
              , n = e.height;
            tf.setParameters({
                playerWidth: t,
                playerHeight: n
            })
        }
        function Ap(e) {
            var t, n = nl.getVideoVersions();
            if (!(["high", "med", "low"].indexOf(e) >= 0 && n && n.length))
                return parseInt(e, 10);
            switch (e.toLowerCase()) {
            case "high":
                t = n[0].id;
                break;
            case "med":
                t = n[Math.round((n.length - 1) / 2)].id;
                break;
            case "low":
                t = n[n.length - 1].id
            }
            return t
        }
        function Ip() {
            var e = [nf(), af()];
            fp.debug("setRuningFilterFunction"),
            tf.setFilters(e),
            tf.setSelectModule(cf())
        }
        function _p() {
            var e = [of()];
            fp.debug("setForcedIdFilterFunctions"),
            tf.setFilters(e),
            tf.setSelectModule(cf())
        }
        function Pp() {
            ip = clearTimeout(ip),
            op && (Rp(op),
            op = null)
        }
        function Dp(e) {
            if (e) {
                var t, n, r, a = "qos setSelectedVideoVersion id: ".concat(e.id);
                e && (a += " width: ".concat(e.width),
                a += " height: ".concat(e.height)),
                fp.debug(a),
                mp = e,
                t = nl.getAvailableQualities().map((function(e) {
                    var t = function(e) {
                        var t = 20 * Math.round(e.height / 20);
                        return {
                            text: "".concat(t, "p"),
                            suffix: t >= 720 ? " HD" : "",
                            bitrate: function(e) {
                                if (e >= 1e3) {
                                    var t = e / 1e3
                                      , n = Math.round(10 * t) / 10;
                                    return " @ ".concat(n, " Mbps")
                                }
                                return " @ ".concat(e, " Kbps")
                            }(e.bitrate)
                        }
                    }(e)
                      , n = mp && mp.id === e.id && !gp;
                    return rp(rp({}, e), {}, {
                        label: t,
                        active: !0,
                        selected: n
                    })
                }
                )),
                (0 !== t.length || ue.isHLS()) && (t = function(e) {
                    return e.push({
                        id: -1,
                        label: {
                            text: "ui.qualityAuto"
                        },
                        height: 0,
                        active: !0,
                        selected: gp || ue.isHLS()
                    }),
                    e
                }(t),
                U().setQuality(t),
                oa.send("quality", t)),
                Np(),
                n = Tp(),
                r = Sp([mp, n]),
                La.dispatch((0,
                tp.N)({
                    bitrate: r,
                    sourceStreamVersion: mp.sourceStreamVersion
                })),
                vp || Op(),
                ip = setTimeout(Pp, 1e3)
            } else
                fp.debug("setSelectedVideoVersion No selected version or same")
        }
        function Rp(e) {
            e ? ip ? op = e : Dp(e) : fp.debug("setSelectedVideoVersion No selected version")
        }
        function wp(e) {
            Jf(gp = -1 === e)
        }
        function Np() {
            ue.isHLS() || ue.isFLV() || Ae.get("externalvtt") || La.dispatch((0,
            Ka.kY)(nl.getTextVersions()))
        }
        function Cp() {
            bp = !0,
            La.dispatch(function(e) {
                return {
                    type: Ut.setHash,
                    payload: e
                }
            }(El())),
            function() {
                if (!ue.isHLS()) {
                    var e = nl.getAudioVersions();
                    La.dispatch((0,
                    Ka.KS)(e))
                }
            }();
            var e = Tp();
            e || (e = nl.getDefaultAudioVersion()) && La.dispatch((0,
            Ka.Ft)(e.id)),
            bp = !1;
            var t = nl.getVideoVersions();
            t.length > 0 && !e && !ue.isHLS() && La.dispatch((0,
            pa.Sc)(!0));
            var n, r = 0 === t.length && !!e;
            if (ue.isHLS() || La.dispatch((0,
            pa.zp)(r)),
            r)
                return Np(),
                void Op();
            if (0 !== t.length) {
                mp && t.some((function(e) {
                    return e.initUrl === mp.initUrl && e.segmentUrl === mp.segmentUrl
                }
                )) || (pp = null,
                mp = null,
                op = null,
                Pp(),
                sp = void 0,
                Ep = 1);
                var a, i, o = (n = e,
                t.map((function(e, t) {
                    var r, a, i, o, s, c, u, d;
                    return rp({
                        id: t
                    }, (a = n,
                    i = (r = e) && r.description || a && a.description,
                    o = r && r.sourceStreamVersion || a && a.sourceStreamVersion,
                    s = r && r.id,
                    c = a && a.id,
                    u = "number" == typeof s ? s : c,
                    d = {
                        description: i,
                        sourceStreamVersion: o,
                        bitrate: Sp([r, a]),
                        id: u
                    },
                    a && (d.audio = a),
                    r && (d.video = r),
                    d))
                }
                )));
                o.length && (hp || (wp(i = (i = Ap(up)) >= 0 ? i : Ap(cp)),
                i >= 0 ? (tf.setForcedId(i),
                a = [of()]) : a = [rf()],
                fp.debug("setInitialFilterFunctions"),
                tf.setFilters(a),
                hp = !0),
                tf.setStreams(o))
            }
        }
        function Up() {
            Po(),
            Op()
        }
        function Mp(e) {
            tf.setCurrentProviderName(e.to)
        }
        function Fp(e) {
            tf.setParameters({
                chunkLengthInSec: e / 1e3
            })
        }
        function jp(e) {
            var t = parseInt(e, 10);
            tf.setForcedId(t),
            wp(t),
            gp ? Ip() : _p(),
            Pp(),
            Dp(nl.findOneVideoVersionById(t)),
            fp.debug("onQualityChange change quality to: ".concat(t))
        }
        function kp(e, t) {
            var n = !1;
            return e && t ? (e.height > t.height && (n = !0),
            n) : n
        }
        function Gp(e) {
            var t = e.video;
            if (t) {
                var n, r, a, i, o, c = sp && t.id === sp.id;
                !gp || (o = La.getState(),
                (0,
                s.default)(o, "provider.currentProvider.isMulticastProvider", !1)) || ue.isHLS() ? Rp(mp || t) : mp ? (i = Ep = c ? Ep + 1 : 1,
                n = (a = sp = t) && kp(a, mp) && i >= dp,
                r = function(e, t, n) {
                    return e && kp(t, e) && n >= lp
                }(sp, mp, Ep),
                Rp(n || r ? t : mp)) : Rp(t)
            }
        }
        function Bp(e) {
            if (hp || ue.isHLS()) {
                var t = e.video;
                t && Rp(t),
                tf.off(tf.event.QUALITY_SELECTED),
                tf.on(tf.event.QUALITY_SELECTED, Gp),
                Ap(up) >= 0 ? _p() : (tf.setForcedId(void 0),
                gp = !0,
                Ip())
            }
        }
        function Vp() {
            A(T, L.BANDWIDTH_UPDATED)
        }
        function xp(e) {
            La.dispatch((0,
            tp.N)(e))
        }
        function Hp() {
            vp = !0,
            dp = 10,
            lp = 3,
            Ep = 1,
            fp.debug("onAtlasQualityChangeStarted change to quality started: ".concat(mp.id))
        }
        function Zp() {
            vp = !1,
            tf.setQualityPlaying(mp),
            fp.debug("onAtlasQualityChangeCompleted change to quality completed: ".concat(mp.id))
        }
        function Yp() {
            vp = !1
        }
        function Kp(e) {
            tf.addThroughputSample(e)
        }
        function Wp() {
            Qp()
        }
        function Qp() {
            bp = !1,
            pp = null,
            mp = null,
            op = null,
            sp = void 0,
            vp = !1,
            Ep = 1,
            yp = null
        }
        La.subscribe("player.playerSize", (function() {
            Lp()
        }
        )),
        La.subscribe("playback.selectedAudio", (function() {
            Op()
        }
        )),
        La.subscribe("playback.selectedClosedCaption", (function() {
            Op()
        }
        )),
        La.subscribe("playback.videoTrackDisabled", (function() {
            Op()
        }
        ));
        var zp, Xp, qp, $p, Jp = function(e, t) {
            cp = e,
            up = t,
            I(b, L.QUALITY_CHANGE, jp),
            I(T, L.STREAM_VERSION_UPDATE, Cp),
            I(b, L.CHANGE_PROVIDER, Up),
            I(T, L.PROVIDER_CHANGE, Mp),
            I(T, L.CHUNK_LENGTH, Fp),
            I(O, L.REPORT_BANDWIDTH, Kp),
            I(T, L.ATLAS_CLEANUP, Wp),
            I(T, L.ATLAS_QUALITY_CHANGE_STARTED, Hp),
            I(T, L.ATLAS_QUALITY_CHANGE_COMPLETED, Zp),
            I(T, L.ATLAS_QUALITY_CHANGE_CANCELLED, Yp),
            tf.init(),
            tf.on(tf.event.BANDWIDTH_UPDATE, Vp),
            tf.on(tf.event.QUALITY_SELECTED, Bp),
            tf.on(tf.event.STATS, xp),
            qf(),
            Jf(gp),
            Lp()
        }, em = function() {
            tf.reset(),
            $f(),
            Gf(),
            Qp(),
            gp = !0
        }, tm = function() {
            return gp
        }, nm = n(1073), rm = 100, am = 200, im = 300, om = 400, sm = "reloadTime", cm = !1, um = !1, dm = {}, lm = {}, fm = [{
            msg: "unrecognized data format",
            logLevel: rm
        }, {
            msg: "invalid content type",
            logLevel: rm
        }, {
            msg: "no bytes",
            logLevel: im
        }, {
            msg: "unable to get segmentId",
            logLevel: am
        }, {
            msg: "VideoPlayer.stalled",
            logLevel: im
        }], pm = (0,
        c.w)("atlas/logic/errorWatcher/watcherHtmlplayback");
        function mm(e, t, n) {
            var r = (new Date).getTime()
              , a = e.replace(/(?:^\s+)|(?:\s+$)/g, "").replace(/[^\w]+/g, "_").replace(/[_]{2,}/g, "_");
            um || (Object.prototype.hasOwnProperty.call(dm, e) || (dm[e] = 0),
            r - dm[e] < 29e3 || (dm[e] = r,
            n = f({
                category: "Error",
                item: a,
                action: "",
                level: om
            }, n),
            qp && (n.provider = qp),
            Ne.send({
                message: t,
                data: n
            })))
        }
        function gm(e) {
            var t;
            switch (e.status) {
            case bf.status.ERROR:
                t = "server error";
                break;
            case bf.status.TIMEOUT:
                t = "timeout";
                break;
            default:
                t = "unknown error"
            }
            mm("tcdn_error", t, im)
        }
        function vm() {
            var e, t, n = {
                level: om
            };
            "number" == typeof zp && (n.position = Math.round(zp));
            var r = (0,
            Ce.C5)(La.getState()).video;
            n.videoHeight = null !== (e = null == r ? void 0 : r.height) && void 0 !== e ? e : 0,
            n.videoWidth = null !== (t = null == r ? void 0 : r.width) && void 0 !== t ? t : 0,
            mm("heartbeat", "heartbeat", n),
            lm.heartbeat = setTimeout(vm, 3e4)
        }
        function Em() {
            $p = clearTimeout($p)
        }
        function hm(e, t) {
            $p && Em(),
            $p = setTimeout((function() {
                mm(e, t, rm),
                pm.fatal(t)
            }
            ), 5e3)
        }
        function ym(e) {
            (0,
            an.M)(e) ? hm("empty_stream_module", "empty stream module received") : Em()
        }
        function bm() {
            Em();
            var e = "browser does not support the content type";
            mm("unsupported_content", e, rm),
            pm.fatal(e)
        }
        var Tm = function() {
            var e;
            um = !1,
            cm || (e = le.ZP.get(sm),
            cm = !0,
            vm(),
            I(O, L.REPORT_BUFFER_EMPTY, (function() {
                lm.buffer || (lm.buffer = setTimeout((function() {
                    Xp && mm("long buffer empty", "buffer empty more than ".concat(1e4, "ms"), rm)
                }
                ), 1e4))
            }
            )),
            I(O, L.REPORT_BUFFER_FULL, (function() {
                lm.buffer = clearTimeout(lm.buffer)
            }
            )),
            I(T, L.PLAYING, (function(e) {
                (Xp = e) ? zp || (lm.playing = clearTimeout(lm.playing),
                lm.playing = setTimeout((function() {
                    var e = "playback has not begun for ".concat(15e3, "ms");
                    mm("playback has not begun", e, rm),
                    pm.fatal(e)
                }
                ), 15e3)) : (lm.progress = clearTimeout(lm.progress),
                lm.buffer = clearTimeout(lm.buffer),
                lm.playing = clearTimeout(lm.playing))
            }
            )),
            I(T, L.ATLAS_PROGRESS, (function(e) {
                var t = e.position;
                zp !== t && (lm.playing = clearTimeout(lm.playing),
                lm.unrecoveredStalled = clearTimeout(lm.unrecoveredStalled),
                lm.progress = clearTimeout(lm.progress),
                lm.progress = setTimeout((function() {
                    if (Xp) {
                        var e = "progress stalled more than ".concat(7e3, "ms");
                        mm("progress stalled", e, rm),
                        pm.fatal(e)
                    }
                }
                ), 7e3)),
                zp = t
            }
            )),
            I(T, L.ATLAS_ERROR, (function(e) {
                if (e.error !== qt().errors.PLAY_ERROR) {
                    var t = "atlas_".concat(e.error, "_error")
                      , n = ""
                      , r = {
                        level: im
                    };
                    switch (e.error) {
                    case qt().errors.UNSUPPORTED:
                    case qt().errors.INVALID_OPTIONS:
                        r.level = rm;
                        break;
                    case qt().errors.VIDEO_PLAYER:
                        n = e.details.message,
                        r.level = am;
                        break;
                    case qt().errors.UNRECOVERED_STALLED:
                        r.level = am;
                        break;
                    case qt().errors.SEGMENT_LOAD_FAILED:
                        n = e.details.reason || "UNKNOWN",
                        r.http_status = e.details.status,
                        r.level = am;
                        break;
                    case qt().errors.SEGMENT_NOT_FOUND:
                        n = e.details.reason || "UNKNOWN",
                        r.http_status = e.details.status,
                        r.level = im;
                        break;
                    case qt().errors.CAN_NOT_CREATE_URL:
                        n = e.details.reason,
                        r.level = am;
                        break;
                    case qt().errors.NEW_REPRESENTATION:
                        r.level = am
                    }
                    e.error === qt().errors.UNRECOVERED_STALLED ? lm.unrecoveredStalled || (lm.unrecoveredStalled = setTimeout((function() {
                        mm(t, n, r)
                    }
                    ), 5e3)) : mm(t, n, r)
                }
            }
            )),
            I(T, L.ATLAS_LOG, (function(e) {
                fm.forEach((function(t) {
                    var n = t.msg
                      , r = t.logLevel;
                    e.line.indexOf(n) > -1 && mm(n, e.line, {
                        level: r
                    })
                }
                ))
            }
            )),
            I(T, L.PLAY_OPTIONS, (function(e) {
                if (e.baseUrl) {
                    var t = new URL(e.baseUrl);
                    qp = "".concat(t.protocol, "//").concat(t.hostname)
                }
            }
            )),
            window.addEventListener("beforeunload", (function() {
                le.ZP.set(sm, {
                    time: (new Date).getTime(),
                    mid: ue.getMid()
                })
            }
            )),
            I(T, L.ATLAS_CLEANUP, (function(e) {
                e.indexOf("Unrecoverable atlas error") > -1 ? mm("atlas_reset", e, {
                    level: rm
                }) : e.indexOf("segment not found error") > -1 ? mm("atlas_reset", e, {
                    level: im
                }) : mm("atlas_reset", e, {
                    level: om
                })
            }
            )),
            I(T, L.URL_RESOLVE_FAILURE, gm),
            I(b, L.CHANGE_PROVIDER, (function(e) {
                mm("provider change", (0,
                s.default)(e, "reason", "unknown"), {
                    level: im
                })
            }
            )),
            I(T, L.PROVIDER_CHANGE, (function(e) {
                var t = new URL(e.to);
                qp = "".concat(t.protocol, "//").concat(t.hostname)
            }
            )),
            mm("load", "Error logger loaded", {
                level: om
            }),
            e && (new Date).getTime() - e.time < 3e4 && e.mid === ue.getMid() && mm("reload", "reload", {
                level: im
            }),
            I(S, L.STREAM_UPDATE, ym),
            I(T, L.UNSUPPORTED, bm),
            hm("zero_stream_module", "zero stream module received"))
        }
          , Sm = function() {
            um = !0,
            dm = {},
            Object.getOwnPropertyNames(lm).forEach((function(e) {
                clearTimeout(lm[e])
            }
            )),
            lm = {}
        }
          , Om = function() {
            Tm()
        }
          , Lm = function() {
            Sm()
        }
          , Am = function() {
            return La.dispatch({
                type: rt
            })
        }
          , Im = function(e) {
            return La.dispatch({
                type: at,
                payload: {
                    slides: e
                }
            })
        }
          , _m = function(e) {
            return La.dispatch({
                type: it,
                payload: {
                    slide: e
                }
            })
        };
        function Pm(e) {
            return Pm = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            }
            : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }
            ,
            Pm(e)
        }
        function Dm() {
            Dm = function() {
                return e
            }
            ;
            var e = {}
              , t = Object.prototype
              , n = t.hasOwnProperty
              , r = "function" == typeof Symbol ? Symbol : {}
              , a = r.iterator || "@@iterator"
              , i = r.asyncIterator || "@@asyncIterator"
              , o = r.toStringTag || "@@toStringTag";
            function s(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                e[t]
            }
            try {
                s({}, "")
            } catch (e) {
                s = function(e, t, n) {
                    return e[t] = n
                }
            }
            function c(e, t, n, r) {
                var a = t && t.prototype instanceof l ? t : l
                  , i = Object.create(a.prototype)
                  , o = new O(r || []);
                return i._invoke = function(e, t, n) {
                    var r = "suspendedStart";
                    return function(a, i) {
                        if ("executing" === r)
                            throw new Error("Generator is already running");
                        if ("completed" === r) {
                            if ("throw" === a)
                                throw i;
                            return {
                                value: void 0,
                                done: !0
                            }
                        }
                        for (n.method = a,
                        n.arg = i; ; ) {
                            var o = n.delegate;
                            if (o) {
                                var s = b(o, n);
                                if (s) {
                                    if (s === d)
                                        continue;
                                    return s
                                }
                            }
                            if ("next" === n.method)
                                n.sent = n._sent = n.arg;
                            else if ("throw" === n.method) {
                                if ("suspendedStart" === r)
                                    throw r = "completed",
                                    n.arg;
                                n.dispatchException(n.arg)
                            } else
                                "return" === n.method && n.abrupt("return", n.arg);
                            r = "executing";
                            var c = u(e, t, n);
                            if ("normal" === c.type) {
                                if (r = n.done ? "completed" : "suspendedYield",
                                c.arg === d)
                                    continue;
                                return {
                                    value: c.arg,
                                    done: n.done
                                }
                            }
                            "throw" === c.type && (r = "completed",
                            n.method = "throw",
                            n.arg = c.arg)
                        }
                    }
                }(e, n, o),
                i
            }
            function u(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = c;
            var d = {};
            function l() {}
            function f() {}
            function p() {}
            var m = {};
            s(m, a, (function() {
                return this
            }
            ));
            var g = Object.getPrototypeOf
              , v = g && g(g(L([])));
            v && v !== t && n.call(v, a) && (m = v);
            var E = p.prototype = l.prototype = Object.create(m);
            function h(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    s(e, t, (function(e) {
                        return this._invoke(t, e)
                    }
                    ))
                }
                ))
            }
            function y(e, t) {
                function r(a, i, o, s) {
                    var c = u(e[a], e, i);
                    if ("throw" !== c.type) {
                        var d = c.arg
                          , l = d.value;
                        return l && "object" == Pm(l) && n.call(l, "__await") ? t.resolve(l.__await).then((function(e) {
                            r("next", e, o, s)
                        }
                        ), (function(e) {
                            r("throw", e, o, s)
                        }
                        )) : t.resolve(l).then((function(e) {
                            d.value = e,
                            o(d)
                        }
                        ), (function(e) {
                            return r("throw", e, o, s)
                        }
                        ))
                    }
                    s(c.arg)
                }
                var a;
                this._invoke = function(e, n) {
                    function i() {
                        return new t((function(t, a) {
                            r(e, n, t, a)
                        }
                        ))
                    }
                    return a = a ? a.then(i, i) : i()
                }
            }
            function b(e, t) {
                var n = e.iterator[t.method];
                if (void 0 === n) {
                    if (t.delegate = null,
                    "throw" === t.method) {
                        if (e.iterator.return && (t.method = "return",
                        t.arg = void 0,
                        b(e, t),
                        "throw" === t.method))
                            return d;
                        t.method = "throw",
                        t.arg = new TypeError("The iterator does not provide a 'throw' method")
                    }
                    return d
                }
                var r = u(n, e.iterator, t.arg);
                if ("throw" === r.type)
                    return t.method = "throw",
                    t.arg = r.arg,
                    t.delegate = null,
                    d;
                var a = r.arg;
                return a ? a.done ? (t[e.resultName] = a.value,
                t.next = e.nextLoc,
                "return" !== t.method && (t.method = "next",
                t.arg = void 0),
                t.delegate = null,
                d) : a : (t.method = "throw",
                t.arg = new TypeError("iterator result is not an object"),
                t.delegate = null,
                d)
            }
            function T(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]),
                2 in e && (t.finallyLoc = e[2],
                t.afterLoc = e[3]),
                this.tryEntries.push(t)
            }
            function S(e) {
                var t = e.completion || {};
                t.type = "normal",
                delete t.arg,
                e.completion = t
            }
            function O(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                e.forEach(T, this),
                this.reset(!0)
            }
            function L(e) {
                if (e) {
                    var t = e[a];
                    if (t)
                        return t.call(e);
                    if ("function" == typeof e.next)
                        return e;
                    if (!isNaN(e.length)) {
                        var r = -1
                          , i = function t() {
                            for (; ++r < e.length; )
                                if (n.call(e, r))
                                    return t.value = e[r],
                                    t.done = !1,
                                    t;
                            return t.value = void 0,
                            t.done = !0,
                            t
                        };
                        return i.next = i
                    }
                }
                return {
                    next: A
                }
            }
            function A() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return f.prototype = p,
            s(E, "constructor", p),
            s(p, "constructor", f),
            f.displayName = s(p, o, "GeneratorFunction"),
            e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === f || "GeneratorFunction" === (t.displayName || t.name))
            }
            ,
            e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, p) : (e.__proto__ = p,
                s(e, o, "GeneratorFunction")),
                e.prototype = Object.create(E),
                e
            }
            ,
            e.awrap = function(e) {
                return {
                    __await: e
                }
            }
            ,
            h(y.prototype),
            s(y.prototype, i, (function() {
                return this
            }
            )),
            e.AsyncIterator = y,
            e.async = function(t, n, r, a, i) {
                void 0 === i && (i = Promise);
                var o = new y(c(t, n, r, a),i);
                return e.isGeneratorFunction(n) ? o : o.next().then((function(e) {
                    return e.done ? e.value : o.next()
                }
                ))
            }
            ,
            h(E),
            s(E, o, "Generator"),
            s(E, a, (function() {
                return this
            }
            )),
            s(E, "toString", (function() {
                return "[object Generator]"
            }
            )),
            e.keys = function(e) {
                var t = [];
                for (var n in e)
                    t.push(n);
                return t.reverse(),
                function n() {
                    for (; t.length; ) {
                        var r = t.pop();
                        if (r in e)
                            return n.value = r,
                            n.done = !1,
                            n
                    }
                    return n.done = !0,
                    n
                }
            }
            ,
            e.values = L,
            O.prototype = {
                constructor: O,
                reset: function(e) {
                    if (this.prev = 0,
                    this.next = 0,
                    this.sent = this._sent = void 0,
                    this.done = !1,
                    this.delegate = null,
                    this.method = "next",
                    this.arg = void 0,
                    this.tryEntries.forEach(S),
                    !e)
                        for (var t in this)
                            "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type)
                        throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done)
                        throw e;
                    var t = this;
                    function r(n, r) {
                        return o.type = "throw",
                        o.arg = e,
                        t.next = n,
                        r && (t.method = "next",
                        t.arg = void 0),
                        !!r
                    }
                    for (var a = this.tryEntries.length - 1; a >= 0; --a) {
                        var i = this.tryEntries[a]
                          , o = i.completion;
                        if ("root" === i.tryLoc)
                            return r("end");
                        if (i.tryLoc <= this.prev) {
                            var s = n.call(i, "catchLoc")
                              , c = n.call(i, "finallyLoc");
                            if (s && c) {
                                if (this.prev < i.catchLoc)
                                    return r(i.catchLoc, !0);
                                if (this.prev < i.finallyLoc)
                                    return r(i.finallyLoc)
                            } else if (s) {
                                if (this.prev < i.catchLoc)
                                    return r(i.catchLoc, !0)
                            } else {
                                if (!c)
                                    throw new Error("try statement without catch or finally");
                                if (this.prev < i.finallyLoc)
                                    return r(i.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var a = this.tryEntries[r];
                        if (a.tryLoc <= this.prev && n.call(a, "finallyLoc") && this.prev < a.finallyLoc) {
                            var i = a;
                            break
                        }
                    }
                    i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                    var o = i ? i.completion : {};
                    return o.type = e,
                    o.arg = t,
                    i ? (this.method = "next",
                    this.next = i.finallyLoc,
                    d) : this.complete(o)
                },
                complete: function(e, t) {
                    if ("throw" === e.type)
                        throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg,
                    this.method = "return",
                    this.next = "end") : "normal" === e.type && t && (this.next = t),
                    d
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e)
                            return this.complete(n.completion, n.afterLoc),
                            S(n),
                            d
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var a = r.arg;
                                S(n)
                            }
                            return a
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: L(e),
                        resultName: t,
                        nextLoc: n
                    },
                    "next" === this.method && (this.arg = void 0),
                    d
                }
            },
            e
        }
        function Rm(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function wm(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Rm(Object(n), !0).forEach((function(t) {
                    Nm(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Rm(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function Nm(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function Cm(e, t, n, r, a, i, o) {
            try {
                var s = e[i](o)
                  , c = s.value
            } catch (e) {
                return void n(e)
            }
            s.done ? t(c) : Promise.resolve(c).then(r, a)
        }
        function Um(e) {
            return function() {
                var t = this
                  , n = arguments;
                return new Promise((function(r, a) {
                    var i = e.apply(t, n);
                    function o(e) {
                        Cm(i, r, a, o, s, "next", e)
                    }
                    function s(e) {
                        Cm(i, r, a, o, s, "throw", e)
                    }
                    o(void 0)
                }
                ))
            }
        }
        var Mm, Fm = (0,
        c.w)("atlas/logic/slideDeck/slideDeckHandler"), jm = !o().ie || o().ie[0] && o().ie[0] > 9, km = (Mm = [],
        function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []
              , t = e.map((function(e) {
                return (0,
                s.default)(e, "url", "")
            }
            ))
              , n = Mm.filter((function(e) {
                return !t.includes(e)
            }
            ));
            n.forEach(URL.revokeObjectURL),
            Mm = t
        }
        );
        function Gm(e) {
            var t = new Blob([e],{
                type: "image/jpeg"
            });
            return URL.createObjectURL(t)
        }
        var Bm = function() {
            if (!jm)
                return function() {
                    var e = new Error("Browser not supported");
                    return Promise.reject(e)
                }
                ;
            var e = null
              , t = null;
            function r() {
                return a.apply(this, arguments)
            }
            function a() {
                return (a = Um(Dm().mark((function r() {
                    var a, i;
                    return Dm().wrap((function(r) {
                        for (; ; )
                            switch (r.prev = r.next) {
                            case 0:
                                return e = new Map,
                                r.next = 3,
                                Promise.all([n.e(142), n.e(467)]).then(n.bind(n, 57564));
                            case 3:
                                a = r.sent,
                                i = a.default,
                                (t = new i).addEventListener("message", (function(t) {
                                    var n = t.data
                                      , r = n.url
                                      , a = n.error
                                      , i = n.buffer
                                      , o = e.get(r);
                                    o && (e.delete(r),
                                    a ? o(new Error(a), null) : o(null, i))
                                }
                                )),
                                t.addEventListener("error", (function(e) {
                                    e.preventDefault(),
                                    Fm.error(e.message)
                                }
                                ));
                            case 8:
                            case "end":
                                return r.stop()
                            }
                    }
                    ), r)
                }
                )))).apply(this, arguments)
            }
            return function() {
                var n = Um(Dm().mark((function n(a) {
                    return Dm().wrap((function(n) {
                        for (; ; )
                            switch (n.prev = n.next) {
                            case 0:
                                if (null !== t) {
                                    n.next = 3;
                                    break
                                }
                                return n.next = 3,
                                r();
                            case 3:
                                return n.abrupt("return", new Promise((function(n, r) {
                                    var i = a.url
                                      , o = a.secret;
                                    e.set(i, (function(e, t) {
                                        if (e)
                                            r(e);
                                        else {
                                            var i = wm(wm({}, a), {}, {
                                                url: Gm(t)
                                            });
                                            n(i)
                                        }
                                    }
                                    )),
                                    t.postMessage({
                                        url: i,
                                        secret: o
                                    })
                                }
                                )));
                            case 4:
                            case "end":
                                return n.stop()
                            }
                    }
                    ), n)
                }
                )));
                return function(e) {
                    return n.apply(this, arguments)
                }
            }()
        }();
        function Vm(e) {
            return wm({
                start: -1 / 0,
                end: 1 / 0
            }, e)
        }
        La.subscribe("slideDeck.slides", km);
        var xm = function(e) {
            if (jm && (!Array.isArray(e) || e.length > 0))
                if (e) {
                    var t = function(e) {
                        if (Array.isArray(e))
                            return e.map(Vm);
                        if (e.show) {
                            var t = e.show;
                            return [Vm({
                                url: t.url,
                                secret: t.secret
                            })]
                        }
                        return []
                    }(e);
                    !function(e) {
                        if (0 !== e.length) {
                            var t = [];
                            e.forEach((function(e) {
                                Promise.resolve().then((function() {
                                    return function(e) {
                                        return !!(0,
                                        s.default)(e, "url")
                                    }(e) ? Bm(e) : e
                                }
                                )).then((function(e) {
                                    t.push(e),
                                    Im(t)
                                }
                                )).catch((function(e) {
                                    Fm.error('Decoding error: "'.concat(e.message, '"'))
                                }
                                ))
                            }
                            ))
                        } else
                            Im([])
                    }(t)
                } else
                    Am()
        }
          , Hm = function(e) {
            var t = 1e3 * e
              , n = La.getState().slideDeck
              , r = n.slides.find((function(e) {
                var n = e.start
                  , r = e.end;
                return n <= t && t <= r
            }
            ));
            (0,
            s.default)(r, "url") !== (0,
            s.default)(n.currentSlide, "url") && (Fm.info("slide update", r),
            _m(r))
        }
          , Zm = function() {
            Am()
        }
          , Ym = function(e) {
            return La.dispatch({
                type: Ze,
                payload: {
                    visibility: e
                }
            })
        }
          , Km = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
            return La.dispatch({
                type: Ke,
                payload: {
                    searchResult: e
                }
            })
        }
          , Wm = function(e) {
            var t = !1;
            return "boolean" == typeof e ? t = e : e.token && (t = !0),
            La.dispatch({
                type: Ye,
                payload: {
                    module: e,
                    visibility: t
                }
            })
        }
          , Qm = n(56791)
          , zm = n(4917);
        function Xm(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function qm(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Xm(Object(n), !0).forEach((function(t) {
                    $m(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Xm(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function $m(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function Jm(e, t) {
            var n = "streamFormats.mp4/segmented.chunkId";
            return void 0 === (0,
            s.default)(e, n) ? e : (0,
            zm.default)(e, n, t)
        }
        function eg(e) {
            return eg = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            }
            : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }
            ,
            eg(e)
        }
        function tg() {
            tg = function() {
                return e
            }
            ;
            var e = {}
              , t = Object.prototype
              , n = t.hasOwnProperty
              , r = "function" == typeof Symbol ? Symbol : {}
              , a = r.iterator || "@@iterator"
              , i = r.asyncIterator || "@@asyncIterator"
              , o = r.toStringTag || "@@toStringTag";
            function s(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                e[t]
            }
            try {
                s({}, "")
            } catch (e) {
                s = function(e, t, n) {
                    return e[t] = n
                }
            }
            function c(e, t, n, r) {
                var a = t && t.prototype instanceof l ? t : l
                  , i = Object.create(a.prototype)
                  , o = new O(r || []);
                return i._invoke = function(e, t, n) {
                    var r = "suspendedStart";
                    return function(a, i) {
                        if ("executing" === r)
                            throw new Error("Generator is already running");
                        if ("completed" === r) {
                            if ("throw" === a)
                                throw i;
                            return {
                                value: void 0,
                                done: !0
                            }
                        }
                        for (n.method = a,
                        n.arg = i; ; ) {
                            var o = n.delegate;
                            if (o) {
                                var s = b(o, n);
                                if (s) {
                                    if (s === d)
                                        continue;
                                    return s
                                }
                            }
                            if ("next" === n.method)
                                n.sent = n._sent = n.arg;
                            else if ("throw" === n.method) {
                                if ("suspendedStart" === r)
                                    throw r = "completed",
                                    n.arg;
                                n.dispatchException(n.arg)
                            } else
                                "return" === n.method && n.abrupt("return", n.arg);
                            r = "executing";
                            var c = u(e, t, n);
                            if ("normal" === c.type) {
                                if (r = n.done ? "completed" : "suspendedYield",
                                c.arg === d)
                                    continue;
                                return {
                                    value: c.arg,
                                    done: n.done
                                }
                            }
                            "throw" === c.type && (r = "completed",
                            n.method = "throw",
                            n.arg = c.arg)
                        }
                    }
                }(e, n, o),
                i
            }
            function u(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = c;
            var d = {};
            function l() {}
            function f() {}
            function p() {}
            var m = {};
            s(m, a, (function() {
                return this
            }
            ));
            var g = Object.getPrototypeOf
              , v = g && g(g(L([])));
            v && v !== t && n.call(v, a) && (m = v);
            var E = p.prototype = l.prototype = Object.create(m);
            function h(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    s(e, t, (function(e) {
                        return this._invoke(t, e)
                    }
                    ))
                }
                ))
            }
            function y(e, t) {
                function r(a, i, o, s) {
                    var c = u(e[a], e, i);
                    if ("throw" !== c.type) {
                        var d = c.arg
                          , l = d.value;
                        return l && "object" == eg(l) && n.call(l, "__await") ? t.resolve(l.__await).then((function(e) {
                            r("next", e, o, s)
                        }
                        ), (function(e) {
                            r("throw", e, o, s)
                        }
                        )) : t.resolve(l).then((function(e) {
                            d.value = e,
                            o(d)
                        }
                        ), (function(e) {
                            return r("throw", e, o, s)
                        }
                        ))
                    }
                    s(c.arg)
                }
                var a;
                this._invoke = function(e, n) {
                    function i() {
                        return new t((function(t, a) {
                            r(e, n, t, a)
                        }
                        ))
                    }
                    return a = a ? a.then(i, i) : i()
                }
            }
            function b(e, t) {
                var n = e.iterator[t.method];
                if (void 0 === n) {
                    if (t.delegate = null,
                    "throw" === t.method) {
                        if (e.iterator.return && (t.method = "return",
                        t.arg = void 0,
                        b(e, t),
                        "throw" === t.method))
                            return d;
                        t.method = "throw",
                        t.arg = new TypeError("The iterator does not provide a 'throw' method")
                    }
                    return d
                }
                var r = u(n, e.iterator, t.arg);
                if ("throw" === r.type)
                    return t.method = "throw",
                    t.arg = r.arg,
                    t.delegate = null,
                    d;
                var a = r.arg;
                return a ? a.done ? (t[e.resultName] = a.value,
                t.next = e.nextLoc,
                "return" !== t.method && (t.method = "next",
                t.arg = void 0),
                t.delegate = null,
                d) : a : (t.method = "throw",
                t.arg = new TypeError("iterator result is not an object"),
                t.delegate = null,
                d)
            }
            function T(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]),
                2 in e && (t.finallyLoc = e[2],
                t.afterLoc = e[3]),
                this.tryEntries.push(t)
            }
            function S(e) {
                var t = e.completion || {};
                t.type = "normal",
                delete t.arg,
                e.completion = t
            }
            function O(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                e.forEach(T, this),
                this.reset(!0)
            }
            function L(e) {
                if (e) {
                    var t = e[a];
                    if (t)
                        return t.call(e);
                    if ("function" == typeof e.next)
                        return e;
                    if (!isNaN(e.length)) {
                        var r = -1
                          , i = function t() {
                            for (; ++r < e.length; )
                                if (n.call(e, r))
                                    return t.value = e[r],
                                    t.done = !1,
                                    t;
                            return t.value = void 0,
                            t.done = !0,
                            t
                        };
                        return i.next = i
                    }
                }
                return {
                    next: A
                }
            }
            function A() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return f.prototype = p,
            s(E, "constructor", p),
            s(p, "constructor", f),
            f.displayName = s(p, o, "GeneratorFunction"),
            e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === f || "GeneratorFunction" === (t.displayName || t.name))
            }
            ,
            e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, p) : (e.__proto__ = p,
                s(e, o, "GeneratorFunction")),
                e.prototype = Object.create(E),
                e
            }
            ,
            e.awrap = function(e) {
                return {
                    __await: e
                }
            }
            ,
            h(y.prototype),
            s(y.prototype, i, (function() {
                return this
            }
            )),
            e.AsyncIterator = y,
            e.async = function(t, n, r, a, i) {
                void 0 === i && (i = Promise);
                var o = new y(c(t, n, r, a),i);
                return e.isGeneratorFunction(n) ? o : o.next().then((function(e) {
                    return e.done ? e.value : o.next()
                }
                ))
            }
            ,
            h(E),
            s(E, o, "Generator"),
            s(E, a, (function() {
                return this
            }
            )),
            s(E, "toString", (function() {
                return "[object Generator]"
            }
            )),
            e.keys = function(e) {
                var t = [];
                for (var n in e)
                    t.push(n);
                return t.reverse(),
                function n() {
                    for (; t.length; ) {
                        var r = t.pop();
                        if (r in e)
                            return n.value = r,
                            n.done = !1,
                            n
                    }
                    return n.done = !0,
                    n
                }
            }
            ,
            e.values = L,
            O.prototype = {
                constructor: O,
                reset: function(e) {
                    if (this.prev = 0,
                    this.next = 0,
                    this.sent = this._sent = void 0,
                    this.done = !1,
                    this.delegate = null,
                    this.method = "next",
                    this.arg = void 0,
                    this.tryEntries.forEach(S),
                    !e)
                        for (var t in this)
                            "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type)
                        throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done)
                        throw e;
                    var t = this;
                    function r(n, r) {
                        return o.type = "throw",
                        o.arg = e,
                        t.next = n,
                        r && (t.method = "next",
                        t.arg = void 0),
                        !!r
                    }
                    for (var a = this.tryEntries.length - 1; a >= 0; --a) {
                        var i = this.tryEntries[a]
                          , o = i.completion;
                        if ("root" === i.tryLoc)
                            return r("end");
                        if (i.tryLoc <= this.prev) {
                            var s = n.call(i, "catchLoc")
                              , c = n.call(i, "finallyLoc");
                            if (s && c) {
                                if (this.prev < i.catchLoc)
                                    return r(i.catchLoc, !0);
                                if (this.prev < i.finallyLoc)
                                    return r(i.finallyLoc)
                            } else if (s) {
                                if (this.prev < i.catchLoc)
                                    return r(i.catchLoc, !0)
                            } else {
                                if (!c)
                                    throw new Error("try statement without catch or finally");
                                if (this.prev < i.finallyLoc)
                                    return r(i.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var a = this.tryEntries[r];
                        if (a.tryLoc <= this.prev && n.call(a, "finallyLoc") && this.prev < a.finallyLoc) {
                            var i = a;
                            break
                        }
                    }
                    i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                    var o = i ? i.completion : {};
                    return o.type = e,
                    o.arg = t,
                    i ? (this.method = "next",
                    this.next = i.finallyLoc,
                    d) : this.complete(o)
                },
                complete: function(e, t) {
                    if ("throw" === e.type)
                        throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg,
                    this.method = "return",
                    this.next = "end") : "normal" === e.type && t && (this.next = t),
                    d
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e)
                            return this.complete(n.completion, n.afterLoc),
                            S(n),
                            d
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var a = r.arg;
                                S(n)
                            }
                            return a
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: L(e),
                        resultName: t,
                        nextLoc: n
                    },
                    "next" === this.method && (this.arg = void 0),
                    d
                }
            },
            e
        }
        function ng(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function rg(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? ng(Object(n), !0).forEach((function(t) {
                    ag(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ng(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        function ag(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function ig(e, t, n, r, a, i, o) {
            try {
                var s = e[i](o)
                  , c = s.value
            } catch (e) {
                return void n(e)
            }
            s.done ? t(c) : Promise.resolve(c).then(r, a)
        }
        function og(e) {
            return function() {
                var t = this
                  , n = arguments;
                return new Promise((function(r, a) {
                    var i = e.apply(t, n);
                    function o(e) {
                        ig(i, r, a, o, s, "next", e)
                    }
                    function s(e) {
                        ig(i, r, a, o, s, "throw", e)
                    }
                    o(void 0)
                }
                ))
            }
        }
        var sg, cg = null, ug = "Please stand by while we're loading your Multicast stream.", dg = (0,
        c.w)("multicast/multicast"), lg = {}, fg = !1;
        function pg() {
            return fg
        }
        function mg() {
            var e = La.getState();
            return (0,
            s.default)(e, "provider.currentProvider.isMulticastProvider", !1)
        }
        function gg() {
            return !sg || Date.now() - sg > 6e4
        }
        function vg(e, t, n) {
            return function(e, t, n) {
                var r = function(e, t) {
                    return (e.data || []).map((function(t) {
                        return qm({
                            name: e.name
                        }, t)
                    }
                    )).map((function(e) {
                        return e.sites.map((function(t) {
                            return qm({
                                name: e.name,
                                location: e.location
                            }, t)
                        }
                        ))
                    }
                    )).reduce((function(e, t) {
                        return e.concat(t)
                    }
                    ), []).map((function(e) {
                        var n, r, a = (n = e.host,
                        r = o().ssl ? 12350 : 12345,
                        "".concat(n, ":").concat(r));
                        return {
                            location: "".concat(e.name, "/").concat(e.location),
                            name: e.host,
                            url: "".concat(t, "://").concat(a).concat(e.path)
                        }
                    }
                    ))
                }(e, t)
                  , a = n.providers || [];
                return a = r.concat(a),
                qm(qm({}, n), {}, {
                    providers: a
                })
            }(n.providerGroup, n.protocol, t)
        }
        function Eg() {
            return (Eg = og(tg().mark((function e(t, r) {
                var a, i;
                return tg().wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            if (dg.debug("Warm up the RAMP client", {
                                mid: t,
                                lastWarmUp: sg,
                                testURLs: r
                            }),
                            (a = !sg) && (i = setTimeout((function() {
                                U().showPermanentMessage(rr.Oh.multicast, ug)
                            }
                            ), 500)),
                            fg = !0,
                            cg) {
                                e.next = 8;
                                break
                            }
                            return e.next = 7,
                            n.e(772).then(n.bind(n, 60584));
                        case 7:
                            cg = e.sent;
                        case 8:
                            return e.abrupt("return", cg.warmUp(t, r, {
                                timeoutInMs: 3e3,
                                pingDelayInMs: 200
                            }).finally((function() {
                                fg = !1,
                                sg = Date.now(),
                                a && (clearTimeout(i),
                                U().hideMessage(rr.Oh.multicast))
                            }
                            )));
                        case 9:
                        case "end":
                            return e.stop()
                        }
                }
                ), e)
            }
            )))).apply(this, arguments)
        }
        function hg(e, t, n) {
            if (!t.stream)
                return n(t);
            dg.debug("Process stream module after sdcdn", {
                mid: e,
                isMulticastActive: mg(),
                canRetry: gg(),
                isWarmUpInProgress: pg()
            });
            var r = t.stream
              , a = lg[e];
            if (!a)
                return n(rg(rg({}, t), {}, {
                    stream: r
                }));
            var i = vg(0, t.stream, a);
            if (mg())
                return n(rg(rg({}, t), {}, {
                    stream: i
                }));
            if (pg())
                return delete t.stream,
                n(t);
            if (!gg())
                return n(rg(rg({}, t), {}, {
                    stream: r
                }));
            var o = function(e, t) {
                var n = (0,
                s.default)(e, "providers.0.url");
                if (!n)
                    return [];
                var r = (0,
                s.default)(e, "streamFormats.mp4/segmented");
                if (!r)
                    return [];
                var a = (0,
                s.default)(r, "contentAccess.accessList.0.data.path")
                  , i = (0,
                s.default)(r, "streams", []).map((function(e) {
                    var t = e.initUrl
                      , n = e.segmentUrl;
                    return t || n
                }
                )).find((function(e) {
                    return /\.m4[av]h?$/.test(e)
                }
                ));
                if (!a || !i)
                    return [];
                var o = "".concat(n).concat(a).concat(i)
                  , c = r.hashes
                  , u = r.chunkId;
                return c && "number" == typeof u ? (0,
                Qm.default)(u, u + t).map((function(e) {
                    var t = function(e, t) {
                        return e[10 * Math.floor(t / 10)]
                    }(c, e);
                    return t ? {
                        urlPattern: o,
                        hash: t,
                        chunkId: e
                    } : null
                }
                )).filter((function(e) {
                    return !!e
                }
                )) : []
            }(i, 5);
            if (0 === o.length)
                return n(Object.assign(t, {
                    stream: r
                }));
            (function(e, t) {
                return Eg.apply(this, arguments)
            }
            )(e, o).then((function(r) {
                dg.debug("Successful warm up", {
                    mid: e,
                    reachableURL: r
                }),
                setTimeout((function() {
                    var e = a.providerGroup.name;
                    Do(e)
                }
                ), 200);
                var o = r.chunkId;
                return n(rg(rg({}, t), {}, {
                    stream: Jm(i, o)
                }))
            }
            )).catch((function(a) {
                return dg.debug("Unsuccessful warm up", {
                    mid: e,
                    error: a ? a.message : null
                }),
                n(rg(rg({}, t), {}, {
                    stream: r
                }))
            }
            ))
        }
        var yg, bg, Tg, Sg, Og, Lg, Ag, Ig = (0,
        c.w)("atlas/playback/hlsWatcher");
        function _g(e) {
            var t = e.position;
            bg = t,
            Ng()
        }
        function Pg(e) {
            Sg = e
        }
        function Dg(e) {
            Og = e,
            clearInterval(Lg),
            Ng(),
            yg && Og && (Lg = setInterval(Rg, 1e3))
        }
        function Rg() {
            Sg && Sg.url && Sg.format === w && (Tg && Tg === bg && Og ? (Ig.debug("hls playback stalled"),
            Ag || (Ag = setTimeout(wg, 3e3))) : Ng(),
            Tg = bg)
        }
        function wg() {
            Sg.url && Eo.isEcdnProvider(Sg.url) ? (Eo.onProviderFailure(Sg),
            Ng()) : Ig.debug("non ecdn provider failure.")
        }
        function Ng() {
            Ag = clearTimeout(Ag)
        }
        var Cg = function() {
            yg || (Ig.debug("init"),
            yg = !0,
            I(T, L.ATLAS_PROGRESS, _g),
            I(T, L.PLAYING, Dg),
            I(T, L.PLAY_OPTIONS, Pg))
        };
        function Ug(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++)
                r[n] = e[n];
            return r
        }
        var Mg = (0,
        c.w)("atlas/logic/ums/connectionParams");
        function Fg() {
            return ue.isOffairVid() && Object.values(Ae.get("uumfOffairVods")).includes(ue.offairVid())
        }
        function jg() {
            if (qt().capabilities.includes(qt().formats.FLV_SEGMENTED) || qt().capabilities.includes(qt().formats.MP4_SEGMENTED) && (ue.isLiveContent() || ue.isVid() || Fg()))
                return {
                    appId: 3,
                    appVersion: 2
                };
            if (qt().capabilities.includes(qt().formats.HLS))
                return Cg(),
                {
                    appId: 11,
                    appVersion: 3
                };
            if (qt().capabilities.includes(qt().formats.MP4_MOVIE))
                return {
                    appId: 3,
                    appVersion: 2
                };
            var e = "Can not play media";
            throw Mg.info(e, {
                atlasCapabilities: qt().capabilities,
                isVid: ue.isVid(),
                isOffairVid: ue.isOffairVid(),
                isOffairVod: Fg()
            }),
            new Error(e)
        }
        function kg(e, t) {
            if (e) {
                if ("string" == typeof e)
                    return Gg(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name),
                "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Gg(e, t) : void 0
            }
        }
        function Gg(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++)
                r[n] = e[n];
            return r
        }
        function Bg(e) {
            if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"])
                return Array.from(e)
        }
        var Vg = (0,
        c.w)("atlas/logic/ums/umsHandler")
          , xg = [];
        function Hg(e) {
            var t;
            Pa.reportUmsConnectionFinished(e),
            La.dispatch((t = performance.now(),
            {
                type: Ar,
                payload: t
            })),
            A(O, L.UMS_CONNECTED, e)
        }
        function Zg(e) {
            var t = {
                code: (0,
                s.default)(e, "closeEvent.code", -1),
                closeReason: (0,
                s.default)(e, "closeEvent.reason", -1)
            };
            Ne.send({
                message: "UMS connection lost",
                data: {
                    category: "Playback",
                    item: "UMS connection",
                    action: "lost",
                    reason: t
                }
            })
        }
        function Yg(e, t) {
            var n, r, a, i = t[0] || t;
            n = e,
            a = function(t) {
                Eo.onStat = Kg,
                Eo.onComplete = Wg,
                Eo.update(e, t)
            }
            ,
            (r = i).cdnConfig ? (r.cdnConfig = function(e, t) {
                var n = function(e) {
                    var t = function(e) {
                        return (e.data || []).findIndex((function(e) {
                            return "multicast" === e.name
                        }
                        ))
                    }(e);
                    if (-1 === t)
                        return {
                            multicastProviderGroup: null,
                            restOfTheCdnConfig: e
                        };
                    var n = e.data
                      , r = n[t];
                    return n.splice(t, 1),
                    {
                        multicastProviderGroup: r,
                        restOfTheCdnConfig: qm(qm({}, e), {}, {
                            data: n
                        })
                    }
                }(t)
                  , r = n.multicastProviderGroup
                  , a = n.restOfTheCdnConfig;
                if (!r)
                    return t;
                var i = -1 !== qt().capabilities.indexOf(qt().formats.MP4_SEGMENTED);
                return i && function(e, t, n) {
                    var r = o().ssl ? "https" : "http";
                    lg[e] = {
                        protocol: t || r,
                        providerGroup: n
                    }
                }(e, t.protocol, r),
                dg.info("Multicast provider detected", {
                    mid: e,
                    multicastProviderGroup: r,
                    isSupported: i
                }),
                a
            }(n, r.cdnConfig),
            a(r)) : a(r)
        }
        function Kg(e) {
            switch (e.type) {
            case "overlay":
                La.dispatch((0,
                ho.SX)(e.data));
                break;
            case "report":
                A(O, L.REPORT_ECDN_TESTS, e.data);
                break;
            default:
                Vg.debug("Unexpected command from sdcdn stats reporting", e.type)
            }
        }
        function Wg(e, t) {
            hg(e, t, (function(t) {
                Ha(e, t)
            }
            ))
        }
        function Qg(e, t) {
            Vg.debug("ums reject. mid: ".concat(e), {
                mid: e,
                updates: t
            }),
            La.dispatch(Ri(void 0)),
            function(e, t) {
                var n = !1;
                t.forEach((function(t) {
                    t.embedLimitExceeded && n || (oa.send("mediaReject", !0),
                    n = !0);
                    var r = function(e) {
                        return Object.keys(e).find((function(e) {
                            return Js.includes(e)
                        }
                        )) || "default"
                    }(t)
                      , a = r.toLowerCase()
                      , i = t[r];
                    if ("viewerAuth" !== r) {
                        if ("hashLock" === r) {
                            us();
                            var o = _t.getFallbackHash();
                            if (o)
                                return void La.dispatch((0,
                                qs.t_)(o))
                        }
                        var s = La.getState().ums;
                        "passwordLock" === r && s.password && La.dispatch((0,
                        qs.dM)(null)),
                        La.dispatch(ds({
                            type: a,
                            data: i
                        })),
                        A(O, L.UMS_REJECT, {
                            mid: e,
                            send: i
                        }),
                        A(b, L.PAUSE)
                    } else {
                        var c = function() {
                            var e, t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, n = new URL(window.location);
                            n.searchParams.delete("vt");
                            var r = n.toString()
                              , a = new URL(null === (e = t.viewerAuth) || void 0 === e ? void 0 : e.authUrl);
                            return a.searchParams.set("ref", r),
                            a.toString()
                        }(t);
                        window.location.replace(c)
                    }
                }
                ))
            }(e, t)
        }
        var zg = function(e) {
            Pa.reportUmsConnectionStart(e),
            La.dispatch(Ri(performance.now()));
            var t = function(e) {
                var t, n, r = (t = e.split("."),
                n = 3,
                function(e) {
                    if (Array.isArray(e))
                        return e
                }(t) || function(e, t) {
                    var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                    if (null != n) {
                        var r, a, i = [], o = !0, s = !1;
                        try {
                            for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value),
                            !t || i.length !== t); o = !0)
                                ;
                        } catch (e) {
                            s = !0,
                            a = e
                        } finally {
                            try {
                                o || null == n.return || n.return()
                            } finally {
                                if (s)
                                    throw a
                            }
                        }
                        return i
                    }
                }(t, n) || function(e, t) {
                    if (e) {
                        if ("string" == typeof e)
                            return Ug(e, t);
                        var n = Object.prototype.toString.call(e).slice(8, -1);
                        return "Object" === n && e.constructor && (n = e.constructor.name),
                        "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Ug(e, t) : void 0
                    }
                }(t, n) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()), a = r[0], i = r[1], o = r[2], s = La.getState(), c = {
                    app: a,
                    id: i,
                    hid: o,
                    referrer: de.ZP,
                    password: (0,
                    Ce.Ij)(s),
                    connectParams: jg(),
                    longpoll: Ae.get("useLongpoll"),
                    sessionId: N.Z.sessionId,
                    ignoreTrim: Ae.get("ignoretrim"),
                    flotAddress: !!Ae.get("flot") && decodeURI(Ae.get("flot")),
                    bdtools: Ae.get("bdtools"),
                    buildNumber: fe.Z.BUILD_NUMBER,
                    clusterHost: V.Z.config.ums,
                    isOffairRecorded: ue.isOffairVid()
                }, u = (0,
                Ce.my)(s);
                return u ? c.viewerAuthToken = u : c.hash = (0,
                Ce.XR)(s),
                Mg.debug("create ums connection. mid: ".concat(e), {
                    umsParams: c
                }),
                c
            }(e)
              , n = gi()(t);
            n.on(n.event.OPEN, Hg.bind(null, e)),
            n.on(n.event.REJECT, Qg.bind(null, e)),
            n.on(n.event.UPDATE, Yg.bind(null, e)),
            n.on(n.event.LOG, (function(t) {
                var n, r = function(e) {
                    if (Array.isArray(e))
                        return e
                }(n = t) || Bg(n) || kg(n) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }(), a = r[0], i = r.slice(2);
                if (A(T, L.DEBUG_FLOT_LOG, [a].concat(function(e) {
                    return function(e) {
                        if (Array.isArray(e))
                            return Gg(e)
                    }(e) || Bg(e) || kg(e) || function() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }()
                }(i))),
                "url" === (0,
                s.default)(i, "0"))
                    try {
                        var o = new URL(i[1])
                          , c = o.protocol
                          , u = o.hostname;
                        if (/https?/.test(c))
                            return;
                        if ((xg = xg.filter((function(e) {
                            var t = e.checkedAt;
                            return Math.abs(Date.now() - t) < 6e4
                        }
                        ))).some((function(e) {
                            return e.hostname === u
                        }
                        )))
                            return;
                        xg.push({
                            hostname: u,
                            checkedAt: Date.now()
                        }),
                        Vg.debug("Download connection info", {
                            hostname: u
                        });
                        var d = /wss/.test(c) ? "https:" : "http:"
                          , l = "".concat(d, "//").concat(u, "/connectioncheck");
                        fetch(l).then((function(e) {
                            return e.json()
                        }
                        )).then((function(e) {
                            return Vg.debug("Connection info received", {
                                hostname: u,
                                info: e
                            })
                        }
                        )).catch((function(e) {
                            return Vg.error("Connection info failed", {
                                hostname: u,
                                error: e.message
                            })
                        }
                        ))
                    } catch (e) {}
                Vg.debug("ums.log ".concat(e), i)
            }
            )),
            n.on(n.event.CLOSE, Zg),
            A(O, L.UMS_CONNECT_START, e),
            n.connect()
        }
          , Xg = n(93492);
        function qg(e, t) {
            return function(e) {
                if (Array.isArray(e))
                    return e
            }(e) || function(e, t) {
                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != n) {
                    var r, a, i = [], o = !0, s = !1;
                    try {
                        for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value),
                        !t || i.length !== t); o = !0)
                            ;
                    } catch (e) {
                        s = !0,
                        a = e
                    } finally {
                        try {
                            o || null == n.return || n.return()
                        } finally {
                            if (s)
                                throw a
                        }
                    }
                    return i
                }
            }(e, t) || function(e, t) {
                if (e) {
                    if ("string" == typeof e)
                        return $g(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name),
                    "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? $g(e, t) : void 0
                }
            }(e, t) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }
        function $g(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++)
                r[n] = e[n];
            return r
        }
        var Jg, ev = {
            CLOSE_NORMAL: 1e3,
            CLOSE_GOING_AWAY: 1001,
            CLOSE_PROTOCOL_ERROR: 1002,
            CLOSE_UNSUPPORTED: 1003,
            CLOSE_NO_STATUS: 1005,
            CLOSE_ABNORMAL: 1006,
            CLOSE_INCONSISTENT_DATA_RECEIVED: 1007,
            CLOSE_POLICY_VIOLATE: 1008,
            CLOSE_TOO_LARGE: 1009,
            CLOSE_MISSING_EXTENSION: 1010,
            CLOSE_UNEXPECTED_CONDITION: 1011,
            CLOSE_FAILED_TLS_HANDSHAKE: 1015
        }, tv = null, nv = null, rv = null, av = !1, iv = null, ov = null, sv = 0, cv = [];
        function uv(e) {
            e && Array.isArray(e) && (function(e) {
                var t = qg(e, 2)[1]
                  , n = Date.now();
                "string" == typeof t && "opened" === t.trim() && (n - ov < 5e3 && clearTimeout(iv),
                La.dispatch((0,
                Xg.pq)({
                    inited: !0
                })))
            }(e),
            function(e) {
                var t = qg(e, 3)
                  , n = t[0]
                  , r = t[1]
                  , a = t[2];
                if ("string" != typeof r || "opening" !== r.trim() || tv || (tv = n),
                "string" == typeof r && r.includes("message")) {
                    var i = (0,
                    s.default)(a, "1.0", {});
                    !nv && i.meta && (nv = n),
                    rv || !i.stream || (0,
                    an.M)(i.stream) || (rv = n)
                }
                if (!av && nv && rv && tv) {
                    av = !0;
                    var o = Math.max(nv, rv) - tv;
                    La.dispatch((0,
                    Xg.mE)({
                        timeToStartInMs: o
                    }))
                }
            }(e),
            function(e) {
                var t = qg(e, 3)
                  , n = t[1]
                  , r = t[2];
                if ("string" == typeof n && "closed" === n.trim() && r) {
                    var a = qg(r, 2)
                      , i = a[0]
                      , o = a[1]
                      , s = "".concat(ev[i], " ").concat(i);
                    o && (s = "".concat(s, " ").concat(o)),
                    La.dispatch((0,
                    Xg.Lv)({
                        level: gr.Q.WARNING,
                        timeStamp: Date.now(),
                        msg: s
                    }))
                }
            }(e),
            function(e) {
                var t = qg(e, 3)
                  , n = t[1]
                  , r = t[2];
                if ("string" == typeof n && "message" === n.trim() && "reject" === (0,
                s.default)(r, "cmd")) {
                    sv += 1;
                    var a = r && r.args ? Object.keys(r.args[0])[0] : "unknown";
                    "cluster" === a.trim() && La.dispatch((0,
                    Xg.Vl)({
                        level: gr.Q.ERROR,
                        timeStamp: Date.now(),
                        msg: a
                    })),
                    sv > 3 && La.dispatch((0,
                    Xg.Vl)({
                        level: gr.Q.ERROR,
                        timeStamp: Date.now(),
                        msg: a
                    }))
                }
            }(e),
            function(e) {
                var t = qg(e, 3)
                  , n = t[0]
                  , r = t[1]
                  , a = t[2];
                if ("string" == typeof r && r.includes("message")) {
                    var i = (0,
                    s.default)(a, "1.0", {});
                    i.stream && (0,
                    an.M)(i.stream) && La.dispatch((0,
                    Xg.H$)({
                        level: gr.Q.ERROR,
                        timeStamp: n,
                        msg: "Stream module empty"
                    }))
                }
            }(e))
        }
        function dv(e) {
            var t = e.performance
              , n = e.url;
            if (0 === e.size) {
                var r = "unknown";
                /\.m4a$/.test(n) && (r = "Audio chunk empty"),
                /\.m4v$/.test(n) && (r = "Video chunk empty"),
                La.dispatch((0,
                Xg.n2)({
                    level: gr.Q.WARNING,
                    timeStamp: Date.now(),
                    msg: r
                }))
            }
            if (t) {
                var a = t.requestStart
                  , i = t.responseStart
                  , o = t.responseEnd;
                if (a && i && o) {
                    var s = Math.round(i - a)
                      , c = Math.round(o - i)
                      , u = s + c
                      , d = Eo.isEcdnProvider(n);
                    if (u > 5e3) {
                        var l = "Total: ".concat(u, "ms Req: ").concat(s, "ms Res: ").concat(c, "ms");
                        La.dispatch((0,
                        Xg.Xw)({
                            level: gr.Q.WARNING,
                            timeStamp: Date.now(),
                            msg: l,
                            request: s,
                            response: c,
                            total: u,
                            isEcdn: d
                        }))
                    }
                }
            }
        }
        function lv(e) {
            if (e) {
                var t = e.error
                  , n = e.recoverable;
                t && "playError" !== t && (n ? La.dispatch((0,
                Xg.UG)({
                    level: gr.Q.WARNING,
                    timeStamp: Date.now(),
                    msg: t
                })) : La.dispatch((0,
                Xg.XR)({
                    level: gr.Q.ERROR,
                    timeStamp: Date.now(),
                    msg: t
                })))
            }
        }
        function fv(e) {
            if (e) {
                var t = e.line;
                if ("string" == typeof t && t.includes("process segment")) {
                    cv.push(e.data);
                    var n = function(e) {
                        var t = e.filter((function(e) {
                            var t = e.streamId
                              , n = e.keyFrames;
                            return t.includes("video") && n.length
                        }
                        )).reduce((function(e, t) {
                            return e.find((function(e) {
                                return e.segmentId === t.segmentId
                            }
                            )) || e.push(t),
                            e
                        }
                        ), []).sort((function(e, t) {
                            return e.segmentId - t.segmentId
                        }
                        )).reduce((function(e, t) {
                            var n = e[e.length - 1]
                              , r = n[n.length - 1];
                            return r && r.segmentId !== t.segmentId - 1 ? e.push([t]) : n.push(t),
                            e
                        }
                        ), [[]]).map((function(e) {
                            return e.reduce((function(e, t) {
                                return e.concat(t.keyFrames)
                            }
                            ), []).reduce((function(e, t, n, r) {
                                if (n > 0) {
                                    var a = r[n - 1];
                                    e.push(t - a)
                                }
                                return e
                            }
                            ), [])
                        }
                        )).reduce((function(e, t) {
                            return e.concat(t)
                        }
                        ), [])
                          , n = t.reduce((function(e, n) {
                            return e + n / t.length
                        }
                        ), 0);
                        return {
                            keyframeIntervals: t,
                            avg: n
                        }
                    }(cv = cv.splice(-20))
                      , r = n.avg;
                    La.dispatch((0,
                    Xg.bG)({
                        keyFrameInterval: r / 1e3
                    }))
                }
            }
        }
        function pv(e) {
            var t = e.tracking
              , n = t.umsConnectionStartTime
              , r = t.umsConnectionConnectedTime;
            if ("number" == typeof n && "number" == typeof r)
                return Math.round(r - n)
        }
        function mv(e) {
            var t = e.tracking
              , n = t.umsConnectionConnectedTime
              , r = t.streamModuleReceivedTime;
            if ("number" == typeof n && "number" == typeof r)
                return Math.round(r - n)
        }
        function gv(e) {
            var t = e.tracking
              , n = t.streamModuleReceivedTime
              , r = t.firstFrameTime;
            if ("number" == typeof n && "number" == typeof r)
                return Math.round(r - n)
        }
        function vv(e) {
            return {
                type: $t,
                payload: e
            }
        }
        function Ev(e) {
            var t = e.date
              , n = e.source
              , r = e.line
              , a = e.data
              , i = e.level;
            if (void 0 !== window.console) {
                var s = [t = new Date(t).toISOString().slice(-13, -1), "[".concat(n, "]"), r];
                s = o().ie ? [s.join(" ")] : ["%c".concat(s.join("%c ")), "color: #cecece", "font-weight:    bold", ""],
                void 0 !== a && s.push(a),
                i < 200 && window.console.error && window.console.error.apply(console, s),
                300 === i && window.console.warn && window.console.warn.apply(console, s),
                400 === i && window.console.info && window.console.info.apply(console, s),
                500 === i && window.console.debug ? window.console.debug.apply(console, s) : window.console.log.apply(console, s),
                window.getUstreamPlayerLog || (window.getUstreamPlayerLog = function() {
                    return c.Z.getLogs()
                }
                )
            }
        }
        function hv() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ""
              , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
            Ne.send({
                message: "Unhandled exception",
                data: {
                    message: e,
                    stack: t.substring(0, 2e3),
                    category: "Unhandled exception"
                }
            })
        }
        de.ZP.includes("".concat(V.Z.config.siteLocal, "/embed/test")) && c.Z.addTransport((function(e) {
            var t, n = e.date, r = e.source, a = e.line, i = e.data, o = e.level;
            try {
                t = new URL(de.ZP).origin
            } catch (e) {
                t = ""
            }
            window.parent.postMessage(JSON.stringify({
                mte: [n, r, a, i, o]
            }), t)
        }
        )),
        La.getState().settings.debug && c.Z.addTransport(Ev),
        Jg = window.onerror,
        window.onerror = function(e, t, n, r, a) {
            return c.Z.fatal({
                source: "jserror",
                line: "".concat(e, " Cannot continue."),
                data: {
                    url: t,
                    lineNumber: n
                }
            }),
            hv((0,
            s.default)(a, "message", e), (0,
            s.default)(a, "stack", "")),
            !!Jg && Jg(e, t, n)
        }
        ,
        window.addEventListener("unhandledrejection", (function(e) {
            var t = (0,
            s.default)(e, "reason", "")
              , n = (0,
            s.default)(e, "promise");
            n ? n.catch((function(e) {
                hv((0,
                s.default)(e, "message", t), (0,
                s.default)(e, "stack", ""))
            }
            )) : hv(t)
        }
        )),
        La.subscribe("settings.debug", (function(e) {
            e ? c.Z.addTransport(Ev) : c.Z.removeTransport(Ev)
        }
        ));
        var yv, bv = n(84457), Tv = n(13535), Sv = n(89645), Ov = ["AT", "BE", "BG", "CH", "HR", "CY", "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", "GR", "HU", "IE", "IS", "IT", "LT", "LU", "LV", "MT", "NO", "NL", "PO", "PT", "RO", "SE", "SI", "SK"], Lv = function(e) {
            return -1 !== Ov.indexOf(e)
        };
        function Av() {
            La.dispatch((0,
            Sv.X)())
        }
        function Iv() {
            yv && clearInterval(yv),
            yv = null
        }
        function _v(e) {
            return !e || Lv(e)
        }
        function Pv() {
            var e = Ae.get("isOnIbm") || Ae.get("isOnUstream") || "unknown" === de.ZP
              , t = La.getState().content
              , n = t.countryCode
              , r = t.regionCode;
            return !(e && (_v(n) || function(e) {
                return !e || "CA" === e
            }(r)) && !La.getState().privacy.ibmCookie)
        }
        var Dv = {
            startCheck: function() {
                Iv(),
                Av(),
                yv = setInterval(Av, 5e3)
            },
            stopCheck: Iv,
            isGDPRUser: _v,
            canStartAutoplay: Pv,
            canTrackPlayerVisibility: function() {
                return Pv()
            }
        }
          , Rv = n(88775)
          , wv = (0,
        c.w)("atlas/logic/captionSearch/captionSearchService")
          , Nv = V.Z.config.api || V.Z.fallbackConfig.api;
        function Cv(e) {
            wv.error("searchOnError", e),
            Km()
        }
        var Uv, Mv = {
            searchCaptions: function(e, t) {
                if (t)
                    if (void 0 !== t.token) {
                        var n = t.token;
                        e ? function(e, t) {
                            var n = new XMLHttpRequest;
                            function r() {
                                return Cv("".concat(n.status, " ").concat(n.statusText))
                            }
                            n.addEventListener("load", (function() {
                                if (200 === n.status)
                                    try {
                                        e = JSON.parse(n.responseText),
                                        wv.debug("searchOnSuccess", e.caption_matches),
                                        Km(e.caption_matches)
                                    } catch (e) {
                                        Cv("Response JSON parse failed")
                                    }
                                else
                                    r();
                                var e
                            }
                            )),
                            n.addEventListener("error", r),
                            n.open("GET", function(e) {
                                var t = new URL("https://".concat(Nv))
                                  , n = ue.isOffairVid() ? ue.offairVid() : ue.id();
                                return t.pathname = "videos/".concat(n, "/captions/search.json"),
                                t.searchParams.set("q", function(e) {
                                    return e.replace(/\s/g, "+")
                                }(e)),
                                t.searchParams.set("highlight", !0),
                                t.toString()
                            }(e), !0),
                            n.setRequestHeader("Authorization", "Bearer ".concat(t)),
                            n.send()
                        }(e, n) : Cv("Cannot call search api with empty search text.")
                    } else
                        wv.error("There is no token for search api.");
                else
                    wv.error("There is no module for search api")
            }
        }, Fv = n(66533), jv = n(37434);
        function kv(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++)
                r[n] = e[n];
            return r
        }
        var Gv = !1
          , Bv = function() {};
        function Vv() {
            Fv.S1(wa().playerState.get(), (function(e) {
                e ? La.dispatch((0,
                rr.c0)(rr.GT.assistedReporting)) : La.dispatch((0,
                rr.yK)(rr.GT.assistedReporting))
            }
            ), {
                recovery: 5e3
            })
        }
        function xv() {
            var e = {
                waiting: ue.isLiveContent() ? 1e4 : 2e4,
                stalled: 1e4
            };
            wa().playerState.init(e);
            var t = (0,
            s.default)(V.Z, "config.crt", "crt-event-ingest.services.video.ibm.com");
            wa().sender.init({
                ingestURL: "https://".concat(t, "/ingest"),
                clockSyncURL: "https://".concat(t, "/time"),
                getEnv: function() {
                    function e(e) {
                        var t = (0,
                        Tn.Z)(e, ["label", "language", "country"])
                          , n = t.label
                          , r = t.language
                          , a = t.country;
                        return n && r && a ? {
                            languageCode: "".concat(r, "-").concat(a),
                            name: n
                        } : {}
                    }
                    var t = La.getState()
                      , n = function() {
                        var e = wa().playerState.STATES;
                        switch (wa().playerState.get().state) {
                        case e.playing:
                            return "playing";
                        case e.buffering:
                        case e.stalled:
                            return "buffering";
                        case e.init:
                        case e.waiting:
                        case e.ready:
                        default:
                            return "stopped"
                        }
                    }()
                      , r = e((0,
                    Ce.z)(t))
                      , a = r.languageCode
                      , i = r.name
                      , o = e((0,
                    Ce.Km)(t))
                      , c = o.languageCode
                      , u = o.name
                      , d = function() {
                        var e = (0,
                        Ce.C5)(t)
                          , n = e.width
                          , r = e.height;
                        if (n && r)
                            return "".concat(n, "x").concat(r)
                    }()
                      , l = ue.isVid() || ue.isOffairVid()
                      , f = l ? "recorded" : "live"
                      , p = ue.isOffairVid() ? ue.offairVid() : ue.id()
                      , m = gi()("".concat(l ? "recorded" : "channel", ".").concat(p))
                      , g = (0,
                    Tn.Z)(m, ["rpin", "rsid", "appId", "appVersion"])
                      , v = g.rpin
                      , E = g.rsid
                      , h = g.appId
                      , y = g.appVersion
                      , b = (0,
                    s.default)(t, "debug.frameRate");
                    "N/A" === b && (b = 0);
                    var T = (0,
                    Ce.my)(t) || (0,
                    Ce.XR)(t);
                    return {
                        playbackState: n,
                        mediaType: f,
                        mediaId: p,
                        playbackMedia: (0,
                        s.default)(t, "content.sourceMedia"),
                        rpin: v,
                        rsid: E,
                        pageUrl: de.ZP,
                        appId: h,
                        appVersion: y,
                        userAgent: navigator.userAgent,
                        buildNumber: fe.Z.BUILD_NUMBER,
                        playbackVersion: "".concat(qt().version, " (Atlas)"),
                        cdnProviderName: (0,
                        Ce.aW)(t),
                        cdnServerHost: (0,
                        Ce.ic)(t),
                        authToken: T,
                        resolution: d,
                        framerate: b,
                        bitrate: (0,
                        s.default)(t, "qos.stats.bitrate", 0),
                        audioLanguageCode: c,
                        audioName: u,
                        closedCaptionLanguageCode: a,
                        closedCaptionName: i,
                        speed: (0,
                        Ce.r6)(t),
                        position: 1e3 * (0,
                        Ce.Xn)(t),
                        flotConnectionTime: pv(t),
                        firstStreamModuleTime: mv(t),
                        firstFrameTime: gv(t)
                    }
                },
                reportStats: function(e) {
                    var t = e.start
                      , n = e.roundTripTime
                      , r = e.httpStatus
                      , a = void 0 === r ? 200 : r;
                    if (!Gv) {
                        var i = 200 === a ? "success" : "error";
                        Ne.send({
                            message: "Clock synchronisation finished",
                            data: {
                                category: "Debug",
                                item: "Clock synchronisation",
                                action: i,
                                http_status: a,
                                start_loading: Math.round(t),
                                time_spent: Math.round(n)
                            }
                        }),
                        Gv = !0
                    }
                }
            }),
            wa().watcher.init(wa().playerState.get(), wa().sender.get())
        }
        function Hv() {
            wa().watcher.destroy(),
            wa().sender.destroy(),
            wa().playerState.destroy()
        }
        function Zv() {
            var e = (0,
            c.w)("viewer/htmlplayback");
            e.debug("environment variables: ", o(), !0),
            e.debug("playback type selected", {
                playerVersion: fe.Z.BUILD_NUMBER,
                playbackType: "atlas",
                playbackVersion: qt().version
            }, !0);
            var t, n, r, a, i, u, d = {
                featured: !1
            }, l = null, f = !1, p = !1, m = !1;
            function g(e) {
                La.getState().playback.playing === e && f || (f = !0,
                La.dispatch((0,
                Ka.OH)(e)),
                oa.send("playing", e))
            }
            function v() {
                La.dispatch(ds({
                    type: "unsupported"
                }))
            }
            function E(e) {
                e.error === qt().errors.UNSUPPORTED && v()
            }
            function h() {
                var e = La.getState().content.trimInfo;
                e && !p && (Uv.setHighlight(e),
                p = !0);
                var t = ue.getTrimmedDurationInMillisec() / 1e3;
                La.dispatch((0,
                pa.uM)(t)),
                Uv.setDuration(),
                m = !0,
                Uv.showPlayScreen(),
                Dv.canStartAutoplay() ? Ae.get("autoplay") && (Uv.hidePlayScreen(),
                U()) : La.subscribe("privacy.ibmCookie", F),
                Uv.setContentAvailable(!0);
                var n = wa().playerState.get();
                n && (n.setProps({
                    contentAvailable: !0
                }),
                La.getState().playback.playing && n.setProps({
                    playing: !0
                }))
            }
            function _() {
                La.dispatch((0,
                Ns._r)([])),
                La.dispatch((0,
                Ka.kY)([]))
            }
            function P() {
                Ae.get("disableEosSeek") || (Uv.setSeek(0),
                La.dispatch((0,
                Ka.eE)(0)))
            }
            function D() {
                Rs() && g(!1),
                -1 !== n.indexOf("recorded") ? ue.isOffairVid() ? ws() ? (Ks(),
                ue.setHighlight([0, 1]),
                p = !1,
                A(T, L.NEXT_OFFAIR_VIDEO)) : Rs() && (e.debug("All offair videos played"),
                P(),
                M()) : (P(),
                Ae.get("loop") ? U() : M()) : -1 !== n.indexOf("channel") && e.info("previous content has just finished and the current is live (channel)")
            }
            function R() {
                var e = tf.getAverageBandwidth(2)
                  , t = tf.getSelectedStreamVerison()
                  , n = t && t.video
                  , i = {
                    category: "Loading",
                    item: "buffering",
                    action: "started",
                    segment_size: e ? Math.round(e.size) : -1,
                    net_speed: e ? Math.round(e.speed) : -1,
                    current_kbps: (0,
                    s.default)(n, "bitrate", void 0),
                    current_height: (0,
                    s.default)(n, "height", void 0)
                };
                Ne.send({
                    message: "Buffering started",
                    data: i
                }),
                a = (new Date).getTime(),
                clearTimeout(r),
                r = setTimeout((function() {
                    return Uv.setLoading(!0)
                }
                ), 3e3)
            }
            function w() {
                var e = tf.getAverageBandwidth(2)
                  , t = tf.getSelectedStreamVerison()
                  , n = t && t.video;
                if (a) {
                    var o = {
                        category: "Loading",
                        item: "buffering",
                        action: "completed",
                        time_spent: (new Date).getTime() - a,
                        segment_size: e ? Math.round(e.size) : -1,
                        net_speed: e ? Math.round(e.speed) : -1,
                        current_kbps: (0,
                        s.default)(n, "bitrate", void 0),
                        current_height: (0,
                        s.default)(n, "height", void 0)
                    };
                    Ne.send({
                        message: "Buffering completed",
                        data: o
                    }),
                    a = null
                }
                if (!i) {
                    i = !0;
                    var c = ue.getStreamType() || "unknown";
                    Ne.send({
                        message: "Playback started",
                        data: {
                            category: "Playback",
                            item: "playback",
                            action: "started",
                            stream_type: c
                        }
                    });
                    var u = La.getState().playback
                      , d = u.selectedClosedCaption
                      , l = u.closedCaptionSelection;
                    if (d > -1 && "manual" !== l) {
                        var f = (0,
                        s.default)(La.getState(), "playback.closedCaptionTracks", []).find((function(e) {
                            return e.id === d
                        }
                        ));
                        if (f) {
                            var p = f.country
                              , m = void 0 === p ? "00" : p
                              , g = f.language
                              , v = f.isGenerated;
                            Ne.send({
                                message: "Playback started with CC",
                                data: {
                                    category: "Playback",
                                    item: "CC",
                                    action: "displayed",
                                    cc_type: "broadcaster" === l ? "from_broadcaster" : "from_viewer",
                                    language: "".concat(g, "-").concat(m),
                                    generated: v
                                }
                            })
                        }
                    }
                }
                clearTimeout(r),
                Uv.setLoading(!1)
            }
            function U() {
                e.debug("onPlaycall"),
                m && (La.getState().playback.playing || (g(!0),
                A(b, L.PLAY)))
            }
            function M() {
                e.debug("onPause"),
                g(!1),
                A(b, L.PAUSE)
            }
            function F() {
                Uv.hidePlayScreen(),
                U(),
                Dv.stopCheck()
            }
            function j() {
                var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0]
                  , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "other";
                Ne.send({
                    message: "Troubleshoot playback issue sent",
                    data: {
                        category: "Troubleshoot Playback Issue",
                        item: "troubleshoot playback issue",
                        action: "send",
                        issue_type: t || "other",
                        assisted_reporting_shown: e
                    }
                })
            }
            function k() {
                var e = wa().sender.get();
                if (e && e.firstStartEvent) {
                    var t = La.getState()
                      , n = (0,
                    s.default)(t, "playback.closedCaptionTracks", [])
                      , r = (0,
                    s.default)(t, "playback.audioTracks", []);
                    (n.length > 0 || r.length > 0) && e.send(wa().sender.EVENTS.propertyChange)
                }
            }
            function G() {
                var e = wa().sender.get();
                null != e && e.firstStartEvent && e.send(wa().sender.EVENTS.propertyChange)
            }
            function B() {
                if (t) {
                    xv(),
                    Vv(),
                    function() {
                        n = ue.getMid();
                        var e = gi()(n);
                        e && e.destroy()
                    }(),
                    Cu.init(n),
                    xa(n),
                    Tl();
                    try {
                        zg(n)
                    } catch (t) {
                        e.error("Unexpected side effect has been occured while creating ums. Message: ".concat(t.message))
                    }
                    oa.send("content", [ue.app(), ue.id()])
                }
            }
            La.dispatch((u = performance.now(),
            {
                type: Or,
                payload: u
            })),
            window.addEventListener("unload", (function() {
                Ne.send({
                    message: "Player closed",
                    data: {
                        category: "Playback",
                        item: "playback",
                        action: "player closed"
                    }
                })
            }
            )),
            I(b, L.LOAD, (function(t) {
                var r = t[0]
                  , a = [];
                a = t[2] && "boolean" != typeof t[2] ? [t[1], t[2]] : [t[1]];
                var o = ue.getMid()
                  , s = "".concat(r, ".").concat(a.join("."));
                if (o !== s) {
                    var c, u;
                    e.debug("Load media: ".concat(t[0], ".").concat(t[1]), {
                        type: r,
                        contentParams: a
                    }),
                    Hv(),
                    ue.update(r, a),
                    La.dispatch((0,
                    rr.VV)(1)),
                    La.dispatch(vv()),
                    La.dispatch((0,
                    pa.gg)()),
                    La.dispatch((0,
                    pa.uM)()),
                    La.dispatch((0,
                    pa.iT)(ue.getMid())),
                    La.dispatch({
                        type: Jt,
                        payload: undefined
                    }),
                    La.dispatch(Na({
                        is360Video: void 0,
                        fov: void 0
                    })),
                    La.dispatch((0,
                    pa.Gz)()),
                    tv = null,
                    nv = null,
                    rv = null,
                    av = !1,
                    cv = [],
                    null !== iv && clearTimeout(iv),
                    iv = null,
                    ov = null,
                    sv = 0,
                    La.dispatch((0,
                    Xg.AB)()),
                    La.dispatch(Ma({
                        remove: !0
                    })),
                    La.dispatch(Ca({
                        remove: !0
                    })),
                    n !== ue.getMid() && (La.dispatch((0,
                    Rv.FD)(void 0)),
                    Ym(!1),
                    La.dispatch((0,
                    Rv.Q3)(!1)),
                    La.dispatch(Ua({})),
                    Zm(),
                    La.dispatch((0,
                    Ka.KS)([])),
                    La.dispatch({
                        type: Nr
                    }),
                    _(),
                    Ae.set("autoplay", !0),
                    i = !1,
                    f = !1),
                    c = n,
                    u = gi()(c),
                    e.debug("dispose", {
                        mid: c
                    }),
                    l = null,
                    p = !1,
                    A(T, L.LIVE, !1),
                    oa.send("live", !1),
                    Uv.setContentAvailable(!1),
                    Za(c),
                    Ds(),
                    u && u.destroy(),
                    Cu.reset("Media change"),
                    em(),
                    Ks();
                    var d = ue.isVid() ? pa.w_.recorded : pa.w_.live;
                    La.dispatch((0,
                    pa.y5)(d)),
                    B()
                } else
                    e.debug("Load cancelled", {
                        currentMid: o,
                        loadedMid: s
                    })
            }
            )),
            La.subscribe("ums.password", B),
            La.subscribe("ums.hash", B),
            La.subscribe("ums.lock.type", (function(e) {
                e && (Fv.ob(),
                Hv())
            }
            )),
            La.subscribe("playback.isBufferEmpty", (function(e) {
                var t = wa().playerState.get();
                t && t.setProps({
                    waiting: e
                })
            }
            )),
            La.subscribe("playback.selectedAudio", k),
            La.subscribe("playback.selectedClosedCaption", k),
            La.subscribe("playback.videoResolution", G),
            La.subscribe("provider.currentProvider", G),
            La.subscribe("player.speed", G),
            La.subscribe("videoTag", (function(e) {
                Bv(),
                e && (Bv = (0,
                Da.Z)(e, (function(e) {
                    La.dispatch((0,
                    Xg.qo)(e))
                }
                )),
                e.addEventListener("enterpictureinpicture", (function() {
                    (0,
                    lc.T)({
                        fromMode: "hidden",
                        toMode: "showing"
                    }, e)
                }
                )),
                e.addEventListener("leavepictureinpicture", (function() {
                    (0,
                    lc.T)({
                        fromMode: "showing",
                        toMode: "hidden"
                    }, e)
                }
                )))
            }
            )),
            Uv = new nm.Z({
                reduxStore: Oa,
                wrappedStore: La,
                exposedVars: N.Z,
                domainMapping: V.Z,
                playbackVersion: "".concat(qt().version, " (Atlas)"),
                getByContent: Ae.getByContent,
                getUrl: function() {
                    return ue.getUrl.apply(ue, arguments)
                },
                getId: ue.id,
                getApp: ue.app,
                getCutStart: ue.getCutStart,
                isContentPlayable: ue.isContentPlayable,
                setHighlight: ue.setHighlight,
                isHLS: ue.isHLS,
                isVid: ue.isVid,
                isCid: ue.isCid,
                isLive: ue.live,
                isOffairImg: ue.isOffairImg,
                getAbsoluteSeekPositionInMs: ue.getAbsoluteSeekPositionInMs,
                getRelativeSeekPositionInMs: ue.getRelativeSeekPositionInMs,
                getTrimmedDurationInMillisec: ue.getTrimmedDurationInMillisec,
                saveHashToLocalStorage: _t.saveHashToLocalStorage,
                getHashFromLocalStorage: _t.getHashFromLocalStorage,
                isPollAnswered: bv.Z.isAnswered,
                searchCaptions: Mv.searchCaptions,
                getPlayerState: function() {
                    var e = wa().playerState.get();
                    if (e)
                        return e.state
                },
                getInitialConfig: function(e) {
                    return Ae.get(e)
                }
            }),
            function(e) {
                y = e
            }(Uv),
            Uv.addEventListener(C.Z.REPORT.centralLog, (function(e) {
                var t = e.detail
                  , n = t.message
                  , r = t.data;
                Ne.send({
                    message: n,
                    data: r
                })
            }
            )),
            Uv.addEventListener(C.Z.COMMAND.theaterMode, (function(e) {
                var t = e.detail.enabled;
                oa.send("theaterMode", t)
            }
            )),
            Uv.addEventListener(C.Z.COMMAND.poll, (function(e) {
                var t = e.detail;
                oa.send("poll", t)
            }
            )),
            Uv.addEventListener(C.Z.COMMAND.qualityChange, (function(e) {
                var t = e.detail.qualityId;
                A(b, L.QUALITY_CHANGE, t)
            }
            )),
            Uv.addEventListener(C.Z.COMMAND.sendLog, (function(t) {
                var n = t.detail
                  , r = n.reason
                  , a = n.logSendingFromAssistedReporting;
                e.info("Report playback issue", {
                    reason: r
                }),
                Uv.setLogSendingStarted(),
                (0,
                Xa.Z)({
                    onProgress: Uv.setLogSendingProgress
                }).then((function(e) {
                    var t;
                    Uv.setLogSendingCompleted(e),
                    j(a, r);
                    var n = function() {
                        var e = r.match(/(other): (.*)/);
                        if (!e)
                            return {
                                type: r,
                                text: ""
                            };
                        var t, n, a = (n = 3,
                        function(e) {
                            if (Array.isArray(e))
                                return e
                        }(t = e) || function(e, t) {
                            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                            if (null != n) {
                                var r, a, i = [], o = !0, s = !1;
                                try {
                                    for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value),
                                    !t || i.length !== t); o = !0)
                                        ;
                                } catch (e) {
                                    s = !0,
                                    a = e
                                } finally {
                                    try {
                                        o || null == n.return || n.return()
                                    } finally {
                                        if (s)
                                            throw a
                                    }
                                }
                                return i
                            }
                        }(t, n) || function(e, t) {
                            if (e) {
                                if ("string" == typeof e)
                                    return kv(e, t);
                                var n = Object.prototype.toString.call(e).slice(8, -1);
                                return "Object" === n && e.constructor && (n = e.constructor.name),
                                "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? kv(e, t) : void 0
                            }
                        }(t, n) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }());
                        return {
                            type: a[1],
                            text: a[2]
                        }
                    }()
                      , i = n.type
                      , o = n.text;
                    null === (t = wa().sender.get()) || void 0 === t || t.send(wa().sender.EVENTS.error, {
                        errorType: i,
                        errorText: o,
                        logId: e
                    })
                }
                )).catch((function(t) {
                    e.error(t.message),
                    Uv.setLogSendingCompleted()
                }
                ))
            }
            )),
            Uv.addEventListener(C.Z.LOG.fatal, (function(t) {
                var n = t.detail
                  , r = n.line
                  , a = n.data
                  , i = n.keep;
                e.fatal(r, a, i)
            }
            )),
            Uv.addEventListener(C.Z.LOG.error, (function(t) {
                var n = t.detail
                  , r = n.line
                  , a = n.data
                  , i = n.keep;
                e.error(r, a, i)
            }
            )),
            Uv.addEventListener(C.Z.LOG.warn, (function(t) {
                var n = t.detail
                  , r = n.line
                  , a = n.data
                  , i = n.keep;
                e.warn(r, a, i)
            }
            )),
            Uv.addEventListener(C.Z.LOG.info, (function(t) {
                var n = t.detail
                  , r = n.line
                  , a = n.data
                  , i = n.keep;
                e.info(r, a, i)
            }
            )),
            Uv.addEventListener(C.Z.LOG.debug, (function(t) {
                var n = t.detail
                  , r = n.line
                  , a = n.data
                  , i = n.keep;
                e.debug(r, a, i)
            }
            )),
            window.sendPlayerLog = function() {
                Uv.setLogSendingStarted(),
                (0,
                Xa.Z)({
                    onProgress: Uv.setLogSendingProgress
                }).then((function(e) {
                    Uv.setLogSendingCompleted(e),
                    j(),
                    console.log("Log sending complete. Issue ID: ".concat(e))
                }
                )).catch((function(t) {
                    e.error(t.message),
                    console.error(t),
                    Uv.setLogSendingCompleted()
                }
                ))
            }
            ,
            Ae.get("findText") && (La.dispatch((0,
            Rv.FD)(decodeURIComponent(Ae.get("findText")))),
            La.dispatch((0,
            Rv.Q3)(!0))),
            Ne.isLoggingEnabled() ? Om() : Lm(),
            Ys(),
            function() {
                t = !0,
                Dv.startCheck(),
                La.dispatch((0,
                pa.iT)(ue.getMid()));
                var r = ue.isVid() ? pa.w_.recorded : pa.w_.live;
                La.dispatch((0,
                pa.y5)(r)),
                tn.Z.init("atlas"),
                cs(),
                Jp(Ae.get("initialQuality"), Ae.get("forcedQuality")),
                vl(),
                Ps(),
                I(T, L.LIVE, (function(e) {
                    if (e !== l) {
                        Ne.send({
                            message: "Live status changed",
                            data: {
                                category: "Playback",
                                item: "live status",
                                action: "changed",
                                status: e ? "live" : "off air"
                            }
                        });
                        var t = "boolean" == typeof l;
                        t && (Zm(),
                        _()),
                        t && e && (xv(),
                        Vv(),
                        wa().playerState.get().setProps({
                            contentAvailable: !0
                        }),
                        La.getState().playback.playing && wa().playerState.get().setProps({
                            playing: !0
                        })),
                        e || (Fv.ob(),
                        Hv())
                    }
                    if (oa.send("live", e),
                    Ae.set("isLive", e),
                    l = e) {
                        n = ue.getMid();
                        var r = gi()(n);
                        La.dispatch((0,
                        qs.hD)({
                            umsInfo: r.internals
                        })),
                        La.dispatch((0,
                        pa.y5)(pa.w_.live))
                    }
                    La.dispatch((0,
                    pa.Gz)(l)),
                    Ws()
                }
                )),
                I(T, L.CREATE_SLIDESHOW, (function() {
                    Uv.startSlideShow(),
                    Ne.send({
                        message: "Offair content displayed",
                        data: {
                            category: "Playback",
                            item: "off air content",
                            action: "displayed",
                            offair_content_type: "image"
                        }
                    }),
                    La.dispatch((0,
                    pa.y5)(pa.w_.offairSlide))
                }
                )),
                I(T, L.ATLAS_THROTTLE, (function(e) {
                    Uv.setThrottle(e)
                }
                )),
                I(T, L.DESTROY_SLIDESHOW, (function() {
                    Uv.stopSlideShow()
                }
                )),
                I(T, L.CREATE_OFFAIR_VIDEO, (function(t) {
                    n = "recorded.".concat(t),
                    setTimeout((function() {
                        ue.setDurationInMillisec(0),
                        La.dispatch((0,
                        pa.uM)()),
                        Tl(),
                        xa(n),
                        _(),
                        Qs(!1),
                        zs(!1),
                        xv(),
                        Vv();
                        try {
                            zg(n);
                            var r = gi()(n);
                            oa.send("content", ["recorded", t]),
                            La.dispatch((0,
                            qs.hD)({
                                umsInfo: r.internals
                            })),
                            Ne.send({
                                message: "Offair content displayed",
                                data: {
                                    category: "Playback",
                                    item: "off air content",
                                    action: "displayed",
                                    offair_content_type: "video"
                                }
                            }),
                            La.dispatch((0,
                            pa.y5)(pa.w_.offairVideo))
                        } catch (t) {
                            e.error("Unexpected side effect has been occured while creating ums. Message ".concat(t.message))
                        }
                    }
                    ), 100)
                }
                )),
                I(T, L.DESTROY_OFFAIR_VIDEO, (function(e) {
                    var t = gi()("recorded.".concat(e));
                    null == t || t.destroy()
                }
                )),
                I(T, L.ATLAS_STORED_UPDATE, (function(e) {
                    La.dispatch((0,
                    Ka.x4)(e))
                }
                )),
                I(T, L.ATLAS_BUFFERED_UPDATE, (function(e) {
                    La.dispatch((0,
                    Ka.x4)(e))
                }
                )),
                I(T, L.ATLAS_PROGRESS, (function(e) {
                    var t = e.position
                      , n = e.sourceMedia;
                    Uv.setAtlasProgress(t),
                    Hm(t / 1e3),
                    La.dispatch(function(e, t) {
                        return {
                            type: Ut.setPosition,
                            payload: {
                                position: e,
                                sourceMedia: t
                            }
                        }
                    }(t, n));
                    var r = wa().playerState.get();
                    r && r.setProps({
                        currentTime: t / 1e3
                    })
                }
                )),
                I(S, L.THUMBNAIL_UPDATE, (function(e) {
                    oa.send("thumbnail", e)
                }
                )),
                I(S, L.BROADCASTER_UPDATE, (function(e) {
                    e.featured && (d.featured = !0)
                }
                )),
                I(S, L.META_UPDATE, (function(e) {
                    e.title && (La.dispatch(vv(e.title)),
                    oa.send("title"),
                    d.title = e.title),
                    Qs()
                }
                )),
                I(S, L.SHARE_UPDATE, (function(e) {
                    oa.send("share", e)
                }
                )),
                I(T, "loading", (function(e) {
                    Uv.setLoading(e)
                }
                )),
                I(T, L.DURATION, (function() {
                    var e = ue.getDurationInMillisec() / 1e3;
                    La.dispatch((0,
                    pa.gg)(e)),
                    Uv.setDuration(),
                    oa.send("duration", e)
                }
                )),
                I(T, L.PLAYING, (function(e) {
                    g(e),
                    A(O, L.PLAYING, {
                        mid: n,
                        playing: e
                    });
                    var t = wa().playerState.get();
                    t && (t.setProps({
                        playing: e
                    }),
                    e && La.getState().playback.isBufferEmpty && t.setProps({
                        waiting: !0
                    }))
                }
                )),
                I(T, L.PROGRESS, (function(e) {
                    var t = function(e) {
                        if (ue.isHLS())
                            return e;
                        var t = ue.getCutStart();
                        return (e - t) / (ue.getCutEnd() - t)
                    }(e);
                    Uv.setProgress(t),
                    La.dispatch((0,
                    Ka.eE)(t))
                }
                )),
                I(T, L.RECORDED_READY, (function() {
                    Ws()
                }
                )),
                I(O, L.REPORT_BUFFER_EMPTY, R),
                I(O, L.REPORT_BUFFER_FULL, w),
                I(T, L.VIDEO_FINISHED, D),
                I(T, L.ATLAS_DOWNLOAD_ERROR, Eo.onProviderFailure),
                I(T, L.CONTENT_AVAILABLE, h),
                I(S, L.LIVE_CTA_UPDATE, (function(e) {
                    oa.send("liveCtaUpdate", e)
                }
                )),
                I(S, L.CAPTION_UPDATE, (function(e) {
                    Wm(e)
                }
                )),
                I(S, L.SLIDES_UPDATE, (function(e) {
                    xm(e)
                }
                )),
                I(T, L.UNSUPPORTED, v),
                I(T, L.ATLAS_ERROR, E),
                Uv.addEventListener(C.Z.COMMAND.play, U),
                Uv.addEventListener(C.Z.COMMAND.pause, M),
                Uv.addEventListener(C.Z.COMMAND.seek, (function(e) {
                    var t = e.detail;
                    !function(e, t) {
                        var r = La.getState().playback.progress
                          , a = La.getState().content.trimmedDuration;
                        A(O, L.SEEK, {
                            mid: n,
                            send: {
                                from: r,
                                to: e / a,
                                duration: a
                            }
                        }),
                        A(b, L.SEEK, {
                            position: e,
                            initiator: t
                        })
                    }(t.position, t.initiator)
                }
                )),
                Uv.addEventListener(C.Z.COMMAND.videoFinished, D),
                Uv.addEventListener(C.Z.COMMAND.playScreenClicked, U),
                Uv.addEventListener(C.Z.COMMAND.sendPollAnswer, (function(e) {
                    var t = e.detail
                      , n = ue.getMid();
                    gi()(n).send("api/poll/vote", [t]),
                    bv.Z.setPollAnswered(t.pollInstanceId)
                }
                )),
                Uv.addEventListener(C.Z.REPORT.thumbnailShown, Pa.reportThumbnailShown),
                pi(),
                null === iv && (ov = Date.now(),
                iv = setTimeout((function() {
                    La.dispatch((0,
                    Xg.pq)({
                        inited: !1
                    }))
                }
                ), 5e3)),
                I(T, L.DEBUG_FLOT_LOG, uv),
                I(O, L.REPORT_BANDWIDTH, dv),
                I(T, L.ATLAS_ERROR, lv),
                I(T, L.ATLAS_LOG, fv),
                Ae.get("externalvtt") && Ms(),
                B(),
                Uv.setUiVisibility(!0),
                Uv.setReady(!0),
                La.dispatch((0,
                Ka.Uc)(!0)),
                oa.send("ready", !0),
                Ne.send({
                    message: "Initial loading completed",
                    data: {
                        category: "Loading",
                        item: "initial loading",
                        action: "completed"
                    }
                });
                var a = function() {
                    return Ne.send({
                        message: "Player hidden",
                        data: {
                            category: "Visibility",
                            item: "player",
                            action: "hidden"
                        }
                    }),
                    function(e) {
                        Ne.send({
                            message: "Player visible",
                            data: {
                                category: "Visibility",
                                item: "player",
                                action: "visible",
                                time_spent: e
                            }
                        })
                    }
                }
                  , o = function(e, t) {
                    return function() {
                        var n, r = tm(), a = tf.getSelectedQuality(), i = tf.getSelectedStreamVerison(), o = tf.getStreams();
                        if (!Ae.get("forced-quality") && (null == i || null === (n = i.video) || void 0 === n ? void 0 : n.height) > 487 && o.length > 0) {
                            var s = o.find((function(e) {
                                return e.id === o.length - 1
                            }
                            ));
                            if (!s)
                                return;
                            var c = i.bitrate
                              , u = null == s ? void 0 : s.bitrate;
                            return A(b, L.QUALITY_CHANGE, s.id),
                            Dv.canTrackPlayerVisibility() && Ne.send({
                                message: "Player not visible, ".concat(e),
                                data: {
                                    category: "Visibility",
                                    item: "player",
                                    action: e,
                                    from_kbps: c,
                                    to_kbps: u
                                }
                            }),
                            function(e) {
                                var n = e / 1e3 * (c - u);
                                A(b, L.QUALITY_CHANGE, r ? -1 : a),
                                Dv.canTrackPlayerVisibility() && Ne.send({
                                    message: "Player visible, ".concat(t),
                                    data: {
                                        category: "Visibility",
                                        item: "player",
                                        action: t,
                                        time_spent: e,
                                        from_kbps: u,
                                        to_kbps: c,
                                        current_kbps: n
                                    }
                                })
                            }
                        }
                    }
                };
                Dv.canTrackPlayerVisibility() && ((0,
                jv.K)(a),
                (0,
                jv.g)(a)),
                (0,
                jv.K)(o("not in viewport", "in viewport"), 3e4),
                (0,
                jv.g)(o("switched tabs", "switched to player"), 15e3),
                Ae.get("autoplay") && !i && Ne.send({
                    message: "Playback requested",
                    data: {
                        category: "Playback",
                        item: "playback",
                        action: "requested - autoplay"
                    }
                }),
                Ae.get("volume") < 100 && setTimeout((function() {
                    return La.dispatch((0,
                    rr.jA)(Ae.get("volume")))
                }
                ), 0),
                (0,
                Tv.a)() && La.dispatch((0,
                rr.c0)(rr.GT.oldBrowser))
            }()
        }
        function Yv() {
            Pa.cleanup(),
            Pa.setInitStart(),
            Zv()
        }
        wa().logger.onLog((function(e) {
            var t = e.type
              , n = e.module
              , r = e.message
              , a = e.data;
            c.Z.log({
                level: t,
                source: n,
                line: r,
                data: a
            })
        }
        ))
    },
    42610: function(e, t, n) {
        "use strict";
        t.Z = function(e) {
            return (0,
            a.default)(e, i.TYPES.OBJECT)
        }
        ;
        var r, a = (r = n(26680)) && r.__esModule ? r : {
            default: r
        }, i = n(58763)
    },
    81635: function(e) {
        self,
        e.exports = function() {
            "use strict";
            var e = {
                d: function(t, n) {
                    for (var r in n)
                        e.o(n, r) && !e.o(t, r) && Object.defineProperty(t, r, {
                            enumerable: !0,
                            get: n[r]
                        })
                },
                o: function(e, t) {
                    return Object.prototype.hasOwnProperty.call(e, t)
                },
                r: function(e) {
                    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                        value: "Module"
                    }),
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    })
                }
            }
              , t = {};
            e.r(t),
            e.d(t, {
                default: function() {
                    return Si
                }
            });
            var n = "Atlas"
              , r = {
                POSITION: "".concat(n, ".position"),
                FINISHED: "".concat(n, ".finished"),
                BUFFER_EMPTY: "".concat(n, ".bufferEmpty"),
                BUFFER_FULL: "".concat(n, ".bufferFull"),
                METADATA: "".concat(n, ".metadata"),
                BANDWIDTH: "".concat(n, ".bandwidth"),
                STORED: "".concat(n, ".stored"),
                BUFFERED: "".concat(n, ".buffered"),
                SEEK_STARTED: "".concat(n, ".seekStarted"),
                SEEK_COMPLETED: "".concat(n, ".seekCompleted"),
                QUALITY_CHANGE_STARTED: "".concat(n, ".qualityChangeStarted"),
                QUALITY_CHANGE_COMPLETED: "".concat(n, ".qualityChangeCompleted"),
                QUALITY_CHANGE_CANCELLED: "".concat(n, ".qualityChangeCancelled"),
                LANGUAGE_CHANGE_STARTED: "".concat(n, ".languageChangeStarted"),
                LANGUAGE_CHANGE_COMPLETED: "".concat(n, ".languageChangeCompleted"),
                LANGUAGE_CHANGE_CANCELLED: "".concat(n, ".languageChangeCancelled"),
                ERROR: "".concat(n, ".error"),
                LOG: "".concat(n, ".log"),
                THROTTLE: "".concat(n, ".throttle"),
                AUDIO_TRACKS: "".concat(n, ".audioTracks"),
                TEXT_TRACKS: "".concat(n, ".textTracks"),
                TEXT_TRACK_CUE_CHANGE: "".concat(n, ".textTrackCueChange"),
                X08_DETECTED: "".concat(n, ".x08Detected"),
                WEBKIT_SUPPORTS_FULLSCREEN: "".concat(n, ".webkitSupportsFullscreen"),
                WEBKIT_ENTER_FULLSCREEN: "".concat(n, ".webkitEnterFullscreen"),
                WEBKIT_END_FULLSCREEN: "".concat(n, ".webkitEndFullscreen"),
                GAP_RECOVERING: "".concat(n, ".gapRecovering"),
                ATLAS_SEEKABLE: "".concat(n, ".atlasSeekable"),
                ATLAS_FULLY_INITIALIZED: "".concat(n, ".atlasFullyInitialized")
            }
              , a = {
                UNSUPPORTED: "unsupported",
                INVALID_OPTIONS: "invalidOptions",
                SEGMENT_NOT_FOUND: "segmentNotFound",
                SEGMENT_LOAD_FAILED: "segmentLoadFailed",
                VIDEO_PLAYER: "videoPlayer",
                UNRECOVERED_STALLED: "unrecoveredStalled",
                CAN_NOT_CREATE_URL: "canNotCreateUrl",
                NEW_REPRESENTATION: "newRepresentation",
                PLAY_ERROR: "playError"
            }
              , i = {
                FLV_MOVIE: "flv",
                FLV_SEGMENTED: "flv/segmented",
                MP4_MOVIE: "mp4",
                MP4_SEGMENTED: "mp4/segmented",
                HLS: "hls",
                VTT: "text/vtt"
            }
              , o = function() {
                var e = {};
                function t(t, n, r) {
                    r = Number.isNaN(+r) ? 0 : Math.max(-2, Math.min(2, +r)),
                    e || (e = {}),
                    e[t] || (e[t] = []);
                    for (var a = e[t], i = 0; a[i] && a[i].priority > r; )
                        i += 1;
                    a.splice(i, 0, {
                        callback: n,
                        priority: r
                    })
                }
                function n(t, n) {
                    if (e && e[t]) {
                        for (var r = 0; r < e[t].length; r += 1)
                            e[t][r].callback === n && e[t].splice(r--, 1);
                        e[t].length || delete e[t]
                    }
                }
                function r(t) {
                    return e && Object.hasOwnProperty.call(e, t) ? e[t].length : 0
                }
                function a(t, n) {
                    for (var r = 0; e && e[t] && r < e[t].length; r += 1)
                        if (e[t][r].callback === n)
                            return !0;
                    return !1
                }
                return {
                    addListener: t,
                    removeListener: n,
                    hasListener: function(t) {
                        return e && Object.hasOwnProperty.call(e, t) && !!e[t].length
                    },
                    listenerCount: r,
                    allListenerCount: function() {
                        return e ? Object.getOwnPropertyNames(e).map(r).reduce((function(e, t) {
                            return e + t
                        }
                        ), 0) : 0
                    },
                    on: t,
                    off: n,
                    dispatch: function(t, n) {
                        if (e && e[t]) {
                            var r, i = [];
                            for (r = 0; r < e[t].length; r += 1)
                                i.push(e[t][r].callback);
                            for (r = 0; r < i.length; r += 1)
                                a(t, i[r]) && i[r](n)
                        }
                    },
                    cleanup: function() {
                        e = null
                    },
                    MINIMUM_PRIORITY: -2,
                    MAXIMUM_PRIORITY: 2
                }
            }
              , s = {
                FATAL: 100,
                ERROR: 200,
                WARN: 300,
                INFO: 400,
                DEBUG: 500
            }
              , c = o()
              , u = {
                LOG: "log"
            };
            function d(e, t, n, r) {
                var a = new Date;
                if (c.hasListener(u.LOG)) {
                    var i = {
                        timestamp: a,
                        source: e,
                        line: t,
                        data: n,
                        level: r
                    };
                    c.dispatch(u.LOG, i)
                }
            }
            var l = {
                create: function(e) {
                    return {
                        debug: function(t, n) {
                            d(e, t, n, s.DEBUG)
                        },
                        info: function(t, n) {
                            d(e, t, n, s.INFO)
                        },
                        warn: function(t, n) {
                            d(e, t, n, s.WARN)
                        },
                        error: function(t, n) {
                            d(e, t, n, s.ERROR)
                        },
                        fatal: function(t, n) {
                            d(e, t, n, s.FATAL)
                        }
                    }
                },
                log: d,
                getStack: function() {
                    return (new Error).stack.split("\n").slice(2).map((function(e) {
                        return e.substr(7)
                    }
                    ))
                },
                events: u,
                levels: s,
                addListener: function(e, t) {
                    c.addListener(e, t)
                },
                removeListener: function(e, t) {
                    c.removeListener(e, t)
                },
                cleanup: function() {
                    c.cleanup()
                }
            }
              , f = "Controller"
              , p = {
                BASE: f,
                FINISHED: "".concat(f, ".finished"),
                STREAM_URL: "".concat(f, ".streamURL"),
                ADD_BUFFER: "".concat(f, ".addBuffer"),
                REMOVE_BUFFER: "".concat(f, ".removeBuffer"),
                REQUEST_SEGMENT: "".concat(f, ".requestSegment"),
                LOAD_MOVIE_META: "".concat(f, ".loadMovieMeta"),
                LOAD_SEGMENT: "".concat(f, ".loadSegment"),
                ABORT_DOWNLOAD: "".concat(f, ".abortDownload"),
                CONTENT_MOVED: "".concat(f, ".contentMoved"),
                BROADCASTER_TIME_UPDATE: "".concat(f, ".broadcasterTimeUpdate"),
                REQUEST_KEYFRAME_POSITION: "".concat(f, ".requestKeyFramePosition"),
                CANCEL_KEYFRAME_REQUEST: "".concat(f, ".cancelKeyFrameRequest"),
                SWITCH_STREAM: "".concat(f, ".switchStream"),
                CANCEL_STREAM_SWITCH: "".concat(f, ".cancelStreamSwitch"),
                MISSING_RAP_AT_RANGE: "".concat(f, ".missingRapAtPoint"),
                CAN_NOT_CREATE_URL: "".concat(f, ".canNotCreateUrl"),
                NEW_REPRESENTATION: "".concat(f, ".newRepresentation"),
                QUALITY_CHANGE_STARTED: "".concat(f, ".qualityChangeStarted"),
                QUALITY_CHANGE_COMPLETED: "".concat(f, ".qualityChangeCompleted"),
                QUALITY_CHANGE_CANCELLED: "".concat(f, ".qualityChangeCancelled"),
                LANGUAGE_CHANGE_STARTED: "".concat(f, ".languageChangeStarted"),
                LANGUAGE_CHANGE_COMPLETED: "".concat(f, ".languageChangeCompleted"),
                LANGUAGE_CHANGE_CANCELLED: "".concat(f, ".languageChangeCancelled"),
                ATLAS_FULLY_INITIALIZED: "".concat(f, ".atlasFullyInitialized")
            }
              , m = "Debug"
              , g = {
                BASE: m,
                LOG: "".concat(m, ".log")
            }
              , v = "SegmentDownloader"
              , E = {
                BASE: v,
                LOAD_INIT: "".concat(v, ".loadInit"),
                LOAD_START: "".concat(v, ".loadStart"),
                LOAD_COMPLETE: "".concat(v, ".loadComplete"),
                RAW: "".concat(v, ".raw"),
                SEGMENT: "".concat(v, ".segment"),
                EMPTY_SEGMENT: "".concat(v, ".emptySegment"),
                CONFIG: "".concat(v, ".config"),
                FAILED: "".concat(v, ".failed"),
                ABORTED: "".concat(v, ".aborted"),
                DESTROY: "".concat(v, ".destroy")
            }
              , h = "StorageManager"
              , y = {
                BASE: h,
                EOS_POSITION_DETECTED: "".concat(h, ".eosPositionDetected"),
                SEGMENT_STORAGE_CREATED: "".concat(h, ".segmentStorageCreated"),
                SEGMENT_STORAGE_REMOVED: "".concat(h, ".segmentStorageRemoved"),
                SEGMENT_STORAGE_UPDATED: "".concat(h, ".segmentStorageUpdated")
            }
              , b = "SegmentStorage"
              , T = {
                BASE: b,
                SEGMENT_MISSING: "".concat(b, ".segmentMissing"),
                SEGMENT_MISSING_BY_ID: "".concat(b, ".segmentMissingById"),
                KEYFRAME_POSITION: "".concat(b, ".keyFramePosition"),
                SEGMENTS_REMOVED: "".concat(b, ".segmentsRemoved"),
                SEGMENT_CHANGE: "".concat(b, ".segmentChange")
            }
              , S = "VideoPlayer"
              , O = {
                BASE: S,
                ERROR: "".concat(S, ".error"),
                POSITION: "".concat(S, ".position"),
                BUFFERED: "".concat(S, ".buffered"),
                BUFFER_EMPTY: "".concat(S, ".bufferEmpty"),
                BUFFER_FULL: "".concat(S, ".bufferFull"),
                SEEK_COMPLETED: "".concat(S, ".seekCompleted"),
                STREAM_INFO: "".concat(S, ".streamInfo"),
                THROTTLE: "".concat(S, ".throttle"),
                RENDERER_CHANGE: "".concat(S, ".rendererChange"),
                CC_DETECTED: "".concat(S, ".ccDetected"),
                AUDIO_TRACKS: "".concat(S, ".audioTracks"),
                TEXT_TRACKS: "".concat(S, ".textTracks"),
                RESIZE: "".concat(S, ".resize"),
                UNRECOVERED_STALLED: "".concat(S, ".unrecoveredStalled"),
                PLAY_ERROR: "".concat(S, ".playError"),
                WEBKIT_SUPPORTS_FULLSCREEN: "".concat(S, ".webkitSupportsFullscreen")
            }
              , L = {
                ABORT: "abort",
                CAN_PLAY: "canplay",
                CAN_PLAY_THROUGH: "canplaythrough",
                DURATION_CHANGE: "durationchange",
                EMPTIED: "emptied",
                ENCRYPTED: "encrypted",
                ENDED: "ended",
                ERROR: "error",
                INTERRUPT_BEGIN: "interruptbegin",
                INTERRUPT_END: "interruptend",
                LOADED_DATA: "loadeddata",
                LOADED_METADATA: "loadedmetadata",
                LOAD_START: "loadstart",
                PAUSE: "pause",
                PLAY: "play",
                PLAYING: "playing",
                PROGRESS: "progress",
                RATE_CHANGE: "ratechange",
                SEEKED: "seeked",
                SEEKING: "seeking",
                STALLED: "stalled",
                SUSPEND: "suspend",
                TIME_UPDATE: "timeupdate",
                VOLUME_CHANGE: "volumechange",
                WAITING: "waiting",
                WEBKIT_ENTER_FULLSCREEN: "webkitenterfullscreen",
                WEBKIT_END_FULLSCREEN: "webkitendfullscreen"
            };
            function A(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var n = 0, r = new Array(t); n < t; n++)
                    r[n] = e[n];
                return r
            }
            var I = "videoTagProxyEvents"
              , _ = {
                BASE: I
            };
            Object.entries(L).forEach((function(e) {
                var t, n = (2,
                function(e) {
                    if (Array.isArray(e))
                        return e
                }(t = e) || function(e, t) {
                    var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                    if (null != n) {
                        var r, a, i = [], o = !0, s = !1;
                        try {
                            for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value),
                            2 !== i.length); o = !0)
                                ;
                        } catch (e) {
                            s = !0,
                            a = e
                        } finally {
                            try {
                                o || null == n.return || n.return()
                            } finally {
                                if (s)
                                    throw a
                            }
                        }
                        return i
                    }
                }(t) || function(e, t) {
                    if (e) {
                        if ("string" == typeof e)
                            return A(e, 2);
                        var n = Object.prototype.toString.call(e).slice(8, -1);
                        return "Object" === n && e.constructor && (n = e.constructor.name),
                        "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? A(e, 2) : void 0
                    }
                }(t) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()), r = n[0], a = n[1];
                _[r] = "".concat(I, ".").concat(a)
            }
            ));
            var P = _
              , D = "Buffer"
              , R = {
                BASE: D,
                STREAM_SWITCH: "".concat(D, ".streamSwitch"),
                BUFFER_CLEAR: "".concat(D, ".bufferClear"),
                BUFFER_UPDATING: "".concat(D, ".bufferUpdating"),
                BUFFER_UPDATED: "".concat(D, ".bufferUpdated"),
                APPEND: "".concat(D, ".append"),
                REMOVE: "".concat(D, ".remove"),
                PURGE: "".concat(D, ".purge")
            }
              , w = "BufferManager"
              , N = {
                BASE: w,
                BUFFER_ADDED: "".concat(w, ".bufferAdded"),
                BUFFER_REMOVED: "".concat(w, ".bufferRemoved"),
                APPEND_TO_BUFFER: "".concat(w, ".appendToBuffer")
            }
              , C = l.create("Facade")
              , U = o()
              , M = [p.CONTENT_MOVED, p.BROADCASTER_TIME_UPDATE, g.LOG, E.LOAD_INIT, E.LOAD_START, E.DESTROY, E.SEGMENT, E.EMPTY_SEGMENT, E.RAW, E.CONFIG, y.SEGMENT_STORAGE_CREATED, T.SEGMENT_CHANGE, O.POSITION, O.BUFFERED, O.STREAM_INFO, R.BUFFER_UPDATING, R.BUFFER_UPDATED, R.APPEND, N.APPEND_TO_BUFFER, P.PROGRESS, P.TIME_UPDATE]
              , F = {
                dispatch: function(e, t, n) {
                    0 !== t.indexOf("Flash:") && (t = "Js:".concat(t)),
                    -1 === M.indexOf(e) && C.debug("dispatch : ".concat(e, " from ").concat(t, " to ").concat(U.listenerCount(e), " listener(s)"), n);
                    var r = {
                        type: e,
                        originId: t,
                        data: n
                    };
                    U.dispatch(r.type, r);
                    var a = r.type.split(".");
                    for (a.push("*"); a.length > 1; )
                        a.splice(a.length - 2, 1),
                        U.dispatch(a.join("."), r)
                },
                addListener: function(e, t, n) {
                    void 0 !== e ? U.addListener(e, t, n) : C.warn("undefined event type listener adding is prohibited")
                },
                removeListener: function(e, t) {
                    U.removeListener(e, t)
                },
                validateNotificationData: function(e, t) {
                    for (var n = [], r = 0; t && r < t.length; r += 1)
                        void 0 === e.data[t[r]] && n.push(t[r]);
                    if (n.length)
                        throw C.error("missing data from notification (".concat(n.join(", "), ")"), e),
                        new Error("Missing data from notification (".concat(n.join(", "), ")"))
                },
                allListenerCount: function() {
                    return U.allListenerCount()
                },
                cleanup: function() {
                    U.cleanup()
                },
                MINIMUM_PRIORITY: U.MINIMUM_PRIORITY,
                MAXIMUM_PRIORITY: U.MAXIMUM_PRIORITY
            }
              , j = {
                MINIMUM_REMAINING_THRESHOLD: "minimumRemainingThreshold",
                MOVING_WINDOW_INTERVAL_DELAY: "movingWindowIntervalDelay",
                CONCURRENT_DOWNLOAD_COUNT: "concurrentDownloadCount",
                COLDSTART_THRESHOLD: "coldstartThreshold",
                BUFFER_COLLECT_DELAY_IN_MILLISEC: "bufferCollectTimeoutInMillisec",
                QUALITY_SWITCH_BUFFER_THRESHOLD: "qualitySwitchBufferThreshold",
                VIDEO_TAG_ATTRIBUTES: "videoTagAttributes",
                CHUNK_PRELOAD_COUNT: "chunkPreloadCount",
                MEMORY_LIMIT_IN_BYTES: "memoryLimitInBytes",
                FLASH_PROXY_URL_PLAIN: "flashProxyUrlPlain",
                FLASH_PROXY_URL_SECURE: "flashProxyUrlSecure",
                RENDER_TEXT_TRACKS_NATIVELY: "renderTextTracksNatively",
                HIDE_NATIVE_TRACKS: "hideNativeTracks"
            }
              , k = {};
            k[j.MINIMUM_REMAINING_THRESHOLD] = 5e3,
            k[j.MOVING_WINDOW_INTERVAL_DELAY] = 500,
            k[j.CONCURRENT_DOWNLOAD_COUNT] = 2,
            k[j.COLDSTART_THRESHOLD] = 1e3,
            k[j.BUFFER_COLLECT_DELAY_IN_MILLISEC] = 1500,
            k[j.QUALITY_SWITCH_BUFFER_THRESHOLD] = 2e3,
            k[j.VIDEO_TAG_ATTRIBUTES] = null,
            k[j.CHUNK_PRELOAD_COUNT] = 5,
            k[j.MEMORY_LIMIT_IN_BYTES] = 134217728,
            k[j.RENDER_TEXT_TRACKS_NATIVELY] = !0,
            k[j.HIDE_NATIVE_TRACKS] = !1;
            var G = k
              , B = "AtlasAPI"
              , V = {
                BASE: B,
                PAUSE: "".concat(B, ".pause"),
                RESUME: "".concat(B, ".resume"),
                PLAYBACK_SPEED: "".concat(B, ".playbackSpeed"),
                SEEK: "".concat(B, ".seek"),
                SET_OPTION: "".concat(B, ".setOption"),
                UPDATE_HASHES: "".concat(B, ".updateHashes"),
                VOLUME: "".concat(B, ".volume"),
                CAPTIONS: "".concat(B, ".captions"),
                CAPTION_POSITION: "".concat(B, ".captionPosition"),
                SELECT_AUDIO: "".concat(B, ".selectAudio"),
                SUSPEND: "".concat(B, ".suspend"),
                WAKE: "".concat(B, ".wake"),
                CLEANUP: "".concat(B, ".cleanup"),
                UPDATE_OPTIONS: "".concat(B, ".updateOptions"),
                SET_MAX_MEMORY_USAGE: "".concat(B, ".setMaxMemoryUsage")
            };
            function x(e, t) {
                var n = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(e);
                    t && (r = r.filter((function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }
                    ))),
                    n.push.apply(n, r)
                }
                return n
            }
            function H(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n,
                e
            }
            var Z, Y = "Options", K = l.create(Y);
            function W(e) {
                return Z ? Z[e] : void 0
            }
            function Q(e) {
                return "number" == typeof e && e > 0 && e < 1 / 0
            }
            var z = {
                init: function() {
                    Z || (Z = function(e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = null != arguments[t] ? arguments[t] : {};
                            t % 2 ? x(Object(n), !0).forEach((function(t) {
                                H(e, t, n[t])
                            }
                            )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : x(Object(n)).forEach((function(t) {
                                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                            }
                            ))
                        }
                        return e
                    }({}, G))
                },
                get: W,
                set: function(e, t, n) {
                    if (Z[e] === t)
                        return !1;
                    var r, a, i = !0;
                    switch (e) {
                    case j.MINIMUM_REMAINING_THRESHOLD:
                        i = function(e) {
                            return !!Q(e) && (Z[j.MINIMUM_REMAINING_THRESHOLD] = e,
                            !0)
                        }(t);
                        break;
                    case j.MOVING_WINDOW_INTERVAL_DELAY:
                        i = function(e, t) {
                            return !(t || !Q(e) || (Z[j.MOVING_WINDOW_INTERVAL_DELAY] = e,
                            0))
                        }(t, n);
                        break;
                    case j.CONCURRENT_DOWNLOAD_COUNT:
                        i = function(e) {
                            return !!Q(e) && (Z[j.CONCURRENT_DOWNLOAD_COUNT] = e,
                            !0)
                        }(t);
                        break;
                    case j.QUALITY_SWITCH_BUFFER_THRESHOLD:
                        i = function(e) {
                            return !(!Q(e) && 0 !== e || (Z[j.QUALITY_SWITCH_BUFFER_THRESHOLD] = e,
                            0))
                        }(t);
                        break;
                    case j.VIDEO_TAG_ATTRIBUTES:
                        i = function(e) {
                            return Z[j.VIDEO_TAG_ATTRIBUTES] = e,
                            !0
                        }(t);
                        break;
                    case j.CHUNK_PRELOAD_COUNT:
                        i = function(e) {
                            return !!Q(e) && (e > 20 && K.warn('"'.concat(j.CHUNK_PRELOAD_COUNT, '" is too high, ') + "the recommended maximum is ".concat(20)),
                            Z[j.CHUNK_PRELOAD_COUNT] = e,
                            !0)
                        }(t);
                        break;
                    case j.MEMORY_LIMIT_IN_BYTES:
                        i = function(e) {
                            if (!Q(e))
                                return !1;
                            var t = 5242880
                              , n = 1073741824;
                            return e < t ? K.warn('"'.concat(j.MEMORY_LIMIT_IN_BYTES, '" is too low, ') + "the recommended minimum is ".concat(t)) : e > n && K.warn('"'.concat(j.MEMORY_LIMIT_IN_BYTES, '" is too high, ') + "the recommended maximum is ".concat(n)),
                            Z[j.MEMORY_LIMIT_IN_BYTES] = e,
                            !0
                        }(t);
                        break;
                    default:
                        Z[e] = t
                    }
                    return i && (r = V.SET_OPTION,
                    a = {
                        name: e,
                        value: W(e),
                        externalCall: n
                    },
                    F.dispatch(r, Y, a)),
                    i
                },
                cleanup: function() {
                    Z = !1
                }
            }
              , X = {}
              , q = "MSEProxy"
              , $ = {
                BASE: q,
                SOURCE_OBJECT_URL: "".concat(q, ".sourceObjectURL"),
                SOURCE_OPEN: "".concat(q, ".sourceOpen"),
                SOURCE_CLOSE: "".concat(q, ".sourceClose"),
                SOURCE_BUFFER_ADDED: "".concat(q, ".sourceBufferAdded"),
                SOURCE_BUFFER_REMOVED: "".concat(q, ".sourceBufferRemoved")
            };
            function J(e, t) {
                for (var n = 0; t && n < t.length; n += 1)
                    if (t[n].start <= e && t[n].end >= e)
                        return t[n];
                return null
            }
            var ee = {
                buffered: function(e) {
                    for (var t = [], n = 0; n < e.length; n += 1)
                        t.push({
                            start: Math.floor(1e3 * e.start(n)),
                            end: Math.floor(1e3 * e.end(n))
                        });
                    return t
                },
                current: J,
                next: function(e, t) {
                    for (var n = 0; n < t.length && !(t[n].start > e); )
                        n += 1;
                    return n < t.length ? t[n] : null
                },
                remaining: function(e, t) {
                    var n = J(e, t);
                    return n ? n.end - e : 0
                },
                remainingTotal: function(e, t) {
                    for (var n = 0, r = 0; r < t.length; r += 1)
                        t[r].end > e && (n += t[r].end - Math.max(t[r].start, e));
                    return n
                },
                intersect: function(e, t) {
                    if (!e && !t)
                        return [];
                    if (e && !t)
                        return e;
                    for (var n = 0, r = 0, a = []; n < e.length && r < t.length; ) {
                        var i = Math.max(e[n].start, t[r].start)
                          , o = Math.min(e[n].end, t[r].end);
                        i < o && a.push({
                            start: i,
                            end: o
                        }),
                        e[n].end < t[r].end ? n += 1 : (t[r].end < e[n].end || (n += 1),
                        r += 1)
                    }
                    return a
                }
            }
              , te = function(e) {
                var t = [];
                function n() {
                    for (; e && t && t.length; )
                        e.removeEventListener(t[0].type, t[0].closure),
                        t.shift()
                }
                return {
                    addListener: function(n, r) {
                        t && (t.push({
                            type: n,
                            closure: r
                        }),
                        e && e.addEventListener(n, r))
                    },
                    removeListener: function(n, r) {
                        for (var a = 0; t && a < t.length; a += 1)
                            t[a].type === n && t[a].closure === r && (t.splice(a--, 1),
                            e && e.removeEventListener(n, r))
                    },
                    clearListeners: n,
                    setTarget: function(n) {
                        !function() {
                            for (var n = 0; e && t && n < t.length; n += 1)
                                e.removeEventListener(t[n].type, t[n].closure)
                        }(),
                        e = n,
                        function() {
                            for (var n = 0; e && t && n < t.length; n += 1)
                                e.addEventListener(t[n].type, t[n].closure)
                        }()
                    },
                    destroy: function() {
                        n(),
                        t = null,
                        e = null
                    }
                }
            }
              , ne = "bytes"
              , re = "remove"
              , ae = "purge";
            function ie(e, t) {
                F.dispatch(e, "ActionQueue", t)
            }
            var oe = "Component"
              , se = {
                BASE: oe,
                CREATE: "".concat(oe, ".create"),
                DESTROY: "".concat(oe, ".destroy")
            };
            function ce(e) {
                return ce = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }
                ,
                ce(e)
            }
            var ue = "Shockwave Flash"
              , de = "application/x-shockwave-flash"
              , le = navigator
              , fe = le.mimeTypes
              , pe = le.userAgent.toLowerCase()
              , me = le.platform.toLowerCase();
            function ge() {
                var e = /android/i.test(pe);
                return e && (e = pe.match(/android (\d+)(?:\.(\d+))?(?:\.(\d+))?/i)).shift(),
                e
            }
            function ve() {
                var e = /iphone|ipad|ipod/.test(pe);
                return e && (e = pe.match(/os (\d*)?_?(\d*)?_?(\d*)/i)).shift(),
                e
            }
            function Ee() {
                return /BB10(.*)Mobile/i.test(pe)
            }
            function he() {
                return pe.indexOf("playstation") > -1
            }
            function ye() {
                var e = /chrome/i.test(pe);
                return e && !be() && (e = pe.match(/chrome\/(\d*)\.(\d*)?\.?(\d*)/i)).shift(),
                e
            }
            function be() {
                var e = !1;
                return void 0 !== window.opera && "[object Opera]" === window.opera.toString() ? e = window.opera.version().split(".") : navigator && (e = pe.match(/opr\/(\d+)\.(\d+)\.(\d+)\.(\d+)/i)),
                e
            }
            function Te() {
                var e, t;
                if (void 0 === window.ActiveXObject)
                    return !1;
                try {
                    if (e = new window.ActiveXObject("ShockwaveFlash.ShockwaveFlash"))
                        return !(t = e.GetVariable("$version")) || (t = t.split(" ")[1].split(","),
                        [parseInt(t[0], 10), parseInt(t[1], 10), parseInt(t[2], 10)])
                } catch (e) {}
                return !1
            }
            var Se, Oe, Le, Ae, Ie = {
                win: /win/.test(me || pe),
                mac: /mac/.test(me || pe),
                desktop: !(ge() || ve() || Ee() || he()),
                ios: ve(),
                android: ge(),
                blackberry: Ee(),
                playstation: he(),
                chrome: ye(),
                opera: be(),
                ff: /firefox/.test(pe),
                safari: /safari/.test(pe) && !ye() && !be(),
                ie: (Ae = document.getElementsByTagName("html")[0].className.indexOf("ie ") > -1,
                Ae || (Ae = pe.indexOf("trident") > -1),
                Ae),
                ssl: /https/.test(window.location.protocol),
                swf: (Le = [0, 0, 0],
                void 0 !== le.plugins && "object" === ce(le.plugins[ue]) ? !(Oe = le.plugins[ue].description) || void 0 !== fe && fe[de] && !fe[de].enabledPlugin || (Oe = Oe.replace(/^.*\s+(\S+\s+\S+$)/, "$1"),
                Le[0] = +Oe.replace(/^(.*)\..*$/, "$1"),
                Le[1] = +Oe.replace(/^.*\.(.*)\s.*$/, "$1"),
                Le[2] = /[a-zA-Z]/.test(Oe) ? +Oe.replace(/^.*[a-zA-Z]+(.*)$/, "$1") : 0) : Te() && (Le = Te()),
                "000" === Le.join("") && (Le = !1),
                Le),
                flashPPAPI: (Se = fe && fe[de] && fe[de].enabledPlugin && fe[de].enabledPlugin.filename || "",
                "pepflashplayer.dll" === (Se = Se.toLowerCase()) || "libpepflashplayer.so" === Se || "pepperflashplayer.plugin" === Se || "chrome.plugin" === Se.slice(-13)),
                flashActiveX: Te(),
                nav: {
                    appCodeName: le.appCodeName,
                    appName: le.appName,
                    appVersion: le.appVersion,
                    cpuClass: le.cpuClass,
                    platform: le.platform,
                    product: le.product,
                    userAgent: le.userAgent,
                    vendor: le.vendor,
                    vendorSub: le.vendorSub
                }
            }, _e = 4294967295, Pe = "4.0.19", De = 250;
            function Re(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var n = 0, r = new Array(t); n < t; n++)
                    r[n] = e[n];
                return r
            }
            var we = "MSEProxy"
              , Ne = l.create(we)
              , Ce = "sourceopen"
              , Ue = "sourceclose"
              , Me = window.MediaSource || window.WebKitMediaSource;
            function Fe(e, t) {
                F.dispatch(e, we, t)
            }
            function je() {
                return !!Me
            }
            Ne.info("".concat(Ie.nav.appName, " ").concat(Ie.nav.appVersion));
            var ke = function(e) {
                var t, n, r = {};
                function a() {
                    F.removeListener(V.SUSPEND, a),
                    F.addListener(V.WAKE, i),
                    u()
                }
                function i() {
                    F.removeListener(V.WAKE, i),
                    F.addListener(V.SUSPEND, a),
                    c()
                }
                function o(e) {
                    F.validateNotificationData(e, ["bufferId", "contentType"]);
                    var t = e.data.contentType.indexOf("vtt") > -1;
                    r[e.data.bufferId] || t ? t || Ne.warn("there is already a sourceBuffer for ".concat(e.data.bufferId)) : (r[e.data.bufferId] = function(e, t) {
                        var n = l.create("ActionQueue.".concat(t))
                          , r = te(e)
                          , a = []
                          , i = !1;
                        function o() {
                            F.removeListener(O.ERROR, g),
                            F.removeListener(R.APPEND, c),
                            F.removeListener(R.REMOVE, u),
                            F.removeListener(R.PURGE, d),
                            F.removeListener($.SOURCE_CLOSE, o),
                            F.removeListener(N.BUFFER_REMOVED, s),
                            r.destroy(),
                            a = null
                        }
                        function s(e) {
                            F.validateNotificationData(e, ["bufferId"]),
                            e.data.bufferId === t && o()
                        }
                        function c(e) {
                            F.validateNotificationData(e, ["streamId", "bufferId", "start", "end", "duration", "bytes"]),
                            e.data.bufferId === t && f({
                                streamId: e.data.streamId,
                                type: ne,
                                start: e.data.start,
                                end: e.data.end,
                                duration: e.data.duration,
                                bytes: e.data.bytes
                            })
                        }
                        function u(e) {
                            F.validateNotificationData(e, ["streamId", "bufferId", "start", "end"]),
                            e.data.bufferId === t && f({
                                streamId: e.data.streamId,
                                type: re,
                                start: e.data.start,
                                end: e.data.end
                            })
                        }
                        function d(e) {
                            F.validateNotificationData(e, ["streamId", "bufferId"]),
                            e.data.bufferId === t && f({
                                streamId: e.data.streamId,
                                type: ae
                            })
                        }
                        function f(e) {
                            i ? (e.type === ae && (a = []),
                            a.push(e)) : p(e)
                        }
                        function p(r) {
                            var o = "execute action";
                            switch (r.type) {
                            case ne:
                                n.debug(o, {
                                    streamId: r.streamId,
                                    type: r.type,
                                    start: r.start,
                                    end: r.end,
                                    duration: r.duration,
                                    length: r.bytes.length
                                }),
                                e.appendBuffer(r.bytes);
                                break;
                            case re:
                                n.debug(o, {
                                    streamId: r.streamId,
                                    type: r.type,
                                    start: r.start,
                                    end: r.end
                                }),
                                e.remove(r.start / 1e3, r.end / 1e3);
                                break;
                            case ae:
                                if (n.debug(o, {
                                    streamId: r.streamId,
                                    type: r.type,
                                    bufferedLength: e.buffered.length,
                                    actionsLength: a.length
                                }),
                                !e.buffered.length)
                                    return void m();
                                e.remove(e.buffered.start(0), e.buffered.end(e.buffered.length - 1))
                            }
                            i || (i = !0,
                            ie(R.BUFFER_UPDATING, {
                                bufferId: t
                            }))
                        }
                        function m() {
                            a.length ? p(a.shift()) : (i = !1,
                            ie(R.BUFFER_UPDATED, {
                                bufferId: t,
                                ranges: ee.buffered(e.buffered)
                            }))
                        }
                        function g() {
                            a = [],
                            i = !1,
                            n.error("onVideoTagError")
                        }
                        return F.addListener(O.ERROR, g),
                        F.addListener(R.APPEND, c),
                        F.addListener(R.REMOVE, u),
                        F.addListener(R.PURGE, d),
                        F.addListener($.SOURCE_CLOSE, o),
                        F.addListener(N.BUFFER_REMOVED, s),
                        r.addListener("updateend", m),
                        r.addListener("error", (function() {
                            a = [],
                            n.error("onError")
                        }
                        )),
                        r.addListener("abort", (function() {
                            n.warn("abort")
                        }
                        )),
                        {
                            bufferId: t,
                            sourceBuffer: e
                        }
                    }(n.addSourceBuffer(e.data.contentType), e.data.bufferId),
                    Ne.debug("created sourceBuffer for ".concat(e.data.bufferId)),
                    Fe($.SOURCE_BUFFER_ADDED, {
                        bufferId: e.data.bufferId
                    }))
                }
                function s(e) {
                    if (F.validateNotificationData(e, ["bufferId"]),
                    r[e.data.bufferId]) {
                        try {
                            n.removeSourceBuffer(r[e.data.bufferId].sourceBuffer)
                        } catch (e) {}
                        delete r[e.data.bufferId],
                        Fe($.SOURCE_BUFFER_REMOVED, {
                            bufferId: e.data.bufferId
                        })
                    } else
                        Ne.warn("there is no sourceBuffer for ".concat(e.data.bufferId))
                }
                function c() {
                    n = new Me,
                    t.setTarget(n),
                    Fe($.SOURCE_OBJECT_URL, {
                        source: URL.createObjectURL(n)
                    })
                }
                function u() {
                    n = null,
                    r = {},
                    Fe($.SOURCE_CLOSE)
                }
                function d(t) {
                    switch (Ne.debug("onMediaSourceEvent", t),
                    t.type) {
                    case Ce:
                        n.duration = e && e < 1 / 0 ? e / 1e3 : _e,
                        Fe($.SOURCE_OPEN);
                        break;
                    case Ue:
                        Object.entries(r).forEach((function(e) {
                            var t, n = (2,
                            function(e) {
                                if (Array.isArray(e))
                                    return e
                            }(t = e) || function(e, t) {
                                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                                if (null != n) {
                                    var r, a, i = [], o = !0, s = !1;
                                    try {
                                        for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value),
                                        2 !== i.length); o = !0)
                                            ;
                                    } catch (e) {
                                        s = !0,
                                        a = e
                                    } finally {
                                        try {
                                            o || null == n.return || n.return()
                                        } finally {
                                            if (s)
                                                throw a
                                        }
                                    }
                                    return i
                                }
                            }(t) || function(e, t) {
                                if (e) {
                                    if ("string" == typeof e)
                                        return Re(e, 2);
                                    var n = Object.prototype.toString.call(e).slice(8, -1);
                                    return "Object" === n && e.constructor && (n = e.constructor.name),
                                    "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Re(e, 2) : void 0
                                }
                            }(t) || function() {
                                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                            }()), a = n[0], i = n[1].bufferId;
                            Fe($.SOURCE_BUFFER_REMOVED, {
                                bufferId: i
                            }),
                            delete r[a]
                        }
                        )),
                        Fe($.SOURCE_CLOSE)
                    }
                }
                return Ne.debug("create"),
                (t = te()).addListener(Ce, d),
                t.addListener("sourceended", d),
                t.addListener(Ue, d),
                c(),
                F.addListener(N.BUFFER_ADDED, o),
                F.addListener(N.BUFFER_REMOVED, s),
                F.addListener(V.CLEANUP, (function e() {
                    F.removeListener(N.BUFFER_ADDED, o),
                    F.removeListener(N.BUFFER_REMOVED, s),
                    F.removeListener(V.CLEANUP, e),
                    F.removeListener(V.SUSPEND, a),
                    F.removeListener(V.WAKE, i),
                    u(),
                    t.destroy(),
                    t = null,
                    Fe(se.DESTROY)
                }
                )),
                F.addListener(V.SUSPEND, a),
                Fe(se.CREATE),
                {
                    name: we
                }
            }
              , Ge = je()
              , Be = function(e) {
                return !!je() && Me.isTypeSupported(e)
            }
              , Ve = function() {
                var e, t, n, r, a, i, o = "undefined", s = "object", c = "Shockwave Flash", u = "application/x-shockwave-flash", d = "SWFObjectExprInst", l = "onreadystatechange", f = window, p = document, m = navigator, g = !1, v = [], E = [], h = [], y = [], b = !1, T = !1, S = !0, O = !1, L = function() {
                    var e = typeof p.getElementById !== o && typeof p.getElementsByTagName !== o && typeof p.createElement !== o
                      , t = m.userAgent.toLowerCase()
                      , n = m.platform.toLowerCase()
                      , r = /win/.test(n || t)
                      , a = /mac/.test(n || t)
                      , i = !!/webkit/.test(t) && parseFloat(t.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1"))
                      , d = "Microsoft Internet Explorer" === m.appName
                      , l = [0, 0, 0]
                      , v = null;
                    if (typeof m.plugins !== o && typeof m.plugins[c] === s)
                        (v = m.plugins[c].description) && typeof m.mimeTypes !== o && m.mimeTypes[u] && m.mimeTypes[u].enabledPlugin && (g = !0,
                        d = !1,
                        v = v.replace(/^.*\s+(\S+\s+\S+$)/, "$1"),
                        l[0] = B(v.replace(/^(.*)\..*$/, "$1")),
                        l[1] = B(v.replace(/^.*\.(.*)\s.*$/, "$1")),
                        l[2] = /[a-zA-Z]/.test(v) ? B(v.replace(/^.*[a-zA-Z]+(.*)$/, "$1")) : 0);
                    else if (typeof f.ActiveXObject !== o)
                        try {
                            var E = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
                            E && (v = E.GetVariable("$version")) && (d = !0,
                            l = [B((v = v.split(" ")[1].split(","))[0]), B(v[1]), B(v[2])])
                        } catch (e) {}
                    return {
                        w3: e,
                        pv: l,
                        wk: i,
                        ie: d,
                        win: r,
                        mac: a
                    }
                }();
                function A() {
                    if (!b && document.getElementsByTagName("body")[0]) {
                        try {
                            var e, t = G("span");
                            t.style.display = "none",
                            (e = p.getElementsByTagName("body")[0].appendChild(t)).parentNode.removeChild(e),
                            e = null,
                            t = null
                        } catch (e) {
                            return
                        }
                        b = !0;
                        for (var n = v.length, r = 0; r < n; r++)
                            v[r]()
                    }
                }
                function I(e) {
                    b ? e() : v[v.length] = e
                }
                function _() {
                    var e = E.length;
                    if (e > 0)
                        for (var t = 0; t < e; t++) {
                            var n = E[t].id
                              , r = E[t].callbackFn
                              , a = {
                                success: !1,
                                id: n
                            };
                            if (L.pv[0] > 0) {
                                var i = k(n);
                                if (i)
                                    if (!V(E[t].swfVersion) || L.wk && L.wk < 312)
                                        if (E[t].expressInstall && D()) {
                                            var s = {};
                                            s.data = E[t].expressInstall,
                                            s.width = i.getAttribute("width") || "0",
                                            s.height = i.getAttribute("height") || "0",
                                            i.getAttribute("class") && (s.styleclass = i.getAttribute("class")),
                                            i.getAttribute("align") && (s.align = i.getAttribute("align"));
                                            for (var c = {}, u = i.getElementsByTagName("param"), d = u.length, l = 0; l < d; l++)
                                                "movie" !== u[l].getAttribute("name").toLowerCase() && (c[u[l].getAttribute("name")] = u[l].getAttribute("value"));
                                            R(s, c, n, r)
                                        } else
                                            w(i),
                                            r && r(a);
                                    else
                                        H(n, !0),
                                        r && (a.success = !0,
                                        a.ref = P(n),
                                        a.id = n,
                                        r(a))
                            } else if (H(n, !0),
                            r) {
                                var f = P(n);
                                f && typeof f.SetVariable !== o && (a.success = !0,
                                a.ref = f,
                                a.id = f.id),
                                r(a)
                            }
                        }
                }
                function P(e) {
                    var t = null
                      , n = k(e);
                    return n && "OBJECT" === n.nodeName.toUpperCase() && (t = typeof n.SetVariable !== o ? n : n.getElementsByTagName(s)[0] || n),
                    t
                }
                function D() {
                    return !T && V("6.0.65") && (L.win || L.mac) && !(L.wk && L.wk < 312)
                }
                function R(a, i, s, c) {
                    var u = k(s);
                    if (s = j(s),
                    T = !0,
                    n = c || null,
                    r = {
                        success: !1,
                        id: s
                    },
                    u) {
                        "OBJECT" === u.nodeName.toUpperCase() ? (e = N(u),
                        t = null) : (e = u,
                        t = s),
                        a.id = d,
                        (typeof a.width === o || !/%$/.test(a.width) && B(a.width) < 310) && (a.width = "310"),
                        (typeof a.height === o || !/%$/.test(a.height) && B(a.height) < 137) && (a.height = "137");
                        var l = L.ie ? "ActiveX" : "PlugIn"
                          , m = "MMredirectURL=" + encodeURIComponent(f.location.toString().replace(/&/g, "%26")) + "&MMplayerType=" + l + "&MMdoctitle=" + encodeURIComponent(p.title.slice(0, 47) + " - Flash Player Installation");
                        if (typeof i.flashvars !== o ? i.flashvars += "&" + m : i.flashvars = m,
                        L.ie && 4 != u.readyState) {
                            var g = G("div");
                            s += "SWFObjectNew",
                            g.setAttribute("id", s),
                            u.parentNode.insertBefore(g, u),
                            u.style.display = "none",
                            M(u)
                        }
                        C(a, i, s)
                    }
                }
                function w(e) {
                    if (L.ie && 4 != e.readyState) {
                        e.style.display = "none";
                        var t = G("div");
                        e.parentNode.insertBefore(t, e),
                        t.parentNode.replaceChild(N(e), t),
                        M(e)
                    } else
                        e.parentNode.replaceChild(N(e), e)
                }
                function N(e) {
                    var t = G("div");
                    if (L.win && L.ie)
                        t.innerHTML = e.innerHTML;
                    else {
                        var n = e.getElementsByTagName(s)[0];
                        if (n) {
                            var r = n.childNodes;
                            if (r)
                                for (var a = r.length, i = 0; i < a; i++)
                                    1 == r[i].nodeType && "PARAM" === r[i].nodeName || 8 == r[i].nodeType || t.appendChild(r[i].cloneNode(!0))
                        }
                    }
                    return t
                }
                function C(e, t, n) {
                    var r, a, i, c, d = k(n);
                    if (n = j(n),
                    L.wk && L.wk < 312)
                        return r;
                    if (d) {
                        var l, f, p, m = L.ie ? G("div") : G(s);
                        for (p in typeof e.id === o && (e.id = n),
                        t)
                            t.hasOwnProperty(p) && "movie" !== p.toLowerCase() && U(m, p, t[p]);
                        for (l in L.ie && (a = e.data,
                        i = m.innerHTML,
                        (c = G("div")).innerHTML = "<object classid='clsid:D27CDB6E-AE6D-11cf-96B8-444553540000'><param name='movie' value='" + a + "'>" + i + "</object>",
                        m = c.firstChild),
                        e)
                            e.hasOwnProperty(l) && ("styleclass" === (f = l.toLowerCase()) ? m.setAttribute("class", e[l]) : "classid" !== f && "data" !== f && m.setAttribute(l, e[l]));
                        L.ie ? h[h.length] = e.id : (m.setAttribute("type", u),
                        m.setAttribute("data", e.data)),
                        d.parentNode.replaceChild(m, d),
                        r = m
                    }
                    return r
                }
                function U(e, t, n) {
                    var r = G("param");
                    r.setAttribute("name", t),
                    r.setAttribute("value", n),
                    e.appendChild(r)
                }
                function M(e) {
                    var t = k(e);
                    t && "OBJECT" === t.nodeName.toUpperCase() && (L.ie ? (t.style.display = "none",
                    function e() {
                        if (4 == t.readyState) {
                            for (var n in t)
                                "function" == typeof t[n] && (t[n] = null);
                            t.parentNode.removeChild(t)
                        } else
                            setTimeout(e, 10)
                    }()) : t.parentNode.removeChild(t))
                }
                function F(e) {
                    return e && e.nodeType && 1 === e.nodeType
                }
                function j(e) {
                    return F(e) ? e.id : e
                }
                function k(e) {
                    if (F(e))
                        return e;
                    var t = null;
                    try {
                        t = p.getElementById(e)
                    } catch (e) {}
                    return t
                }
                function G(e) {
                    return p.createElement(e)
                }
                function B(e) {
                    return parseInt(e, 10)
                }
                function V(e) {
                    e += "";
                    var t = L.pv
                      , n = e.split(".");
                    return n[0] = B(n[0]),
                    n[1] = B(n[1]) || 0,
                    n[2] = B(n[2]) || 0,
                    t[0] > n[0] || t[0] == n[0] && t[1] > n[1] || t[0] == n[0] && t[1] == n[1] && t[2] >= n[2]
                }
                function x(e, t, n, r) {
                    var s = p.getElementsByTagName("head")[0];
                    if (s) {
                        var c = "string" == typeof n ? n : "screen";
                        if (r && (a = null,
                        i = null),
                        !a || i != c) {
                            var u = G("style");
                            u.setAttribute("type", "text/css"),
                            u.setAttribute("media", c),
                            a = s.appendChild(u),
                            L.ie && typeof p.styleSheets !== o && p.styleSheets.length > 0 && (a = p.styleSheets[p.styleSheets.length - 1]),
                            i = c
                        }
                        a && (typeof a.addRule !== o ? a.addRule(e, t) : typeof p.createTextNode !== o && a.appendChild(p.createTextNode(e + " {" + t + "}")))
                    }
                }
                function H(e, t) {
                    if (S) {
                        var n = t ? "visible" : "hidden"
                          , r = k(e);
                        b && r ? r.style.visibility = n : "string" == typeof e && x("#" + e, "visibility:" + n)
                    }
                }
                function Z(e) {
                    return null !== /[\\\"<>\.;]/.exec(e) && typeof encodeURIComponent !== o ? encodeURIComponent(e) : e
                }
                return L.w3 && ((typeof p.readyState !== o && ("complete" === p.readyState || "interactive" === p.readyState) || typeof p.readyState === o && (p.getElementsByTagName("body")[0] || p.body)) && A(),
                b || (typeof p.addEventListener !== o && p.addEventListener("DOMContentLoaded", A, !1),
                L.ie && (p.attachEvent(l, (function e() {
                    "complete" === p.readyState && (p.detachEvent(l, e),
                    A())
                }
                )),
                f == top && function e() {
                    if (!b) {
                        try {
                            p.documentElement.doScroll("left")
                        } catch (t) {
                            return void setTimeout(e, 0)
                        }
                        A()
                    }
                }()),
                L.wk && function e() {
                    b || (/loaded|complete/.test(p.readyState) ? A() : setTimeout(e, 0))
                }())),
                v[0] = function() {
                    g ? function() {
                        var e = p.getElementsByTagName("body")[0]
                          , t = G(s);
                        t.setAttribute("style", "visibility: hidden;"),
                        t.setAttribute("type", u);
                        var n = e.appendChild(t);
                        if (n) {
                            var r = 0;
                            !function a() {
                                if (typeof n.GetVariable !== o)
                                    try {
                                        var i = n.GetVariable("$version");
                                        i && (i = i.split(" ")[1].split(","),
                                        L.pv = [B(i[0]), B(i[1]), B(i[2])])
                                    } catch (e) {
                                        L.pv = [8, 0, 0]
                                    }
                                else if (r < 10)
                                    return r++,
                                    void setTimeout(a, 10);
                                e.removeChild(t),
                                n = null,
                                _()
                            }()
                        } else
                            _()
                    }() : _()
                }
                ,
                L.ie && window.attachEvent("onunload", (function() {
                    for (var e = y.length, t = 0; t < e; t++)
                        y[t][0].detachEvent(y[t][1], y[t][2]);
                    for (var n = h.length, r = 0; r < n; r++)
                        M(h[r]);
                    for (var a in L)
                        L[a] = null;
                    for (var i in L = null,
                    Ve)
                        Ve[i] = null;
                    Ve = null
                }
                )),
                {
                    registerObject: function(e, t, n, r) {
                        if (L.w3 && e && t) {
                            var a = {};
                            a.id = e,
                            a.swfVersion = t,
                            a.expressInstall = n,
                            a.callbackFn = r,
                            E[E.length] = a,
                            H(e, !1)
                        } else
                            r && r({
                                success: !1,
                                id: e
                            })
                    },
                    getObjectById: function(e) {
                        if (L.w3)
                            return P(e)
                    },
                    embedSWF: function(e, t, n, r, a, i, c, u, d, l) {
                        var f = j(t)
                          , p = {
                            success: !1,
                            id: f
                        };
                        L.w3 && !(L.wk && L.wk < 312) && e && t && n && r && a ? (H(f, !1),
                        I((function() {
                            n += "",
                            r += "";
                            var m = {};
                            if (d && typeof d === s)
                                for (var g in d)
                                    m[g] = d[g];
                            m.data = e,
                            m.width = n,
                            m.height = r;
                            var v = {};
                            if (u && typeof u === s)
                                for (var E in u)
                                    v[E] = u[E];
                            if (c && typeof c === s)
                                for (var h in c)
                                    if (c.hasOwnProperty(h)) {
                                        var y = O ? encodeURIComponent(h) : h
                                          , b = O ? encodeURIComponent(c[h]) : c[h];
                                        typeof v.flashvars !== o ? v.flashvars += "&" + y + "=" + b : v.flashvars = y + "=" + b
                                    }
                            if (V(a)) {
                                var T = C(m, v, t);
                                m.id == f && H(f, !0),
                                p.success = !0,
                                p.ref = T,
                                p.id = T.id
                            } else {
                                if (i && D())
                                    return m.data = i,
                                    void R(m, v, t, l);
                                H(f, !0)
                            }
                            l && l(p)
                        }
                        ))) : l && l(p)
                    },
                    switchOffAutoHideShow: function() {
                        S = !1
                    },
                    enableUriEncoding: function(e) {
                        O = typeof e === o || e
                    },
                    ua: L,
                    getFlashPlayerVersion: function() {
                        return {
                            major: L.pv[0],
                            minor: L.pv[1],
                            release: L.pv[2]
                        }
                    },
                    hasFlashPlayerVersion: V,
                    createSWF: function(e, t, n) {
                        return L.w3 ? C(e, t, n) : void 0
                    },
                    showExpressInstall: function(e, t, n, r) {
                        L.w3 && D() && R(e, t, n, r)
                    },
                    removeSWF: function(e) {
                        L.w3 && M(e)
                    },
                    createCSS: function(e, t, n, r) {
                        L.w3 && x(e, t, n, r)
                    },
                    addDomLoadEvent: I,
                    addLoadEvent: function(e) {
                        if (typeof f.addEventListener !== o)
                            f.addEventListener("load", e, !1);
                        else if (typeof p.addEventListener !== o)
                            p.addEventListener("load", e, !1);
                        else if (typeof f.attachEvent !== o)
                            !function(e, t, n) {
                                e.attachEvent(t, n),
                                y[y.length] = [e, t, n]
                            }(f, "onload", e);
                        else if ("function" == typeof f.onload) {
                            var t = f.onload;
                            f.onload = function() {
                                t(),
                                e()
                            }
                        } else
                            f.onload = e
                    },
                    getQueryParamValue: function(e) {
                        var t = p.location.search || p.location.hash;
                        if (t) {
                            if (/\?/.test(t) && (t = t.split("?")[1]),
                            !e)
                                return Z(t);
                            for (var n = t.split("&"), r = 0; r < n.length; r++)
                                if (n[r].substring(0, n[r].indexOf("=")) == e)
                                    return Z(n[r].substring(n[r].indexOf("=") + 1))
                        }
                        return ""
                    },
                    expressInstallCallback: function() {
                        if (T) {
                            var a = k(d);
                            a && e && (a.parentNode.replaceChild(e, a),
                            t && (H(t, !0),
                            L.ie && (e.style.display = "block")),
                            n && n(r)),
                            T = !1
                        }
                    },
                    version: "2.3"
                }
            }()
              , xe = Ve
              , He = function(e, t, n, r) {
                var a, i = "", o = "";
                if ((void 0 === t || t) && (i += "abcdefghijklmnopqrstuvwxyz"),
                n && (i += "ABCDEFGHIJKLMNOPQRSTUVWXYZ"),
                r && (i += "0123456789"),
                i.length)
                    for (a = 0; a < e; a += 1)
                        o += i.substr(Math.floor(i.length * Math.random()), 1);
                return o
            }
              , Ze = function(e, t) {
                for (var n = "0"; n.length < t; )
                    n += n;
                return (n + e).substr(-t, t)
            }
              , Ye = "FlashProxy"
              , Ke = "window.ustream."
              , We = l.create(Ye);
            function Qe(e, t) {
                F.dispatch(e, Ye, t)
            }
            We.info("FlashPlayer version", {
                version: Ie.swf
            });
            var ze = Ie.swf[0] >= 11 && !Ie.safari
              , Xe = "videoTagHandler"
              , qe = {
                BASE: Xe,
                PAUSE: "".concat(Xe, ".pause"),
                PLAY: "".concat(Xe, ".play"),
                SEEK: "".concat(Xe, ".seek")
            }
              , $e = "coldStart";
            function Je(e, t) {
                F.dispatch(e, $e, t)
            }
            var et = function() {
                var e = l.create($e)
                  , t = !1;
                function n() {
                    F.addListener(P.LOADED_METADATA, a),
                    F.addListener(P.CAN_PLAY_THROUGH, d),
                    F.addListener(P.DURATION_CHANGE, c)
                }
                function r() {
                    F.removeListener(P.LOADED_METADATA, a),
                    F.removeListener(P.CAN_PLAY_THROUGH, d),
                    F.removeListener(P.DURATION_CHANGE, c),
                    F.removeListener(P.PROGRESS, u)
                }
                function a() {
                    F.removeListener(P.LOADED_METADATA, a),
                    Ie.ios && Je(qe.PLAY)
                }
                function i() {
                    F.removeListener(P.TIME_UPDATE, i),
                    t = !0
                }
                function o() {
                    t || (F.removeListener(P.TIME_UPDATE, i),
                    r()),
                    F.removeListener(V.SUSPEND, o),
                    F.addListener(V.WAKE, s)
                }
                function s() {
                    F.removeListener(V.WAKE, s),
                    F.addListener(V.SUSPEND, o),
                    t || (F.addListener(P.TIME_UPDATE, i),
                    n())
                }
                function c(t) {
                    e.debug("onDurationChange"),
                    F.removeListener(P.DURATION_CHANGE, c),
                    f(t) || F.addListener(P.PROGRESS, u)
                }
                function u(t) {
                    e.debug("onProgress"),
                    f(t)
                }
                function d() {
                    r(),
                    Je(qe.PLAY)
                }
                function f(t) {
                    F.validateNotificationData(t, ["buffered"]);
                    var n = ee.remainingTotal(0, t.data.buffered, !0)
                      , r = z.get(j.COLDSTART_THRESHOLD);
                    return e.debug("checkBufferOnColdStart", {
                        buffered: t.data.buffered,
                        remaining: n
                    }),
                    n > r && n < 1 / 0 && (e.info("buffer full, starting playback"),
                    d(),
                    !0)
                }
                return F.addListener(V.CLEANUP, (function e() {
                    F.removeListener(V.CLEANUP, e),
                    F.removeListener(V.SUSPEND, o),
                    F.removeListener(V.WAKE, s),
                    F.removeListener(P.TIME_UPDATE, i),
                    r(),
                    t = !1,
                    Je(se.DESTROY)
                }
                )),
                F.addListener(V.SUSPEND, o),
                F.addListener(P.TIME_UPDATE, i),
                n(),
                {
                    name: $e
                }
            }
              , tt = "buffercollector";
            function nt(e, t) {
                F.dispatch(e, tt, t)
            }
            var rt = function() {
                var e, t = l.create(tt), n = !1;
                function r() {
                    n = !0
                }
                function a() {
                    n = !1
                }
                function i() {
                    n && (t.debug("buffercollector - bufferempty stop stream (PAUSE)"),
                    nt(qe.PAUSE),
                    F.removeListener(P.PROGRESS, s),
                    F.removeListener(P.TIME_UPDATE, s),
                    F.addListener(P.PROGRESS, s),
                    F.addListener(P.TIME_UPDATE, s))
                }
                function o() {
                    t.debug("buffercollector - delay is over start stream (PLAY)"),
                    nt(qe.PLAY)
                }
                function s(n) {
                    F.validateNotificationData(n, ["position", "buffered"]);
                    var r = z.get(j.BUFFER_COLLECT_DELAY_IN_MILLISEC)
                      , a = ee.remainingTotal(n.data.position, n.data.buffered, !0);
                    a > 0 && a < 1 / 0 && (t.debug("buffercollector - buffer collected, start delay"),
                    e = setTimeout(o, r),
                    F.removeListener(P.TIME_UPDATE, s),
                    F.removeListener(P.PROGRESS, s))
                }
                return F.addListener(V.CLEANUP, (function t() {
                    F.removeListener(V.CLEANUP, t),
                    F.removeListener(P.WAITING, r),
                    F.removeListener(P.PLAYING, a),
                    F.removeListener(O.BUFFER_EMPTY, i),
                    F.removeListener(P.PROGRESS, s),
                    e = clearTimeout(e),
                    nt(se.DESTROY)
                }
                )),
                F.addListener(P.WAITING, r),
                F.addListener(P.PLAYING, a),
                F.addListener(O.BUFFER_EMPTY, i),
                {
                    name: tt
                }
            }
              , at = "mseBuffered";
            function it(e, t) {
                F.dispatch(e, at, t)
            }
            var ot = "GapRecovery"
              , st = {
                BASE: ot,
                GAP_RECOVERING: "".concat(ot, ".gapRecovering")
            }
              , ct = Ie.chrome || Ie.safari
              , ut = Ie.safari
              , dt = "mseGapRecovery"
              , lt = "gap detected";
            function ft(e, t) {
                F.dispatch(e, dt, t)
            }
            var pt, mt, gt = function() {
                var e = l.create("gapRecovery")
                  , t = null
                  , n = null
                  , r = null
                  , a = 0;
                function i() {
                    F.addListener(P.PROGRESS, s),
                    F.addListener(P.STALLED, s)
                }
                function o() {
                    F.removeListener(P.PROGRESS, s),
                    F.removeListener(P.STALLED, s),
                    F.removeListener(P.WAITING, u)
                }
                function s(i) {
                    F.validateNotificationData(i, ["position", "buffered"]),
                    a = i.data.position;
                    var o, s = ee.current(a, i.data.buffered), d = ee.next(a, i.data.buffered);
                    if (r = d ? d.start : null,
                    !s && d)
                        e.warn(lt),
                        u();
                    else if (s && d && n !== s.end) {
                        var l = (n = s.end) - a;
                        e.warn(lt, {
                            playPosition: a,
                            gapPosition: n,
                            remainingUntilGap: l
                        })
                    } else
                        null === n || d || (n = null,
                        e.warn("gap cleared"));
                    ct && (null !== n && null !== r ? (o = a,
                    null === t && (t = setTimeout(u, Math.max(0, n - o - 66)))) : c()),
                    F.removeListener(P.WAITING, u),
                    null !== n && F.addListener(P.WAITING, u)
                }
                function c() {
                    null !== t && (clearInterval(t),
                    t = null)
                }
                function u() {
                    F.removeListener(P.WAITING, u),
                    ct && c(),
                    ft(st.GAP_RECOVERING, {
                        position: r,
                        gapLength: n ? r - n : r - a
                    }),
                    ft(qe.PAUSE),
                    ft(qe.SEEK, {
                        position: r
                    }),
                    ft(qe.PLAY),
                    e.warn("gap recovered", {
                        playPosition: r
                    }),
                    n = null,
                    r = null
                }
                function d() {
                    c(),
                    o(),
                    F.removeListener(qe.SEEK, f),
                    F.addListener(qe.SEEK, f, F.MINIMUM_PRIORITY)
                }
                function f() {
                    F.removeListener(qe.SEEK, f),
                    i()
                }
                return F.addListener(V.CLEANUP, (function e() {
                    F.removeListener(V.CLEANUP, e),
                    F.removeListener(V.SEEK, d),
                    o(),
                    F.removeListener(qe.SEEK, f),
                    c(),
                    ft(se.DESTROY)
                }
                )),
                F.addListener(V.SEEK, d),
                i(),
                {
                    name: dt
                }
            }, vt = "mseStalledRecovery";
            function Et(e, t) {
                F.dispatch(e, vt, t)
            }
            var ht = function() {
                var e, t, n = l.create(vt), r = 0, a = !1;
                function i() {
                    a = !0
                }
                function o() {
                    a = !1
                }
                function s() {
                    t && c(),
                    a ? n.debug("The stalled events are not handled when the buffer is empty") : t = setTimeout(d, 1e3)
                }
                function c() {
                    t = clearTimeout(t)
                }
                function u(e) {
                    F.validateNotificationData(e, ["start", "end"]),
                    (pt = pt || []).push(e.data)
                }
                function d() {
                    if (Et(O.UNRECOVERED_STALLED, {
                        position: e,
                        remaining: r
                    }),
                    void 0 === e || X.isLive && 0 === e)
                        return n.warn("unrecovered stalled event, but no playPosition for repair seek"),
                        void s();
                    n.warn("unrecovered stalled event, dispatching seek for repair"),
                    t = void 0;
                    var a = z.get(j.MOVING_WINDOW_INTERVAL_DELAY);
                    Et(V.SEEK, {
                        position: e + a
                    })
                }
                function f(e) {
                    F.validateNotificationData(e, ["position"]),
                    e.data.position > mt && (pt = void 0,
                    b(),
                    F.addListener(P.STALLED, g))
                }
                function m(t) {
                    t.data.position !== e && c(),
                    E(t)
                }
                function g(e) {
                    E(e),
                    t || s()
                }
                function v(t) {
                    var r = function(e) {
                        if (!pt)
                            return null;
                        var t, n;
                        for (n = 0; n < pt.length; n += 1)
                            if (e <= (t = pt[n]).end && e >= t.start)
                                return t;
                        return null
                    }(e);
                    r ? 0 !== r.start ? Et(V.SEEK, {
                        position: r.start - 1
                    }) : n.warn("would have tried to seek before 0 position") : g(t)
                }
                function E(t) {
                    F.validateNotificationData(t, ["position", "remaining"]),
                    e = t.data.position,
                    r = t.data.remaining
                }
                function h() {
                    F.removeListener(P.STALLED, g),
                    c()
                }
                function y() {
                    F.addListener(P.STALLED, g)
                }
                function b() {
                    F.removeListener(p.MISSING_RAP_AT_RANGE, u),
                    F.removeListener(P.STALLED, v),
                    F.removeListener(P.TIME_UPDATE, f)
                }
                function T(t) {
                    F.validateNotificationData(t, ["position"]),
                    c(),
                    F.removeListener(P.STALLED, g),
                    e = t.data.position,
                    mt = e,
                    b(),
                    F.addListener(p.MISSING_RAP_AT_RANGE, u),
                    F.addListener(P.STALLED, v),
                    F.addListener(P.TIME_UPDATE, f)
                }
                return F.addListener(V.CLEANUP, (function e() {
                    F.removeListener(V.CLEANUP, e),
                    F.removeListener(V.PAUSE, h),
                    F.removeListener(V.RESUME, y),
                    F.removeListener(V.SEEK, T),
                    F.removeListener(P.TIME_UPDATE, m),
                    F.removeListener(P.STALLED, g),
                    F.removeListener(O.BUFFER_EMPTY, i),
                    F.removeListener(O.BUFFER_FULL, o),
                    b(),
                    c(),
                    Et(se.DESTROY),
                    a = !1
                }
                )),
                F.addListener(V.PAUSE, h),
                F.addListener(V.RESUME, y),
                F.addListener(V.SEEK, T),
                F.addListener(P.TIME_UPDATE, m),
                F.addListener(P.STALLED, g),
                F.addListener(O.BUFFER_EMPTY, i),
                F.addListener(O.BUFFER_FULL, o),
                {
                    name: vt
                }
            }
              , yt = "mseSeek";
            function bt(e, t) {
                F.dispatch(e, yt, t)
            }
            var Tt = function(e) {
                var t = l.create(yt)
                  , n = null
                  , r = !1;
                function a() {
                    F.addListener(P.TIME_UPDATE, c, F.MAXIMUM_PRIORITY),
                    F.addListener(P.SEEKED, c, F.MAXIMUM_PRIORITY)
                }
                function i() {
                    F.removeListener(P.TIME_UPDATE, c),
                    F.removeListener(P.SEEKED, c)
                }
                function o() {
                    r = !0
                }
                function s(e) {
                    F.validateNotificationData(e, ["position"]),
                    r || bt(V.SEEK, {
                        position: e.data.position
                    }),
                    r = !1
                }
                function c(e) {
                    F.validateNotificationData(e, ["position", "remaining"]),
                    bt(O.POSITION, {
                        position: e.data.position,
                        remaining: e.data.remaining
                    })
                }
                function u(e) {
                    F.validateNotificationData(e, ["position"]),
                    n = e.data.position,
                    i(),
                    F.removeListener(P.PROGRESS, d),
                    F.addListener(P.PROGRESS, d),
                    bt(qe.PAUSE)
                }
                function d(r) {
                    if (F.validateNotificationData(r, ["buffered"]),
                    ee.remainingTotal(n, r.data.buffered) > (Math.abs(e - n) > De ? De : 1)) {
                        var i = n;
                        r.data.buffered.length > 0 && (i = Math.max(r.data.buffered[0].start, n)),
                        t.debug("onVideoProgressAfterSeek seeking to ".concat(i, ", seekPosition: ").concat(n)),
                        bt(qe.SEEK, {
                            position: i
                        }),
                        bt(qe.PLAY),
                        a(),
                        F.removeListener(P.PROGRESS, d),
                        n = null
                    }
                }
                return F.addListener(P.SEEKING, s),
                F.addListener(V.SEEK, u),
                F.addListener(qe.SEEK, o),
                F.addListener(V.CLEANUP, (function e() {
                    F.removeListener(P.SEEKING, s),
                    F.removeListener(V.SEEK, u),
                    F.removeListener(qe.SEEK, o),
                    F.removeListener(V.CLEANUP, e),
                    i(),
                    F.removeListener(P.PROGRESS, d),
                    r = !1,
                    bt(se.DESTROY)
                }
                )),
                a(),
                {
                    name: yt
                }
            }
              , St = "directSeek";
            function Ot(e, t) {
                F.dispatch(e, St, t)
            }
            var Lt = "directBuffered";
            function At(e, t) {
                F.dispatch(e, Lt, t)
            }
            var It = "directSeek";
            function _t(e, t) {
                F.dispatch(e, It, t)
            }
            var Pt, Dt, Rt = "TextTrackProxy", wt = {
                BASE: Rt,
                EMPTY_CUE_ADDED: "".concat(Rt, ".emptyCueAdded"),
                TEXT_TRACK_ADDED: "".concat(Rt, ".textTrackAdded"),
                TEXT_TRACK_CUE_CHANGE: "".concat(Rt, ".textTrackCueChange")
            }, Nt = "VideoTagProxy", Ct = l.create(Nt), Ut = ["fullscreenEnabled", "msFullscreenEnabled", "webkitFullscreenEnabled", "mozFullScreenEnabled"].some((function(e) {
                return e in document
            }
            ));
            function Mt(e, t) {
                F.dispatch(e, Nt, t)
            }
            function Ft(e) {
                if (Pt)
                    return Pt;
                var t, n, r, a = "atlas.".concat(He(3)), i = Promise.resolve(), o = !0, s = !0, c = !1, u = 1 / 0;
                function d() {
                    l(),
                    m()
                }
                function l() {
                    Dt && Ie.ios && (Array.from(Dt.textTracks).forEach((function(e) {
                        e.removeEventListener("cuechange", f)
                    }
                    )),
                    Array.from(Dt.textTracks).forEach((function(e) {
                        e.addEventListener("cuechange", f)
                    }
                    )))
                }
                function f(e) {
                    var t = z.get(j.RENDER_TEXT_TRACKS_NATIVELY)
                      , n = z.get(j.HIDE_NATIVE_TRACKS);
                    if (t && n) {
                        var r = e.target;
                        Mt(wt.TEXT_TRACK_CUE_CHANGE, {
                            activeCues: Array.from(r.activeCues)
                        })
                    }
                }
                function m() {
                    if (Dt) {
                        var e = Array.from(Dt.textTracks || []).filter((function(e) {
                            return e.language
                        }
                        )).map((function(e) {
                            var t = e.id
                              , n = e.label
                              , r = e.language
                              , a = e.mode;
                            return {
                                id: t,
                                label: n,
                                language: r,
                                mode: void 0 === a ? "disabled" : a
                            }
                        }
                        ));
                        Mt(O.TEXT_TRACKS, e)
                    }
                }
                function g() {
                    var e = Array.from(Dt.audioTracks || []).filter((function(e) {
                        return e.language
                    }
                    )).map((function(e) {
                        var t = e.id
                          , n = e.label
                          , r = e.language
                          , a = e.enabled;
                        return {
                            id: t,
                            label: n,
                            language: r,
                            enabled: void 0 !== a && a
                        }
                    }
                    ));
                    Mt(O.AUDIO_TRACKS, e)
                }
                function v() {
                    F.removeListener(V.SUSPEND, v),
                    F.removeListener(p.STREAM_URL, U),
                    F.removeListener($.SOURCE_OBJECT_URL, U),
                    r.setTarget(null),
                    Dt.onerror = null,
                    n = "",
                    Dt.src = n,
                    F.addListener(V.WAKE, E),
                    F.addListener(p.STREAM_URL, M),
                    F.addListener($.SOURCE_OBJECT_URL, M)
                }
                function E() {
                    F.removeListener(V.WAKE, E),
                    F.removeListener(p.STREAM_URL, M),
                    F.removeListener($.SOURCE_OBJECT_URL, M),
                    r.setTarget(Dt),
                    Dt.onerror = k,
                    Dt.src = n,
                    F.addListener(V.SUSPEND, v),
                    F.addListener(p.STREAM_URL, U),
                    F.addListener($.SOURCE_OBJECT_URL, U)
                }
                function h(e) {
                    F.validateNotificationData(e, ["volume"]),
                    Dt.volume = e.data.volume
                }
                function y(e) {
                    F.validateNotificationData(e, ["speed"]),
                    Dt.playbackRate = e.data.speed
                }
                function b() {
                    Ct.info("pausing"),
                    o = !1,
                    Dt.pause()
                }
                function T() {
                    Dt.pause()
                }
                function S() {
                    Ct.info("resuming"),
                    o = !0,
                    D()
                }
                function A(e) {
                    if (z.get(j.RENDER_TEXT_TRACKS_NATIVELY) && Dt && Dt.textTracks && Dt.textTracks.length) {
                        var t, n = e.data, r = n.isVisible, a = (t = n.trackId) >= Dt.textTracks.length ? 0 : t, i = Array.from(Dt.textTracks), o = i.find((function(e) {
                            var t = e.mode;
                            return ["hidden", "showing"].some((function(e) {
                                return e === t
                            }
                            ))
                        }
                        ));
                        if (o && (o.mode = "disabled"),
                        r) {
                            var s = i[a];
                            if (s) {
                                var c = z.get(j.HIDE_NATIVE_TRACKS);
                                s.mode = c ? "hidden" : "showing"
                            }
                        }
                    }
                }
                function I(e) {
                    if (Dt && Dt.audioTracks && (r = Dt.audioTracks,
                    Array.from(r).filter((function(e) {
                        return e.label
                    }
                    )).length > 1)) {
                        var t = Array.from(Dt.audioTracks || []).find((function(e) {
                            return e.enabled
                        }
                        ))
                          , n = Dt.audioTracks.getTrackById(e.data.id);
                        if (!n || t.id === n.id)
                            return;
                        Mt(p.LANGUAGE_CHANGE_STARTED, {
                            activeStreamId: "audio:".concat(t.id),
                            targetStreamId: "audio:".concat(n.id)
                        }),
                        t.enabled = !1,
                        n.enabled = !0,
                        setTimeout((function() {
                            F.addListener(P.TIME_UPDATE, (function e() {
                                F.removeListener(P.TIME_UPDATE, e),
                                Mt(p.LANGUAGE_CHANGE_COMPLETED, {
                                    prevStreamId: "audio:".concat(t.id),
                                    activeStreamId: "audio:".concat(n.id)
                                })
                            }
                            ))
                        }
                        ), 500)
                    }
                    var r
                }
                function _() {
                    D()
                }
                function D() {
                    Dt && Dt.paused && o && (i = i.then((function() {
                        return Dt.play()
                    }
                    )).catch((function(e) {
                        return Mt(O.PLAY_ERROR, {
                            error: e
                        })
                    }
                    )))
                }
                function R() {
                    Dt.pause()
                }
                function w(e) {
                    F.validateNotificationData(e, ["position"]),
                    Dt.currentTime = e.data.position / 1e3
                }
                function N(e) {
                    var t = Math.floor(1e3 * Dt.currentTime)
                      , n = ee.buffered(Dt.buffered)
                      , r = ee.remaining(t, n);
                    if (e.type !== L.STALLED || !Dt.paused)
                        switch (Mt("videoTagProxyEvents.".concat(e.type), {
                            position: t,
                            buffered: n,
                            remaining: r,
                            readyState: Dt.readyState,
                            networkState: Dt.networkState
                        }),
                        e.type) {
                        case L.PROGRESS:
                            Mt(O.BUFFERED, {
                                bufferId: "player",
                                ranges: n
                            });
                            break;
                        case L.TIME_UPDATE:
                            s && (Ct.info("First timeUpdate event, the playback starts", {
                                position: t,
                                buffered: n,
                                remaining: r
                            }),
                            s = !1),
                            Dt && !c && (l(),
                            m(),
                            g(),
                            c = !0);
                            break;
                        case L.LOADED_METADATA:
                            Dt && (Ut || Mt(O.WEBKIT_SUPPORTS_FULLSCREEN, !!Dt.webkitSupportsFullscreen))
                        }
                }
                function C(e) {
                    switch (F.validateNotificationData(e, ["source"]),
                    e.type) {
                    case p.STREAM_URL:
                        et(),
                        rt(),
                        function() {
                            function e(e) {
                                F.validateNotificationData(e, ["position"]),
                                Ot(O.POSITION, {
                                    position: e.data.position
                                })
                            }
                            F.addListener(P.TIME_UPDATE, e),
                            F.addListener(V.CLEANUP, (function t() {
                                F.removeListener(P.TIME_UPDATE, e),
                                F.removeListener(V.CLEANUP, t),
                                Ot(se.DESTROY)
                            }
                            ))
                        }(),
                        function() {
                            var e = !0
                              , t = 0;
                            function n(n) {
                                F.validateNotificationData(n, ["readyState"]),
                                n.type === P.TIME_UPDATE && (t = n.data.position),
                                !e && n.data.readyState < 2 ? (e = !0,
                                At(O.BUFFER_EMPTY, {
                                    position: t
                                })) : e && n.data.readyState >= 2 && (e = !1,
                                At(O.BUFFER_FULL))
                            }
                            F.addListener("".concat(P.BASE, ".*"), n),
                            F.addListener(V.CLEANUP, (function e() {
                                F.removeListener("".concat(P.BASE, ".*"), n),
                                F.removeListener(V.CLEANUP, e),
                                At(se.DESTROY)
                            }
                            ))
                        }(),
                        function() {
                            function e(e) {
                                F.validateNotificationData(e, ["position"]),
                                _t(qe.SEEK, {
                                    position: e.data.position
                                })
                            }
                            F.addListener(V.SEEK, e),
                            F.addListener(V.CLEANUP, (function t() {
                                F.removeListener(V.SEEK, e),
                                F.removeListener(V.CLEANUP, t),
                                _t(se.DESTROY)
                            }
                            ))
                        }();
                        break;
                    case $.SOURCE_OBJECT_URL:
                        et(),
                        rt(),
                        function() {
                            var e = !0;
                            function t(t) {
                                F.validateNotificationData(t, ["position", "buffered"]);
                                var n = ee.remaining(t.data.position, t.data.buffered);
                                !e && n < 100 ? (e = !0,
                                it(O.BUFFER_EMPTY, {
                                    position: t.data.position
                                })) : e && n > 500 && (e = !1,
                                it(O.BUFFER_FULL))
                            }
                            F.addListener(P.TIME_UPDATE, t),
                            F.addListener(P.PROGRESS, t),
                            F.addListener(P.STALLED, t),
                            F.addListener(V.CLEANUP, (function e() {
                                F.removeListener(P.TIME_UPDATE, t),
                                F.removeListener(P.PROGRESS, t),
                                F.removeListener(P.STALLED, t),
                                F.removeListener(V.CLEANUP, e),
                                it(se.DESTROY)
                            }
                            ))
                        }(),
                        gt(),
                        ht(),
                        Tt(u)
                    }
                    F.removeListener(p.STREAM_URL, C),
                    F.removeListener($.SOURCE_OBJECT_URL, C),
                    F.addListener(p.STREAM_URL, U),
                    F.addListener($.SOURCE_OBJECT_URL, U),
                    U(e)
                }
                function U(e) {
                    F.validateNotificationData(e, ["source"]),
                    n = e.data.source,
                    Dt.src = n
                }
                function M(e) {
                    F.validateNotificationData(e, ["source"]),
                    n = e.data.source
                }
                function k(e) {
                    var t = {
                        code: e.target.error.code
                    };
                    switch (e.target.error.code) {
                    case e.target.error.MEDIA_ERR_ABORTED:
                        t.message = "aborted";
                        break;
                    case e.target.error.MEDIA_ERR_NETWORK:
                        t.message = "network";
                        break;
                    case e.target.error.MEDIA_ERR_DECODE:
                        t.message = "decode";
                        break;
                    case e.target.error.MEDIA_ERR_SRC_NOT_SUPPORTED:
                        t.message = "unsupported";
                        break;
                    default:
                        t.message = "unknown"
                    }
                    Ct.fatal("videotag error", t),
                    Mt(O.ERROR, t)
                }
                return e.contentLength && (u = void 0 !== e.contentStart ? e.contentStart : 0,
                u += e.contentLength),
                F.addListener(V.VOLUME, h),
                F.addListener(V.PLAYBACK_SPEED, y),
                F.addListener(V.PAUSE, b),
                F.addListener(V.RESUME, S),
                F.addListener(p.FINISHED, T),
                F.addListener(V.CLEANUP, (function e() {
                    F.removeListener(V.VOLUME, h),
                    F.removeListener(V.PLAYBACK_SPEED, y),
                    F.removeListener(V.PAUSE, b),
                    F.removeListener(V.RESUME, S),
                    F.removeListener(p.FINISHED, T),
                    F.removeListener(V.CLEANUP, e),
                    F.removeListener(V.SUSPEND, v),
                    F.removeListener(V.WAKE, E),
                    F.removeListener(V.CAPTIONS, A),
                    F.removeListener(V.SELECT_AUDIO, I),
                    F.removeListener(p.STREAM_URL, C),
                    F.removeListener($.SOURCE_OBJECT_URL, C),
                    F.removeListener(p.STREAM_URL, U),
                    F.removeListener($.SOURCE_OBJECT_URL, U),
                    F.removeListener(p.STREAM_URL, M),
                    F.removeListener($.SOURCE_OBJECT_URL, M),
                    F.removeListener(qe.PLAY, _),
                    F.removeListener(qe.PAUSE, R),
                    F.removeListener(qe.SEEK, w),
                    Dt && Dt.textTracks && Dt.textTracks.removeEventListener("change", d),
                    Dt && Dt.audioTracks && Dt.audioTracks.removeEventListener("change", g),
                    t.removeChild(Dt),
                    t = null,
                    n = void 0,
                    r.destroy(),
                    r = null,
                    i = Promise.resolve(),
                    s = !1,
                    c = !1,
                    o = !1,
                    Dt = null,
                    delete X.player,
                    u = 1 / 0,
                    Pt = void 0,
                    Mt(se.DESTROY)
                }
                )),
                F.addListener(V.SUSPEND, v),
                F.addListener(V.CAPTIONS, A),
                F.addListener(V.SELECT_AUDIO, I),
                F.addListener(p.STREAM_URL, C),
                F.addListener($.SOURCE_OBJECT_URL, C),
                F.addListener(qe.PLAY, _),
                F.addListener(qe.PAUSE, R),
                F.addListener(qe.SEEK, w),
                Pt = {
                    name: Nt,
                    initVideo: function(e) {
                        var n;
                        (Dt = document.createElement("video")).style.width = "100%",
                        Dt.style.height = "100%",
                        Dt.id = a,
                        Dt.onerror = k,
                        (n = z.get(j.VIDEO_TAG_ATTRIBUTES)) && Object.keys(n).forEach((function(e) {
                            Dt.setAttribute(e, n[e])
                        }
                        )),
                        r = te(),
                        Object.values(L).forEach((function(e) {
                            r.addListener(e, N)
                        }
                        )),
                        r.setTarget(Dt),
                        Dt.textTracks && Dt.textTracks.addEventListener("change", d),
                        Dt.audioTracks && Dt.audioTracks.addEventListener("change", g),
                        (t = document.getElementById(e)).appendChild(Dt),
                        X.player = {
                            type: "html",
                            id: a,
                            element: Dt
                        },
                        Mt(se.CREATE)
                    },
                    getMetrics: function() {
                        if ("function" == typeof Dt.getVideoPlaybackQuality) {
                            var e = Dt.getVideoPlaybackQuality();
                            return {
                                total: e.totalVideoFrames,
                                dropped: e.droppedVideoFrames
                            }
                        }
                        return {
                            total: Dt.webkitDecodedFrameCount,
                            dropped: Dt.webkitDroppedFrameCount
                        }
                    }
                },
                Pt
            }
            var jt = {
                name: Nt,
                create: Ft,
                isSupported: !!document.createElement("video").canPlayType,
                isCompatible: function(e) {
                    return !!document.createElement("video").canPlayType(e)
                },
                getInstance: function() {
                    return Pt || Ft(),
                    Pt
                },
                getCurrentTime: function() {
                    return Dt ? Dt.currentTime : 0
                }
            }
              , kt = l.create("capabilities")
              , Gt = [];
            Ge && Gt.push(i.MP4_SEGMENTED),
            ze && (Gt.push(i.FLV_SEGMENTED),
            Gt.push(i.FLV_MOVIE)),
            jt.isSupported && (Gt.push(i.MP4_MOVIE),
            jt.isCompatible("application/vnd.apple.mpegURL") && Gt.push(i.HLS)),
            kt.info("capabilities", {
                capabilities: Gt
            });
            var Bt = Gt;
            function Vt(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var n = 0, r = new Array(t); n < t; n++)
                    r[n] = e[n];
                return r
            }
            function xt(e) {
                return xt = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }
                ,
                xt(e)
            }
            var Ht = l.create("validator")
              , Zt = ["audio/mp4", "video/mp4", "text/vtt"]
              , Yt = ["video/flv"]
              , Kt = {
                baseUrl: "string",
                "[contentStart]": "number",
                "[contentLength]": "number",
                segmentId: "number",
                representations: [{
                    contentType: "string",
                    codecs: "string",
                    "[initUrl]": "string",
                    segmentUrl: "string",
                    segmentLength: "number"
                }],
                "[hashes]": "object"
            }
              , Wt = {
                baseUrl: "string",
                "[contentStart]": "number",
                "[contentLength]": "number",
                segmentId: "number",
                representations: [{
                    contentType: "string",
                    segmentUrl: "string"
                }],
                "[hashes]": "object"
            }
              , Qt = {
                baseUrl: "string",
                "[contentStart]": "number",
                "[contentLength]": "number",
                segmentId: "number",
                representations: [{
                    contentType: "string",
                    segmentUrl: "string",
                    segmentLength: "number"
                }],
                "[hashes]": "object"
            }
              , zt = {
                url: "string",
                seekParameter: "string"
            }
              , Xt = {
                url: "string"
            }
              , qt = {
                url: "string"
            };
            function $t(e, t) {
                var n = !0;
                if (e.representations && e.representations.length)
                    for (var r = 0; r < e.representations.length; r += 1)
                        -1 === t.indexOf(e.representations[r].contentType) && (Ht.error("invalid content type: ".concat(e.representations[r].contentType)),
                        n = !1);
                else
                    n = !1;
                return n
            }
            function Jt(e, t, n) {
                n = n || "options";
                var r = !0;
                return Object.entries(t).forEach((function(a) {
                    var i = function(e, t) {
                        return function(e) {
                            if (Array.isArray(e))
                                return e
                        }(e) || function(e, t) {
                            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                            if (null != n) {
                                var r, a, i = [], o = !0, s = !1;
                                try {
                                    for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value),
                                    2 !== i.length); o = !0)
                                        ;
                                } catch (e) {
                                    s = !0,
                                    a = e
                                } finally {
                                    try {
                                        o || null == n.return || n.return()
                                    } finally {
                                        if (s)
                                            throw a
                                    }
                                }
                                return i
                            }
                        }(e) || function(e, t) {
                            if (e) {
                                if ("string" == typeof e)
                                    return Vt(e, 2);
                                var n = Object.prototype.toString.call(e).slice(8, -1);
                                return "Object" === n && e.constructor && (n = e.constructor.name),
                                "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Vt(e, 2) : void 0
                            }
                        }(e) || function() {
                            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }()
                    }(a)
                      , o = i[0]
                      , s = i[1]
                      , c = "[" === o.substr(0, 1) && "]" === o.substr(-1, 1)
                      , u = o.substr(+c, o.length - 2 * c);
                    if ("string" == typeof s) {
                        var d = s;
                        c || Object.hasOwnProperty.call(e, u) ? Object.hasOwnProperty.call(e, u) && xt(e[u]) !== d && (Ht.error("".concat(n, " invalid type of ").concat(u, ": ").concat(xt(e[u]), " needed: ").concat(d)),
                        r = !1) : (Ht.error("".concat(n, " missing property: ").concat(u)),
                        r = !1)
                    } else if (xt(e[u]) !== xt(t[o]))
                        Ht.error("".concat(n, " invalid type of ").concat(u, ": ").concat(xt(e[u]), " needed: ").concat(xt(t[o]))),
                        r = !1;
                    else if (t[o].shift)
                        for (var l = 0; l < e[u].length; l += 1) {
                            var f = "".concat(n, ".").concat(u, "[").concat(l, "]");
                            r = Jt(e[u][l], t[o][0], f) && r
                        }
                }
                )),
                r
            }
            var en = "MetaDownloader"
              , tn = {
                BASE: en,
                LOAD_INIT: "".concat(en, ".loadInit"),
                LOAD_START: "".concat(en, ".loadStart"),
                METADATA: "".concat(en, ".metadata"),
                FAILED: "".concat(en, ".failed"),
                DESTROY: "".concat(en, ".destroy")
            }
              , nn = []
              , rn = ["url", "initUrl", "segmentUrl"];
            function an(e) {
                return e.contentType ? e.contentType.split("/")[0] : e.format
            }
            function on(e) {
                for (var t = "", n = 0; n < rn.length; n += 1)
                    t += ":",
                    t += Object.hasOwnProperty.call(e, rn[n]) ? e[rn[n]] : "";
                return function(e, t) {
                    for (var n = 0, r = 0; r < e.length; r += 1)
                        n = (1 & n) << 31 | n >>> 1,
                        n ^= e.charCodeAt(r);
                    return function(e, t) {
                        for (var n = "", r = 0; r < Math.ceil(t / 4); r += 1)
                            n = (15 & e).toString(16) + n,
                            e >>>= 4;
                        return n
                    }(n, t)
                }(t, 32)
            }
            var sn, cn = function(e) {
                return [an(e), on(e)].join(":")
            }, un = function(e) {
                var t = e.split(":");
                return {
                    mediaType: t[0],
                    hash: t[1]
                }
            }, dn = "TextTrackProxy", ln = l.create(dn), fn = window.VTTCue ? window.VTTCue : window.TextTrackCue, pn = "default", mn = {
                top: 2
            };
            function gn(e, t) {
                F.dispatch(e, dn, t)
            }
            function vn() {
                if (sn)
                    return sn;
                var e, t = [], n = [], r = {}, a = !1, i = "bytes", o = "purge";
                function s(t) {
                    F.validateNotificationData(t, ["streamId", "bufferId", "contentType"]),
                    "text" === un(t.data.streamId).mediaType && (e = t.data.bufferId,
                    gn(R.BUFFER_UPDATED, {
                        bufferId: t.data.bufferId,
                        ranges: [{
                            start: 0,
                            end: 0
                        }]
                    }))
                }
                function c(n) {
                    F.validateNotificationData(n, ["bufferId", "start", "end", "duration", "bytes"]),
                    e === n.data.bufferId && (t.push({
                        type: i,
                        payload: n.data
                    }),
                    u())
                }
                function u() {
                    if (!a)
                        for (; t.length; ) {
                            var e = t.shift();
                            switch (e.type) {
                            case i:
                                l(e.payload);
                                break;
                            case o:
                                a = !0,
                                g()
                            }
                        }
                }
                function d(e) {
                    F.validateNotificationData(e, ["position"]),
                    pn = e.data.position
                }
                function l(e) {
                    var t, r, a, i = function(e) {
                        if ("" === String(e.start) || "" === String(e.end) || !e.bytes.text)
                            return null;
                        var t = e.start / 1e3
                          , n = e.end / 1e3;
                        return function(e, t) {
                            var n = t.meta || {}
                              , r = {
                                id: t.id || void 0,
                                line: -4,
                                mode: "showing"
                            }
                              , a = function(e) {
                                return "default" !== pn && mn[pn] ? mn[pn] : e.line && e.line >= 10 ? -4 : e.line
                            }(n);
                            if (void 0 !== a && (n.line = a),
                            !n.positionAlign && n.align)
                                switch (n.align) {
                                case "left":
                                    n.positionAlign = Ie.ff ? "line-left" : "start";
                                    break;
                                case "right":
                                    n.positionAlign = Ie.ff ? "line-right" : "end"
                                }
                            var i = Object.assign(r, n);
                            try {
                                e = Object.assign(e, i)
                            } catch (e) {
                                ln.warn("couldn't set meta properties to vtt cue")
                            }
                            return e
                        }(new fn(t,n,e.bytes.text), e.bytes)
                    }(e), o = p();
                    if (a = function(e, t) {
                        return !!n.length && n.filter((function(n) {
                            return n.start <= t && n.end >= e
                        }
                        ))[0]
                    }(t = e.start, r = e.end),
                    a ? a.end = Math.max(r, a.end) : n.push({
                        start: t,
                        end: r
                    }),
                    i && o)
                        return o.addCue(i),
                        void gn(R.BUFFER_UPDATED, {
                            bufferId: e.bufferId,
                            ranges: n
                        });
                    gn(wt.EMPTY_CUE_ADDED, {
                        track: o,
                        bufferId: e.bufferId
                    })
                }
                function f(e) {
                    return "stream_".concat(e)
                }
                function p() {
                    var t = function(e) {
                        return nn[e]
                    }(e)
                      , n = f(t.sourceStreamVersion);
                    return Object.hasOwnProperty.call(r, n) ? r[n] : function(e) {
                        var t;
                        t = X.player.element.textTracks,
                        Object.keys(t).forEach((function(e) {
                            var n = t[e];
                            n.mode = "disabled",
                            n.removeEventListener("cuechange", m)
                        }
                        ));
                        var n = X.player.element.addTextTrack("subtitles", e.label, e.language);
                        gn(wt.TEXT_TRACK_ADDED, {
                            label: e.label,
                            language: e.language
                        });
                        var a = f(e.sourceStreamVersion);
                        return n.mode = z.get(j.RENDER_TEXT_TRACKS_NATIVELY) ? "showing" : "hidden",
                        n.addEventListener("cuechange", m),
                        r[a] = n,
                        r[a]
                    }(t)
                }
                function m(e) {
                    if (!z.get(j.RENDER_TEXT_TRACKS_NATIVELY)) {
                        var t = e.target;
                        gn(wt.TEXT_TRACK_CUE_CHANGE, {
                            activeCues: Array.from(t.activeCues)
                        })
                    }
                }
                function g() {
                    var t = p();
                    for (n = []; t.cues.length; )
                        t.removeCue(t.cues[0]);
                    gn(wt.TEXT_TRACK_CUE_CHANGE, {
                        activeCues: []
                    }),
                    gn(R.BUFFER_CLEAR, {
                        bufferId: e
                    })
                }
                return ln.debug("create"),
                F.addListener(R.APPEND, c),
                F.addListener(R.BUFFER_UPDATED, (function(t) {
                    t.data.bufferId === e && (a = !1)
                }
                )),
                F.addListener(N.BUFFER_ADDED, s),
                F.addListener(V.CLEANUP, (function i() {
                    F.removeListener(R.APPEND, c),
                    F.removeListener(N.BUFFER_ADDED, s),
                    F.removeListener(V.CAPTION_POSITION, d),
                    F.removeListener(V.CLEANUP, i),
                    t = [],
                    e = void 0,
                    n = [],
                    r = {},
                    a = !1,
                    pn = "default",
                    sn = void 0,
                    gn(se.DESTROY)
                }
                )),
                F.addListener(V.CAPTION_POSITION, d),
                F.addListener(R.PURGE, (function(n) {
                    n.data.bufferId === e && (t.push({
                        type: o
                    }),
                    u())
                }
                )),
                gn(se.CREATE),
                sn = {
                    name: dn
                }
            }
            var En = {
                create: vn,
                name: dn,
                getInstance: function() {
                    return sn || vn(),
                    sn
                }
            };
            function hn(e) {
                var t;
                function n() {
                    return t.bytes[t.position++]
                }
                function r(e) {
                    e = e || 0,
                    t.bytes[t.position++] = 255 & e
                }
                function a(e) {
                    r((e = e || 0) >>> 24 & 255),
                    r(e >>> 16 & 255),
                    r(e >>> 8 & 255),
                    r(255 & e)
                }
                return e instanceof Uint8Array || (e = new Uint8Array(e)),
                t = {
                    bytes: e,
                    position: 0,
                    readUnsignedByte: n,
                    readUnsignedInt16: function() {
                        for (var e = 0, t = 0; t < 2; t += 1)
                            e = e << 8 | n();
                        return e
                    },
                    readUnsignedInt24: function() {
                        for (var e = 0, t = 0; t < 3; t += 1)
                            e = e << 8 | n();
                        return e
                    },
                    readUnsignedInt32: function() {
                        for (var e = 0, t = 0; t < 4; t += 1)
                            e = 256 * e + n();
                        return e
                    },
                    readUnsignedInt64: function() {
                        for (var e = 0, t = 0; t < 8; t += 1)
                            e = 256 * e + n();
                        return e
                    },
                    readString: function(e) {
                        for (var n = "", r = 0; r < e; r += 1)
                            n += String.fromCharCode(t.bytes[t.position++]);
                        return n
                    },
                    readBytes: function(e) {
                        var n = yn(t.bytes, t.position, e);
                        return t.position += e,
                        n
                    },
                    writeUnsignedByte: r,
                    writeUnsignedInt16: function(e) {
                        r((e = e || 0) >>> 8 & 255),
                        r(255 & e)
                    },
                    writeUnsignedInt24: function(e) {
                        r((e = e || 0) >>> 16 & 255),
                        r(e >>> 8 & 255),
                        r(255 & e)
                    },
                    writeUnsignedInt32: a,
                    writeUnsignedInt64: function(e) {
                        a(Math.floor(e / Math.pow(2, 32))),
                        a(Math.floor(e % Math.pow(2, 32)))
                    },
                    writeString: function(e) {
                        for (var n = 0; n < e.length; n += 1)
                            t.bytes[t.position++] = e.charCodeAt(n)
                    },
                    writeBytes: function(e) {
                        t.bytes.set(e, t.position),
                        t.position += e.length
                    }
                }
            }
            function yn(e, t, n) {
                if ("function" == typeof e.slice)
                    return e.slice(t, t + n);
                for (var r = new Uint8Array(n), a = 0; a < n; a += 1)
                    r[a] = e[t + a];
                return r
            }
            var bn = {
                create: hn,
                slice: yn,
                concat: function(e) {
                    var t, n = 0;
                    for (t = 0; t < e.length; t += 1)
                        n += e[t].length;
                    var r = hn(new Uint8Array(n));
                    for (t = 0; t < e.length; t += 1)
                        r.writeBytes(e[t]);
                    return r.bytes
                },
                stringify: function(e, t, n) {
                    var r = "";
                    n = n || 1,
                    t = t || 4;
                    for (var a = 0; a < e.length; a += 1)
                        r += Ze(e[a].toString(16), 2),
                        a < e.length - 1 && (n > 1 && (a + 1) % (t * n) == 0 ? r += "\n" : (a + 1) % t == 0 && (r += " "));
                    return r
                }
            }
              , Tn = {
                "text/vtt": "text",
                "audio/mp4": "arraybuffer",
                "video/mp4": "arraybuffer"
            }
              , Sn = "DownloadManager";
            function On(e, t) {
                F.dispatch(e, Sn, t)
            }
            var Ln = function() {
                function e(e) {
                    F.validateNotificationData(e, ["loaderId", "segmentId", "streamId", "url", "contentType"]),
                    function(e) {
                        var t, n, r = "".concat("SegmentDownloader", ".").concat(e.loaderId), a = l.create(r), i = new Date;
                        function o() {
                            n && (n.onload = null,
                            n.onerror = null,
                            n.onprogress = null,
                            n.abort(),
                            n = null),
                            F.removeListener(V.CLEANUP, u),
                            F.removeListener(p.ABORT_DOWNLOAD, d),
                            t = clearTimeout(t),
                            s(E.DESTROY, {
                                loaderId: e.loaderId
                            })
                        }
                        function s(e, t) {
                            F.dispatch(e, r, t)
                        }
                        function c() {
                            var t = {
                                streamId: e.streamId,
                                segmentId: e.segmentId,
                                url: e.url,
                                contentType: e.contentType,
                                status: n.status
                            };
                            0 === n.status ? t.reason = "TIMEOUT" : n.status >= 400 && n.status < 500 && (t.reason = function() {
                                var e;
                                if ("string" == typeof n.response)
                                    e = n.response;
                                else {
                                    if (!(window.ArrayBuffer && window.Uint8Array && n.response instanceof ArrayBuffer))
                                        return;
                                    var t = bn.create(new Uint8Array(n.response));
                                    e = t.readString(t.bytes.length)
                                }
                                try {
                                    return JSON.parse(e).error
                                } catch (e) {
                                    return
                                }
                            }()),
                            a.error("segment download error", t),
                            s(E.FAILED, t),
                            o()
                        }
                        function u() {
                            o()
                        }
                        function d(t) {
                            F.validateNotificationData(t, ["streamId"]),
                            t.data.streamId === e.streamId && o()
                        }
                        F.addListener(V.CLEANUP, u),
                        F.addListener(p.ABORT_DOWNLOAD, d),
                        (n = new XMLHttpRequest).open("GET", e.url, !0),
                        n.responseType = Tn[e.contentType],
                        n.send(),
                        n.onprogress = function() {
                            t = clearTimeout(t),
                            200 === n.status && s(E.LOAD_START, {
                                streamId: e.streamId,
                                segmentId: e.segmentId,
                                url: e.url,
                                contentType: e.contentType
                            }),
                            n.onprogress = null
                        }
                        ,
                        n.onload = function() {
                            var t, r = new Date;
                            200 === n.status ? (t = "text" === n.responseType ? "".concat(n.response) : new Uint8Array(n.response),
                            s(E.RAW, {
                                raw: t,
                                streamId: e.streamId,
                                segmentId: e.segmentId,
                                contentType: e.contentType
                            }),
                            s(E.LOAD_COMPLETE, {
                                url: e.url,
                                time: r - i,
                                size: t.length,
                                streamId: e.streamId,
                                segmentId: e.segmentId,
                                contentType: e.contentType
                            }),
                            o()) : c()
                        }
                        ,
                        n.onerror = c,
                        s(E.LOAD_INIT, {
                            streamId: e.streamId,
                            segmentId: e.segmentId,
                            url: e.url,
                            contentType: e.contentType
                        }),
                        t = setTimeout((function() {
                            n && (n.abort(),
                            c())
                        }
                        ), 7e3),
                        e.loaderId,
                        e.url
                    }(e.data)
                }
                return F.addListener(p.LOAD_SEGMENT, e),
                F.addListener(V.CLEANUP, (function t() {
                    F.removeListener(p.LOAD_SEGMENT, e),
                    F.removeListener(V.CLEANUP, t),
                    On(se.DESTROY)
                }
                )),
                On(se.CREATE),
                {
                    name: Sn
                }
            }
              , An = "GarbageCollector"
              , In = {
                BASE: An,
                DISCARD_START_SEGMENT: "".concat(An, ".discardStartSegment"),
                DISCARD_END_SEGMENT: "".concat(An, ".discardEndSegment")
            }
              , _n = function(e, t) {
                var n, r = "".concat("SegmentStorage", ".").concat(e), a = t, i = l.create(r), o = {}, s = [], c = 0, u = null, d = -1;
                function f(e, t) {
                    F.dispatch(e, r, t)
                }
                function p() {
                    null !== u && S(u),
                    b()
                }
                function m(e, t) {
                    return t.segmentId === e.firstId - 1
                }
                function g(e, t) {
                    return t.segmentId === e.lastId + 1
                }
                function v(e, t) {
                    return e.firstId <= t.segmentId && e.lastId >= t.segmentId
                }
                function E() {
                    for (var e = y(), t = 0; s.length > 1 && t < s.length - 1; t += 1)
                        s[t].lastId + 1 === s[t + 1].firstId && (t === c ? (s[t].appendSegments(s[t + 1].segments),
                        s.splice(t + 1, 1),
                        t -= 1) : (s[t + 1].prependSegments(s[t].segments),
                        s.splice(t--, 1)));
                    c = s.indexOf(e)
                }
                function h() {
                    for (var e = y(), t = s.length; --t >= 0; )
                        s[t].start === s[t].end && s.splice(t, 1);
                    (c = s.indexOf(e)) < 0 && (s.length ? (c = 0,
                    A(y().start),
                    i.warn("removeEmptyBundles: currentBundle removed, bundleIndex set to 0")) : i.debug("removeEmptyBundles: no remaining bundles"))
                }
                function y() {
                    return s && s.length > c ? s[c] : null
                }
                function b() {
                    var t;
                    n.streamId = e,
                    n.activeFragmentStartTime = (t = y()) ? t.activeFragmentStartTime : _e,
                    n.hasNextFragment = !!y() && y().hasNextFragment,
                    n.hasNextRAPFragment = !!y() && y().hasNextRAPFragment,
                    n.nextFragmentContainsRAP = !!y() && y().nextFragmentContainsRAP,
                    n.nextFragmentStartTime = y() ? y().nextFragmentStartTime : _e
                }
                function S(t, n) {
                    if (s.length && 0 === s[0].firstId && t < s[0].start && t >= 0)
                        return c = 0,
                        void A(y().start);
                    for (var r = 0; s && r < s.length; r += 1)
                        if (L(s[r]) <= t && s[r].end >= t)
                            return c = r,
                            void A(t);
                    c = _e,
                    u = t,
                    b(),
                    n || f(T.SEGMENT_MISSING, {
                        streamId: e,
                        position: t
                    })
                }
                function O(e) {
                    return 0 !== e.duration
                }
                function L(e) {
                    var t = e.segments.findIndex(O);
                    if (t <= 0)
                        return e.start;
                    var n = t * a
                      , r = a - e.segments[t].duration;
                    return e.start - (n + r)
                }
                function A(t) {
                    !function() {
                        if (y().end - u < De) {
                            var t = y().lastId + 1;
                            i.warn("active bundle available content is not enough after seek, requesting the next segment", {
                                streamId: e,
                                segmentId: t,
                                seekPosition: u
                            }),
                            f(T.SEGMENT_MISSING_BY_ID, {
                                streamId: e,
                                segmentId: t
                            })
                        }
                    }(),
                    u = null,
                    i.debug("setTimePosition ".concat(t)),
                    y().setTimePosition(t),
                    b()
                }
                return i.debug("construct ".concat(e)),
                n = {
                    getNextFragment: function() {
                        var t, n = y() ? y().getNextFragment() : null;
                        return b(),
                        t = y().activeSegment.segmentId,
                        d !== t && (d = t,
                        setTimeout((function() {
                            f(T.SEGMENT_CHANGE, {
                                segmentId: t,
                                streamId: e
                            })
                        }
                        ), 0)),
                        n
                    },
                    getEoSPosition: function() {
                        var e = s.find((function(e) {
                            return e.hasLastSegment
                        }
                        ));
                        return e && e.duration > 0 ? e.end : _e
                    },
                    getSegmentWithKeyframe: function(e) {
                        var t = y();
                        if (t)
                            return t.getSegmentWithKeyframe(e)
                    },
                    setTimePosition: S,
                    removeSegmentFromBeginning: function() {
                        var e = s && s.length ? s[0] : null;
                        return !!e && (e.removeSegmentFromBeginning(),
                        h(),
                        p(),
                        !0)
                    },
                    removeSegmentFromEnd: function() {
                        var e = s && s.length ? s[s.length - 1] : null;
                        return !!e && (e.removeSegmentFromEnd(),
                        h(),
                        p(),
                        !0)
                    },
                    destroy: function() {
                        o = {},
                        s = [],
                        c = 0,
                        u = null,
                        d = -1
                    },
                    insertSegment: function(e) {
                        var t = function(e) {
                            for (var t = 0; t < s.length; t += 1) {
                                if (m(s[t], e))
                                    return s[t].prependSegment(e),
                                    E(),
                                    !0;
                                if (g(s[t], e))
                                    return s[t].appendSegment(e),
                                    E(),
                                    !0;
                                if (v(s[t], e))
                                    return i.warn("findBundleForSegment : segment overlaps existing bundle", {
                                        bundleStart: s[t].start,
                                        bundleEnd: s[t].end,
                                        segmentStart: e.firstTimestamp,
                                        segmentEnd: e.lastTimestamp
                                    }),
                                    !1
                            }
                            return i.debug("creating new bundle for segment", {
                                segmentId: e.segmentId,
                                start: e.firstTimestamp,
                                end: e.lastTimestamp
                            }),
                            s.push(function() {
                                var e, t = [], n = 0;
                                function r() {
                                    return n < t.length ? t[n] : null
                                }
                                function a() {
                                    if (!r())
                                        return !1;
                                    for (; !r().hasNextFragment && n < t.length - 1; )
                                        n < t.length - 1 && (n += 1),
                                        r() && r().reset(),
                                        o(),
                                        r();
                                    return r().hasNextFragment
                                }
                                function i(e) {
                                    return r().keyFrames.length && r().keyFrames[0] <= e
                                }
                                function o() {
                                    var n;
                                    e.start = t && t.length ? function() {
                                        for (var e = 0; e < t.length; ) {
                                            if (t[e].firstTimestamp !== _e)
                                                return t[e].firstTimestamp;
                                            e += 1
                                        }
                                        return 0
                                    }() : 0,
                                    e.end = t && t.length ? function() {
                                        for (var e = t.length - 1; e >= 0; ) {
                                            if (t[e].lastTimestamp !== _e)
                                                return t[e].lastTimestamp;
                                            e -= 1
                                        }
                                        return 0
                                    }() : 0,
                                    e.firstId = t && t.length ? t[0].segmentId : -1,
                                    e.lastId = t && t.length ? t[t.length - 1].segmentId : -1,
                                    e.duration = function() {
                                        for (var e = 0, n = 0; n < t.length; n += 1)
                                            e += t[n].duration;
                                        return e
                                    }(),
                                    e.avgSegmentDuration = e.duration / t.length,
                                    e.size = function() {
                                        for (var e = 0, n = 0; n < t.length; n += 1)
                                            e += t[n].size;
                                        return e
                                    }(),
                                    e.segments = t,
                                    e.hasNextFragment = a(),
                                    e.hasNextRAPFragment = !!r() && r().hasNextRAPFragment,
                                    e.nextFragmentContainsRAP = !!a() && r().nextFragmentContainsRAP,
                                    e.nextFragmentStartTime = a() ? r().nextFragmentStartTime : _e,
                                    e.activeSegment = r(),
                                    e.activeFragmentStartTime = (n = r()) ? n.activeFragmentStartTime : _e,
                                    e.hasLastSegment = t.some((function(e) {
                                        return e.lastSegment
                                    }
                                    ))
                                }
                                return e = {
                                    getNextFragment: function() {
                                        var e = a() ? r().getNextFragment() : null;
                                        return o(),
                                        e
                                    },
                                    appendSegment: function(e) {
                                        t.push(e),
                                        n === _e && e.fragments.length && (n = 0),
                                        o()
                                    },
                                    prependSegment: function(e) {
                                        t.unshift(e),
                                        n += 1,
                                        o()
                                    },
                                    appendSegments: function(e) {
                                        t = t.concat(e),
                                        o()
                                    },
                                    prependSegments: function(e) {
                                        t = e.concat(t),
                                        n += t.length,
                                        o()
                                    },
                                    removeSegmentFromBeginning: function() {
                                        t.splice(0, 1),
                                        n -= 1,
                                        o()
                                    },
                                    removeSegmentFromEnd: function() {
                                        t.splice(-1, 1),
                                        o()
                                    },
                                    setTimePosition: function(e) {
                                        n = _e;
                                        for (var a = 0; a < t.length; a += 1)
                                            t[a].firstTimestamp <= e && (n = a);
                                        if (r()) {
                                            for (; !i(e) && n > 0; )
                                                n -= 1;
                                            r().setTimePosition(e)
                                        }
                                        o()
                                    },
                                    getSegmentWithKeyframe: function(e) {
                                        return e = e || 0,
                                        t.find((function(t) {
                                            return t.keyFrames.some((function(t) {
                                                return t >= e
                                            }
                                            ))
                                        }
                                        ))
                                    }
                                },
                                o(),
                                e
                            }()),
                            s[s.length - 1].appendSegment(e),
                            n = y(),
                            s.sort((function(e, t) {
                                return 0 === e.duration || 0 === t.duration ? e.firstId - t.firstId : e.start - t.start
                            }
                            )),
                            c = s.indexOf(n),
                            !0;
                            var n
                        }(e);
                        return !!t && (p(),
                        !0)
                    },
                    getState: function() {
                        for (var t = [], n = [], r = 0, a = [], i = [], o = 0; o < s.length; o += 1)
                            r += s[o].size,
                            t.push({
                                start: s[o].start,
                                end: s[o].end
                            }),
                            n.push({
                                start: s[o].firstId,
                                end: s[o].lastId
                            }),
                            a.push(s[o].duration),
                            i.push(s[o].size);
                        return {
                            streamId: e,
                            size: r,
                            ranges: t,
                            ids: n,
                            bundleDurations: a,
                            bundleSizes: i
                        }
                    },
                    getConfigForHash: function(e) {
                        return o[e]
                    },
                    insertConfig: function(e, t) {
                        o[e] = t
                    }
                },
                b(),
                n
            };
            function Pn(e, t) {
                var n = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(e);
                    t && (r = r.filter((function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }
                    ))),
                    n.push.apply(n, r)
                }
                return n
            }
            function Dn(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? Pn(Object(n), !0).forEach((function(t) {
                        Rn(e, t, n[t])
                    }
                    )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Pn(Object(n)).forEach((function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                    }
                    ))
                }
                return e
            }
            function Rn(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n,
                e
            }
            function wn(e) {
                return (X.representations || []).find((function(t) {
                    return t.streamId === e
                }
                ))
            }
            function Nn(e) {
                var t = wn(e);
                if (void 0 !== t) {
                    var n = X.representations.indexOf(t);
                    return X.representations.splice(n, 1)
                }
            }
            var Cn, Un = {
                addRepresentation: function(e, t, n) {
                    void 0 === n && (n = "active"),
                    X.representations = X.representations || [],
                    Nn(t);
                    var r = Dn(Dn({}, e), {}, {
                        streamId: t,
                        status: n
                    });
                    X.representations.push(r)
                },
                getRepresentation: wn,
                removeRepresentation: Nn,
                cleanup: function() {
                    Object.getOwnPropertyNames(X).forEach((function(e) {
                        delete X[e]
                    }
                    ))
                }
            }, Mn = "StorageManager";
            function Fn(e, t) {
                F.dispatch(e, Mn, t)
            }
            function jn() {
                if (Cn)
                    return Cn;
                var e = {}
                  , t = -1 / 0
                  , n = {};
                function r(e) {
                    F.validateNotificationData(e, ["position"]),
                    t = e.data.position
                }
                function a() {
                    t = -1 / 0
                }
                function i(e) {
                    F.validateNotificationData(e, ["streamId", "segment"]);
                    var t = u(e.data.streamId);
                    t.insertSegment(e.data.segment) && Fn(y.SEGMENT_STORAGE_UPDATED, t.getState()),
                    function(e) {
                        var t = u(e).getEoSPosition();
                        t !== _e && Fn(y.EOS_POSITION_DETECTED, {
                            position: t
                        })
                    }(e.data.streamId)
                }
                function o(e) {
                    F.validateNotificationData(e, ["streamId", "after"]),
                    n[e.data.streamId] = e.data.after,
                    c(e.data.streamId)
                }
                function s(e) {
                    F.validateNotificationData(e, ["streamId"]),
                    delete n[e.data.streamId]
                }
                function c(e) {
                    var t = n[e];
                    if (t || 0 === t) {
                        var r = u(e).getSegmentWithKeyframe(t);
                        r && (delete n[e],
                        function(e, t) {
                            var n = e.keyFrames.find((function(e) {
                                return e >= t
                            }
                            ));
                            Fn(T.KEYFRAME_POSITION, {
                                streamId: e.streamId,
                                position: n
                            })
                        }(r, t))
                    }
                }
                function u(t) {
                    return function(t) {
                        if (!Object.hasOwnProperty.call(e, t)) {
                            var n = function(e) {
                                return Un.getRepresentation(e).segmentLength
                            }(t)
                              , r = _n(t, n);
                            e[t] = r,
                            function(e) {
                                Fn(y.SEGMENT_STORAGE_CREATED, {
                                    streamId: e
                                })
                            }(t)
                        }
                    }(t),
                    e[t]
                }
                function d(t) {
                    Object.hasOwnProperty.call(n, t) && delete n[t],
                    Object.hasOwnProperty.call(e, t) && (e[t].destroy(),
                    delete e[t],
                    Fn(y.SEGMENT_STORAGE_REMOVED, {
                        streamId: t
                    }))
                }
                function l(e) {
                    F.validateNotificationData(e, ["streamId", "position"]);
                    var n = u(e.data.streamId)
                      , r = Math.max(e.data.position, t + De);
                    n.setTimePosition(r)
                }
                function f(e) {
                    F.validateNotificationData(e, ["streamId", "ranges"]),
                    e.data.ranges.length ? c(e.data.streamId) : d(e.data.streamId)
                }
                function m(e) {
                    F.validateNotificationData(e, ["streamId"]);
                    var t, n = u(e.data.streamId);
                    switch (e.type) {
                    case In.DISCARD_START_SEGMENT:
                        t = n.removeSegmentFromBeginning();
                        break;
                    case In.DISCARD_END_SEGMENT:
                        t = n.removeSegmentFromEnd()
                    }
                    t && Fn(y.SEGMENT_STORAGE_UPDATED, n.getState())
                }
                function g(e) {
                    F.validateNotificationData(e, ["streamId", "config", "hash"]),
                    u(e.data.streamId).insertConfig(e.data.hash, e.data.config)
                }
                return X.player && "flash" === X.player.type || (F.addListener(p.SWITCH_STREAM, l, F.MINIMUM_PRIORITY),
                F.addListener(V.SEEK, r),
                F.addListener(V.CLEANUP, (function t() {
                    F.removeListener(p.SWITCH_STREAM, l),
                    F.removeListener(V.SEEK, r),
                    F.removeListener(V.CLEANUP, t),
                    F.removeListener(y.SEGMENT_STORAGE_UPDATED, f),
                    F.removeListener(qe.SEEK, a),
                    F.removeListener(In.DISCARD_START_SEGMENT, m),
                    F.removeListener(In.DISCARD_END_SEGMENT, m),
                    F.removeListener(E.SEGMENT, i),
                    F.removeListener(E.EMPTY_SEGMENT, i),
                    F.removeListener(E.CONFIG, g),
                    F.removeListener(p.REQUEST_KEYFRAME_POSITION, o),
                    F.removeListener(p.CANCEL_KEYFRAME_REQUEST, s),
                    Object.getOwnPropertyNames(e).forEach(d),
                    e = {},
                    n = {},
                    Cn = void 0,
                    Fn(se.DESTROY)
                }
                )),
                F.addListener(y.SEGMENT_STORAGE_UPDATED, f),
                F.addListener(qe.SEEK, a),
                F.addListener(In.DISCARD_START_SEGMENT, m),
                F.addListener(In.DISCARD_END_SEGMENT, m),
                F.addListener(E.SEGMENT, i),
                F.addListener(E.EMPTY_SEGMENT, i),
                F.addListener(E.CONFIG, g),
                F.addListener(p.REQUEST_KEYFRAME_POSITION, o),
                F.addListener(p.CANCEL_KEYFRAME_REQUEST, s),
                Fn(se.CREATE)),
                Cn = {
                    name: Mn,
                    getSegmentStorage: u,
                    removeSegmentStorage: d
                }
            }
            var kn = {
                name: Mn,
                create: jn,
                getInstance: function() {
                    return Cn || jn(),
                    Cn
                }
            }
              , Gn = function(e) {
                return function(t, n) {
                    var r = t.segmentId
                      , a = n.segmentId;
                    return Math.min(r, a) >= e ? r - a : a - r
                }
            }
              , Bn = {}
              , Vn = {};
            function xn(e) {
                return un(e).mediaType
            }
            var Hn = function(e, t) {
                Bn[e] = function(e) {
                    return {
                        segmentUrl: e.segmentUrl ? e.baseUrl + e.segmentUrl : ""
                    }
                }(t),
                t.hashes && function(e, t) {
                    var n = xn(e);
                    Vn[n] || (Vn[n] = function() {
                        var e = {};
                        return {
                            add: function(t) {
                                if (!Object.hasOwnProperty.call(t, "id"))
                                    throw new Error('Invalid hashObject: missing "id"');
                                if (!Object.hasOwnProperty.call(t, "hash"))
                                    throw new Error('Invalid hashObject: missing "hash"');
                                e[t.id] = t.hash
                            },
                            getHashBySegmentId: function(t) {
                                var n = Object.keys(e).filter((function(e) {
                                    return t - t % 10 === parseInt(e, 10)
                                }
                                )).pop();
                                return e[n]
                            }
                        }
                    }()),
                    Object.getOwnPropertyNames(t).forEach((function(e) {
                        var r = t[e];
                        Vn[n].add({
                            id: e,
                            hash: r
                        })
                    }
                    ))
                }(e, t.hashes)
            }
              , Zn = function(e, t) {
                return function(e, t) {
                    var n = Bn[e].segmentUrl
                      , r = function(e, t) {
                        var n = xn(e);
                        if (!Vn[n])
                            throw new Error('no hashes for "'.concat(n, '"'));
                        var r = Vn[n].getHashBySegmentId(t);
                        if (!r)
                            throw new Error("cannot find hash for ".concat(t));
                        return r
                    }(e, t);
                    return function(e, t) {
                        return Object.hasOwnProperty.call(t, "segmentId") && (t["segmentId%06d"] = Ze(t.segmentId, 6),
                        t["segmentId%04d"] = Ze(t.segmentId, 4)),
                        Object.getOwnPropertyNames(t).reduce((function(e, n) {
                            var r = t[n];
                            return e.replace("#".concat(n, "#"), r)
                        }
                        ), e)
                    }(n, {
                        segmentId: t,
                        hashId: r
                    })
                }(e, t)
            }
              , Yn = function(e) {
                delete Bn[e];
                var t = xn(e);
                delete Vn[t]
            }
              , Kn = "DownloadQueue"
              , Wn = l.create(Kn);
            function Qn(e, t) {
                F.dispatch(e, Kn, t)
            }
            function zn(e) {
                return un(e).mediaType
            }
            function Xn() {
                return (new Date).getTime()
            }
            var qn = function() {
                var e, t, n, r, a, i, o = [], s = [], c = {}, u = {}, d = {}, l = null;
                function f() {
                    i = !0,
                    N()
                }
                function m(e) {
                    if (F.validateNotificationData(e, ["segmentId", "streamId", "contentType"]),
                    t = e.data,
                    !s.some((function(e) {
                        return t.segmentId === e.segmentId && t.streamId === e.streamId
                    }
                    ))) {
                        var t, n = M(e.data.streamId, e.data.segmentId);
                        n && !function(e) {
                            return o.some((function(t) {
                                return t.url === e
                            }
                            ))
                        }(n) && (P(e.data),
                        C())
                    }
                }
                function g(e) {
                    F.validateNotificationData(e, ["streamId"]);
                    var t = [];
                    s = s.filter((function(n) {
                        return n.streamId !== e.data.streamId || (t.push(n),
                        !1)
                    }
                    )),
                    t.length && Wn.debug("removed downloads with specific a streamId", {
                        streamId: e.data.streamId,
                        removedDownloads: t
                    });
                    var n = zn(e.data.streamId);
                    delete c[n],
                    u[n] = 0,
                    k()
                }
                function v(r) {
                    F.validateNotificationData(r, ["bufferId", "currentId", "playPosition"]),
                    "video" === r.data.bufferId.substr(0, 5) && (e = r.data.currentId,
                    t = r.data.playPosition,
                    n = r.data.videoTagSegmentId || null)
                }
                function h(e) {
                    F.validateNotificationData(e, ["streamId"]);
                    var t = un(e.data.streamId);
                    d[t.mediaType] = t.hash
                }
                function y(e) {
                    F.validateNotificationData(e, ["streamId"]),
                    T(e.data.streamId)
                }
                function b(e) {
                    F.validateNotificationData(e, ["streamId"]),
                    T(e.data.streamId)
                }
                function T(e) {
                    var t = un(e);
                    d[t.mediaType] = void 0,
                    N()
                }
                function S(e) {
                    F.validateNotificationData(e, ["loaderId"]),
                    o = o.filter((function(t) {
                        return t.loaderId !== e.data.loaderId
                    }
                    )),
                    k(),
                    C()
                }
                function O(e) {
                    F.validateNotificationData(e, ["segmentId", "streamId", "contentType"]);
                    var t = zn(e.data.streamId);
                    u[t] = u[t] ? u[t] + 1 : 1;
                    var n = 1e3 * u[t];
                    !function(e, t) {
                        c[e] = Xn() + t
                    }(t, n),
                    P(e.data),
                    r || (r = setTimeout((function() {
                        r = void 0,
                        C()
                    }
                    ), n))
                }
                function L() {
                    i = !1
                }
                function A() {
                    var e;
                    do {
                        e = He(5)
                    } while (!I(e));
                    return e
                }
                function I(e) {
                    return o.every((function(t) {
                        return t.loaderId !== e
                    }
                    ))
                }
                function _(e) {
                    F.validateNotificationData(e, ["streamId"]);
                    var t = zn(e.data.streamId);
                    u[t] = 0
                }
                function P(e) {
                    var t = zn(e.streamId);
                    s.push({
                        segmentId: e.segmentId,
                        mediaType: t,
                        streamId: e.streamId,
                        contentType: e.contentType
                    })
                }
                function D() {
                    return Object.getOwnPropertyNames(d).some((function(e) {
                        return !!d[e]
                    }
                    ))
                }
                function w() {
                    return n && !i ? n : e || 0
                }
                function N() {
                    var e = []
                      , t = w();
                    s = s.filter((function(n) {
                        return !(n.segmentId < t && (e.push(n),
                        1))
                    }
                    )),
                    e.length && Wn.debug("removed downloads which are passed by the play position", {
                        removedDownloads: e
                    }),
                    k()
                }
                function C() {
                    for (var e, n, r, a, i, u = (r = D() && function() {
                        var e, n = (e = (X.representations || []).find((function(e) {
                            return "active" === e.status && "video" === zn(e.streamId)
                        }
                        ))) ? e.streamId : void 0;
                        if (!n)
                            return !1;
                        var r = l.getSegmentStorage(n)
                          , a = t + z.get(j.QUALITY_SWITCH_BUFFER_THRESHOLD)
                          , i = r.getSegmentWithKeyframe(a);
                        return !!i && i.segmentId
                    }(),
                    a = w(),
                    D() ? function(e, t, n) {
                        var r = Gn(n || e);
                        return function(e, n) {
                            var a = t[e.mediaType] === e.streamId
                              , i = t[n.mediaType] === n.streamId;
                            return a && !i ? -1 : !a && i ? 1 : r(e, n)
                        }
                    }(a, d, r) : Gn(a)); s.length && o.length < z.get(j.CONCURRENT_DOWNLOAD_COUNT) - Object.getOwnPropertyNames(c).filter(U).length; ) {
                        if (!(e = s.filter((function(e) {
                            return !U(e.mediaType)
                        }
                        )).sort(u)).length)
                            return void Wn.debug("resortedQueue is empty", {
                                locks: c,
                                queue: s
                            });
                        Wn.debug("resorted the queue before downloading a segment", {
                            resortedQueue: e
                        }),
                        (n = e.shift()).loaderId = A(),
                        n.url = M(n.streamId, n.segmentId),
                        n.url && (o.push(n),
                        i = n,
                        s.splice(s.indexOf(i), 1),
                        Qn(p.LOAD_SEGMENT, n))
                    }
                    k()
                }
                function U(e) {
                    if (!Object.hasOwnProperty.call(c, e))
                        return !1;
                    var t = c[e];
                    return Xn() < t
                }
                function M(e, t) {
                    try {
                        return Zn(e, t)
                    } catch (n) {
                        return void Qn(p.CAN_NOT_CREATE_URL, {
                            streamId: e,
                            segmentId: t,
                            reason: n.message
                        })
                    }
                }
                function k() {
                    a.activeDownloaders = o,
                    a.queue = s
                }
                return F.addListener(p.REQUEST_SEGMENT, m),
                F.addListener(p.ABORT_DOWNLOAD, g),
                F.addListener(p.CONTENT_MOVED, v),
                F.addListener(p.SWITCH_STREAM, h),
                F.addListener(p.CANCEL_STREAM_SWITCH, y),
                F.addListener(R.STREAM_SWITCH, b),
                F.addListener(V.CLEANUP, (function e() {
                    F.removeListener(p.REQUEST_SEGMENT, m),
                    F.removeListener(p.ABORT_DOWNLOAD, g),
                    F.removeListener(p.CONTENT_MOVED, v),
                    F.removeListener(p.SWITCH_STREAM, h),
                    F.removeListener(p.CANCEL_STREAM_SWITCH, y),
                    F.removeListener(R.STREAM_SWITCH, b),
                    F.removeListener(V.CLEANUP, e),
                    F.removeListener(V.SEEK, f),
                    F.removeListener(E.FAILED, O),
                    F.removeListener(E.LOAD_COMPLETE, _),
                    F.removeListener(E.DESTROY, S),
                    F.removeListener(qe.SEEK, L),
                    l = null,
                    o = null,
                    s = null,
                    c = null,
                    r = clearTimeout(r),
                    u = null,
                    k(),
                    Qn(se.DESTROY)
                }
                )),
                F.addListener(V.SEEK, f),
                F.addListener(E.FAILED, O),
                F.addListener(E.LOAD_COMPLETE, _),
                F.addListener(E.DESTROY, S),
                F.addListener(qe.SEEK, L),
                l = kn.getInstance(),
                Qn(se.CREATE),
                a = {
                    name: Kn,
                    isMediaTypeLocked: U
                },
                k(),
                a
            }
              , $n = {
                decorate: function(e) {
                    var t, n = bn.create(e.bytes);
                    for (n.position = e.fourCC ? e.start + 8 : e.start,
                    e.boxes = []; n.position < e.start + e.length; )
                        (t = {}).start = n.position,
                        t.length = n.readUnsignedInt32(),
                        t.fourCC = n.readString(4),
                        t.bytes = e.bytes,
                        e.boxes.push(t),
                        n.position += t.length - 8
                }
            }
              , Jn = {
                decorate: function(e) {
                    function t() {
                        var t = bn.create(e.bytes);
                        t.position = e.start + 8,
                        e.version = t.readUnsignedByte(),
                        e.flags = function(e) {
                            return {
                                dataOffsetPresent: !!(1 & e),
                                firstSampleFlagsPresent: !!(4 & e),
                                sampleDurationsPresent: !!(256 & e),
                                sampleSizesPresent: !!(512 & e),
                                sampleFlagsPresent: !!(1024 & e),
                                sampleCompositionTimeOffsetsPresent: !!(2048 & e)
                            }
                        }(t.readUnsignedInt24()),
                        e.sampleCount = t.readUnsignedInt32(),
                        e.flags.dataOffsetPresent && (e.dataOffset = t.readUnsignedInt32()),
                        e.flags.firstSampleFlagsPresent && (e.firstSampleFlags = t.readUnsignedInt32()),
                        e.samples = [];
                        for (var n = 0; n < e.sampleCount; n += 1) {
                            var r = {};
                            e.flags.sampleDurationsPresent && (r.duration = t.readUnsignedInt32()),
                            e.flags.sampleSizesPresent && (r.size = t.readUnsignedInt32()),
                            e.flags.sampleFlagsPresent && (r.flags = t.readUnsignedInt32()),
                            e.flags.sampleCompositionTimeOffsetsPresent && (r.compositionTimeOffset = t.readUnsignedInt32()),
                            e.samples.push(r)
                        }
                    }
                    e.parseBytes = t,
                    e.writeBytes = function() {
                        e.flags = e.flags || {};
                        var t = 4 * e.flags.dataOffsetPresent
                          , n = 4 * e.flags.firstSampleFlagsPresent
                          , r = 4 * (e.flags && e.flags.sampleDurationsPresent) + 4 * (e.flags && e.flags.sampleSizesPresent) + 4 * (e.flags && e.flags.sampleFlagsPresent) + 4 * (e.flags && e.flags.sampleCompositionTimeOffsetsPresent);
                        e.length = 16 + t + n + e.sampleCount * r;
                        var a = bn.create(new Uint8Array(e.length));
                        a.writeUnsignedInt32(e.length),
                        a.writeString(e.fourCC),
                        a.writeUnsignedByte(e.version),
                        a.writeUnsignedInt24(function(e) {
                            var t = 0;
                            return t |= 1 * e.dataOffsetPresent,
                            t |= 4 * e.firstSampleFlagsPresent,
                            t |= 256 * e.sampleDurationsPresent,
                            t |= 512 * e.sampleSizesPresent,
                            (t |= 1024 * e.sampleFlagsPresent) | 2048 * e.sampleCompositionTimeOffsetsPresent
                        }(e.flags)),
                        a.writeUnsignedInt32(e.sampleCount),
                        e.flags.dataOffsetPresent && a.writeUnsignedInt32(e.dataOffset),
                        e.flags.firstSampleFlagsPresent && a.writeUnsignedInt32(e.firstSampleFlags);
                        for (var i = 0; i < e.sampleCount; i += 1)
                            e.flags.sampleDurationsPresent && a.writeUnsignedInt32(e.samples[i].duration),
                            e.flags.sampleSizesPresent && a.writeUnsignedInt32(e.samples[i].size),
                            e.flags.sampleFlagsPresent && a.writeUnsignedInt32(e.samples[i].flags),
                            e.flags.sampleCompositionTimeOffsetsPresent && a.writeUnsignedInt32(e.samples[i].compositionTimeOffset);
                        e.bytes = a.bytes,
                        e.start = 0
                    }
                    ,
                    t()
                }
            }
              , er = {
                fmov: $n,
                free: $n,
                mdia: $n,
                minf: $n,
                moof: $n,
                moov: $n,
                mvex: $n,
                stbl: $n,
                traf: $n,
                trak: $n,
                ustm: $n,
                fhst: {
                    decorate: function(e) {
                        function t() {
                            var t, n = bn.create(e.bytes);
                            n.position = e.start + 8,
                            e.hashes = [];
                            for (var r = 0; r < Math.floor((e.length - 8) / 4); r += 1)
                                t = n.readUnsignedInt32(),
                                e.hashes.push(Ze(t.toString(16), 8))
                        }
                        e.parseBytes = t,
                        t()
                    }
                },
                hash: {
                    decorate: function(e) {
                        function t() {
                            var t = bn.create(e.bytes);
                            t.position = e.start + 8;
                            var n = t.readUnsignedInt32();
                            e.hash = Ze(n.toString(16), 8)
                        }
                        e.parseBytes = t,
                        t()
                    }
                },
                idta: {
                    decorate: function(e) {
                        function t() {
                            var t = bn.create(e.bytes);
                            t.position = e.start + 8,
                            e.rawInit = t.readBytes(e.length - 8)
                        }
                        e.parseBytes = t,
                        t()
                    }
                },
                sidx: {
                    decorate: function(e) {
                        var t, n, r = bn.create(e.bytes);
                        r.position = e.start + 8,
                        e.version = r.readUnsignedByte(),
                        e.rawFlags = r.readUnsignedInt24(),
                        e.referenceId = r.readUnsignedInt32(),
                        e.timeScale = r.readUnsignedInt32(),
                        e.version ? (e.earliestPresentationTime = r.readUnsignedInt64(),
                        e.firstOffset = r.readUnsignedInt64()) : (e.earliestPresentationTime = r.readUnsignedInt32(),
                        e.firstOffset = r.readUnsignedInt32()),
                        r.readUnsignedInt16(),
                        e.referenceCount = r.readUnsignedInt16(),
                        e.references = [];
                        for (var a = 0; a < e.referenceCount; a += 1)
                            t = {},
                            n = r.readUnsignedInt32(),
                            t.referenceType = !!(2147483648 & n),
                            t.subsegmentSize = 2147483647 & n,
                            t.subsegmentDuration = r.readUnsignedInt32(),
                            n = r.readUnsignedInt32(),
                            t.containsRAP = !!(2147483648 & n),
                            t.rapType = (1879048192 & n) >>> 28,
                            t.rapDeltaTime = 268435455 & n,
                            e.references.push(t)
                    }
                },
                styp: {
                    decorate: function(e) {
                        var t = bn.create(e.bytes);
                        for (t.position = e.start + 8,
                        e.majorBrand = t.readString(4),
                        e.minorVersion = t.readUnsignedInt32(),
                        e.compatibleBrands = []; t.position < e.start + e.length; )
                            e.compatibleBrands.push(t.readString(4))
                    }
                },
                trun: Jn,
                tfdt: {
                    decorate: function(e) {
                        function t() {
                            var t = bn.create(e.bytes);
                            t.position = e.start + 8,
                            e.version = t.readUnsignedByte(),
                            e.rawFlags = t.readUnsignedInt24(),
                            e.version ? e.baseMediaDecodeTime = t.readUnsignedInt64() : e.baseMediaDecodeTime = t.readUnsignedInt32()
                        }
                        e.parseBytes = t,
                        e.writeBytes = function() {
                            e.length = 12 + (e.version ? 8 : 4);
                            var t = bn.create(new Uint8Array(e.length));
                            t.writeUnsignedInt32(e.length),
                            t.writeString(e.fourCC),
                            t.writeUnsignedByte(e.version),
                            t.writeUnsignedInt24(e.rawFlags),
                            e.version ? t.writeUnsignedInt64(e.baseMediaDecodeTime) : t.writeUnsignedInt32(e.baseMediaDecodeTime),
                            e.bytes = t.bytes,
                            e.start = 0
                        }
                        ,
                        t()
                    }
                },
                tfhd: {
                    decorate: function(e) {
                        function t() {
                            var t = bn.create(e.bytes);
                            t.position = e.start + 8,
                            e.version = t.readUnsignedByte(),
                            e.flags = function(e) {
                                return {
                                    baseDataOffsetPresent: !!(1 & e),
                                    sampleDescriptionIndexPresent: !!(2 & e),
                                    defaultSampleDurationPresent: !!(8 & e),
                                    defaultSampleSizePresent: !!(16 & e),
                                    defaultSampleFlagsPresent: !!(32 & e)
                                }
                            }(t.readUnsignedInt24()),
                            e.trackId = t.readUnsignedInt32(),
                            e.flags.baseDataOffsetPresent && (e.baseDataOffset = t.readUnsignedInt64()),
                            e.flags.sampleDescriptionIndexPresent && (e.sampleDescriptionIndex = t.readUnsignedInt32()),
                            e.flags.defaultSampleDurationPresent && (e.defaultSampleDuration = t.readUnsignedInt32()),
                            e.flags.defaultSampleSizePresent && (e.defaultSampleSize = t.readUnsignedInt32()),
                            e.flags.defaultSampleFlagsPresent && (e.defaultSampleFlags = t.readUnsignedInt32())
                        }
                        e.parseBytes = t,
                        e.writeBytes = function() {
                            e.flags = e.flags || {},
                            e.length = 16,
                            e.length += 8 * e.flags.baseDataOffsetPresent,
                            e.length += 4 * e.flags.sampleDescriptionIndexPresent,
                            e.length += 4 * e.flags.defaultSampleDurationPresent,
                            e.length += 4 * e.flags.defaultSampleSizePresent,
                            e.length += 4 * e.flags.defaultSampleFlagsPresent;
                            var t = bn.create(new Uint8Array(e.length));
                            t.writeUnsignedInt32(e.length),
                            t.writeString(e.fourCC),
                            t.writeUnsignedByte(e.version),
                            t.writeUnsignedInt24(function(e) {
                                var t = 0;
                                return t |= 1 * e.baseDataOffsetPresent,
                                t |= 2 * e.sampleDescriptionIndexPresent,
                                t |= 8 * e.defaultSampleDurationPresent,
                                (t |= 16 * e.defaultSampleSizePresent) | 32 * e.defaultSampleFlagsPresent
                            }(e.flags)),
                            t.writeUnsignedInt32(e.trackId),
                            e.flags.baseDataOffsetPresent && t.writeUnsignedInt64(e.baseDataOffset),
                            e.flags.sampleDescriptionIndexPresent && t.writeUnsignedInt32(e.sampleDescriptionIndex),
                            e.flags.defaultSampleDurationPresent && t.writeUnsignedInt32(e.defaultSampleDuration),
                            e.flags.defaultSampleSizePresent && t.writeUnsignedInt32(e.defaultSampleSize),
                            e.flags.defaultSampleFlagsPresent && t.writeUnsignedInt32(e.defaultSampleFlags),
                            e.bytes = t.bytes,
                            e.start = 0
                        }
                        ,
                        t()
                    }
                },
                mfhd: {
                    decorate: function(e) {
                        function t() {
                            var t = bn.create(e.bytes);
                            t.position = e.start + 8,
                            e.version = t.readUnsignedByte(),
                            e.rawFlags = t.readUnsignedInt24(),
                            e.sequenceNumber = t.readUnsignedInt32()
                        }
                        e.parseBytes = t,
                        e.writeBytes = function() {
                            e.length = 16;
                            var t = bn.create(new Uint8Array(e.length));
                            t.writeUnsignedInt32(e.length),
                            t.writeString(e.fourCC),
                            t.writeUnsignedByte(e.version),
                            t.writeUnsignedInt24(e.rawFlags),
                            t.writeUnsignedInt32(e.sequenceNumber),
                            e.bytes = t.bytes,
                            e.start = 0
                        }
                        ,
                        t()
                    }
                }
            }
              , tr = l.create("MP4Parser");
            function nr(e) {
                var t = e.fourCC ? er[e.fourCC] : $n;
                if (t && (t.decorate(e),
                e.boxes)) {
                    for (var n = 0; n < e.boxes.length; n += 1)
                        nr(e.boxes[n]);
                    e.boxes.length && (delete e.bytes,
                    delete e.start,
                    delete e.length)
                }
            }
            function rr(e) {
                if (e.bytes)
                    return e.length;
                if (e.boxes) {
                    for (var t = e.fourCC ? 8 : 0, n = 0; n < e.boxes.length; n += 1)
                        t += rr(e.boxes[n]);
                    return t
                }
                return 0
            }
            function ar(e, t) {
                if (t.bytes)
                    e.writeBytes(bn.slice(t.bytes, t.start, t.length));
                else if (t.boxes) {
                    t.fourCC && (e.writeUnsignedInt32(rr(t)),
                    e.writeString(t.fourCC));
                    for (var n = 0; n < t.boxes.length; n += 1)
                        ar(e, t.boxes[n])
                } else
                    tr.error("error writing ".concat(t.fourCC, ", no bytes/boxes"))
            }
            var ir = function(e) {
                var t = {
                    bytes: e,
                    start: 0,
                    length: e.length
                };
                return nr(t),
                t
            }
              , or = function(e) {
                var t = bn.create(new Uint8Array(rr(e)));
                return ar(t, e),
                t.bytes
            };
            function sr(e, t) {
                for (var n = 0; n < e.boxes.length; n += 1)
                    if (e.boxes[n].fourCC === t)
                        return e.boxes[n];
                return null
            }
            var cr = {
                getBoxByPath: function(e, t) {
                    for (var n = t.split("."); e && n.length; )
                        e = sr(e, n.shift());
                    return e
                },
                getBoxByFourCC: sr
            }
              , ur = function(e) {
                return {
                    sampleDegradationPriority: 65535 & e,
                    sampleIsDifferenceSample: !!(e >>> 16 & 1),
                    samplePaddingValue: e >>> 17 & 7,
                    sampleHasRedundancy: e >>> 20 & 3,
                    sampleIsDependedOn: e >>> 22 & 3,
                    sampleDependsOn: e >>> 24 & 3,
                    reserved: e >>> 26 & 63
                }
            }
              , dr = function(e) {
                var t = 0;
                return t |= 65535 & e.sampleDegradationPriority,
                t |= +e.sampleIsDifferenceSample << 16,
                t |= (7 & e.samplePaddingValue) << 17,
                t |= (3 & e.sampleHasRedundancy) << 20,
                t |= (3 & e.sampleIsDependedOn) << 22,
                (t |= (3 & e.sampleDependsOn) << 24) | (63 & e.reserved) << 26
            };
            function lr(e, t) {
                for (var n = t.baseMediaDecodeTime, r = 0; r < e.sampleCount; r += 1)
                    n += e.samples[r].duration;
                return n
            }
            function fr(e, t) {
                for (var n = [], r = 0; r < e.length; r += 1)
                    n.push(cr.getBoxByPath(e[r], t));
                return n
            }
            var pr = "Buffer"
              , mr = function(e, t, n) {
                var r, a, i, o, s, c = "".concat(pr, ".").concat(e), u = l.create(c), d = t, f = !0, m = {}, g = [];
                function v(e, t) {
                    F.dispatch(e, pr, t)
                }
                function E(e) {
                    F.validateNotificationData(e, ["position"]),
                    a && (S(),
                    L()),
                    o.getSegmentStorage(d).setTimePosition(e.data.position),
                    I()
                }
                function h(t) {
                    F.validateNotificationData(t, ["bufferId", "streamId", "position"]),
                    t.data.bufferId === e && (r = t.data.position,
                    a = t.data.streamId,
                    t.data.streamId.indexOf("text") > -1 && I())
                }
                function y(t) {
                    F.validateNotificationData(t, ["bufferId"]),
                    t.data.bufferId === e && (r = void 0,
                    a = void 0)
                }
                function b() {
                    if (ut && !e.includes("text")) {
                        u.debug("request append config", {
                            bufferId: e
                        });
                        var t = o.getSegmentStorage(d).getConfigForHash(i);
                        t ? v(R.APPEND, {
                            streamId: d,
                            bufferId: e,
                            start: 0,
                            end: 0,
                            duration: 0,
                            bytes: t
                        }) : i = void 0
                    }
                }
                function T(t) {
                    if (F.validateNotificationData(t, ["bufferId"]),
                    t.data.bufferId === e) {
                        var s, c = o.getSegmentStorage(d);
                        if (function() {
                            if (!a)
                                return !1;
                            if (d.indexOf("text") > -1)
                                return !0;
                            var e = o.getSegmentStorage(d).activeFragmentStartTime;
                            if (e === _e)
                                return !1;
                            var t = o.getSegmentStorage(a);
                            return t.setTimePosition(e),
                            t.activeFragmentStartTime !== _e && t.nextFragmentStartTime >= r && t.nextFragmentContainsRAP
                        }())
                            return void S();
                        for (; c && c.hasNextFragment && !s; )
                            s = c.getNextFragment(),
                            f && !s.containsRAP ? s = null : f = !1;
                        s && (function(t) {
                            var n = o.getSegmentStorage(d);
                            i !== t.hash && n.getConfigForHash(t.hash) && (u.info("appending config", {
                                streamId: d,
                                fragmentHash: t.hash,
                                fragmentStart: t.start
                            }),
                            v(R.APPEND, {
                                streamId: d,
                                bufferId: e,
                                start: t.start,
                                end: t.end,
                                duration: t.duration,
                                bytes: n.getConfigForHash(t.hash)
                            }),
                            i = t.hash)
                        }(s),
                        function(t) {
                            var r = o.getSegmentStorage(d)
                              , a = t.bytes
                              , i = {
                                start: t.start,
                                end: t.end
                            };
                            "video" === n.substr(0, 5) && (t.containsRAP ? r.hasNextFragment && !r.nextFragmentContainsRAP && (a = function(e, t) {
                                var n, r = o.getSegmentStorage(d), a = [];
                                for (u.debug("merging subsequent fragments without RAP"); r.hasNextFragment && !r.nextFragmentContainsRAP; )
                                    n = r.getNextFragment(),
                                    e.end = n.end,
                                    a.push(n.bytes);
                                return function(e) {
                                    var t = function(e) {
                                        for (var t = [], n = 0; n < e.length; n += 1)
                                            t.push(ir(e[n]));
                                        return t
                                    }(e)
                                      , n = t.shift()
                                      , r = cr.getBoxByPath(n, "moof.traf.trun")
                                      , a = cr.getBoxByPath(n, "moof.traf.tfdt")
                                      , i = r.length;
                                    !function(e, t, n) {
                                        for (var r, a = fr(n, "moof.traf.trun"), i = fr(n, "moof.traf.tfdt"), o = 0; o < a.length; o += 1)
                                            r = lr(e, t),
                                            e.samples[e.sampleCount - 1].duration += i[o].baseMediaDecodeTime - r,
                                            e.samples = e.samples.concat(a[o].samples),
                                            e.sampleCount = e.samples.length
                                    }(r, a, t),
                                    r.writeBytes(),
                                    r.dataOffset += r.length - i,
                                    r.writeBytes();
                                    var o = cr.getBoxByFourCC(n, "mdat");
                                    return o.bytes = function(e) {
                                        var t, n, r = 8;
                                        for (t = 0; t < e.length; t += 1)
                                            r += cr.getBoxByFourCC(e[t], "mdat").length - 8;
                                        var a = bn.create(new Uint8Array(r));
                                        a.writeUnsignedInt32(r),
                                        a.writeString("mdat");
                                        var i = [];
                                        for (t = 0; t < e.length; t += 1) {
                                            n = cr.getBoxByFourCC(e[t], "mdat");
                                            var o = bn.slice(n.bytes, n.start + 8, n.length - 8);
                                            i.push(o),
                                            a.writeBytes(o)
                                        }
                                        return a.bytes
                                    }([n].concat(t)),
                                    o.start = 0,
                                    o.length = o.bytes.length,
                                    or(n)
                                }([t].concat(a))
                            }(i, a)) : (a = function(e) {
                                var t = ir(e)
                                  , n = cr.getBoxByPath({
                                    boxes: t.boxes
                                }, "moof.traf.trun")
                                  , r = function(e) {
                                    return e.flags.sampleFlagsPresent ? ur(e.samples[0].flags) : e.flags.firstSampleFlagsPresent ? ur(e.firstSampleFlags) : null
                                }(n);
                                return r.sampleIsDifferenceSample && (r.sampleIsDifferenceSample = !1,
                                r.sampleDependsOn = 2,
                                function(e, t) {
                                    e.flags.sampleFlagsPresent ? e.samples[0].flags = dr(t) : e.flags.firstSampleFlagsPresent && (e.firstSampleFlags = dr(t)),
                                    e.writeBytes()
                                }(n, r)),
                                or(t)
                            }(a),
                            v(p.MISSING_RAP_AT_RANGE, {
                                start: t.start,
                                end: t.end
                            }))),
                            g.push(i),
                            v(R.APPEND, {
                                streamId: d,
                                bufferId: e,
                                start: t.start,
                                end: t.end,
                                duration: t.duration,
                                bytes: a
                            })
                        }(s))
                    }
                }
                function S() {
                    if (d = a,
                    a = void 0,
                    r = void 0,
                    u.info("switching stream"),
                    d.indexOf("text") > -1)
                        L();
                    else {
                        var e = o.getSegmentStorage(d);
                        s = e.activeFragmentStartTime
                    }
                }
                function L() {
                    s = void 0,
                    v(R.STREAM_SWITCH, {
                        bufferId: e,
                        streamId: d
                    })
                }
                function A(t) {
                    if (F.validateNotificationData(t, ["position"]),
                    void 0 !== s && s <= t.data.position && L(),
                    g.length && t.data.position - 3e4 > g[0].start) {
                        for (var n = g.shift(), r = t.data.position - 5e3; g.length && g[0].end < r; )
                            n.end = g.shift().end;
                        v(R.REMOVE, {
                            streamId: d,
                            bufferId: e,
                            start: n.start,
                            end: n.end
                        })
                    }
                }
                function I() {
                    g = [],
                    v(R.PURGE, {
                        streamId: d,
                        bufferId: e
                    })
                }
                function _(t) {
                    e === t.data.bufferId && (v(R.BUFFER_UPDATING, {
                        bufferId: e
                    }),
                    v(R.BUFFER_UPDATED, {
                        bufferId: e,
                        ranges: g = [{
                            start: 0,
                            end: 0
                        }]
                    }))
                }
                return F.addListener(V.SEEK, E),
                F.addListener(p.SWITCH_STREAM, h),
                F.addListener(p.CANCEL_STREAM_SWITCH, y),
                F.addListener(wt.TEXT_TRACK_ADDED, b),
                F.addListener(N.APPEND_TO_BUFFER, T),
                F.addListener(N.BUFFER_REMOVED, (function t(n) {
                    F.validateNotificationData(n, ["bufferId"]),
                    n.data.bufferId === e && (F.removeListener(V.SEEK, E),
                    F.removeListener(p.SWITCH_STREAM, h),
                    F.removeListener(p.CANCEL_STREAM_SWITCH, y),
                    F.removeListener(wt.TEXT_TRACK_ADDED, b),
                    F.removeListener(N.APPEND_TO_BUFFER, T),
                    F.removeListener(N.BUFFER_REMOVED, t),
                    F.removeListener(O.POSITION, A),
                    F.removeListener(R.BUFFER_CLEAR, _),
                    d = null,
                    a = null,
                    o = null,
                    s = void 0)
                }
                )),
                F.addListener(O.POSITION, A),
                F.addListener(R.BUFFER_CLEAR, _),
                o = kn.getInstance(),
                m.bufferId = e,
                m.contentType = n,
                m
            };
            function gr(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var n = 0, r = new Array(t); n < t; n++)
                    r[n] = e[n];
                return r
            }
            var vr = "BufferManager"
              , Er = l.create(vr);
            function hr(e, t) {
                F.dispatch(e, vr, t)
            }
            var yr = function(e, t) {
                return Math.floor(1e3 * function(e, t) {
                    return e / t
                }(e, t))
            }
              , br = ["moof", "mdat"]
              , Tr = l.create("FragmentExtractor");
            function Sr(e, t, n, r) {
                var a = cr.getBoxByPath({
                    boxes: e
                }, "moof.traf.tfdt")
                  , i = cr.getBoxByPath({
                    boxes: e
                }, "moof.traf.trun");
                if (a && i) {
                    var o = yr(a.baseMediaDecodeTime, n)
                      , s = yr(t.subsegmentDuration, n);
                    return {
                        start: o,
                        duration: s,
                        end: o + s,
                        bytes: or({
                            boxes: e
                        }),
                        containsRAP: !!t.containsRAP,
                        rapType: t.rapType,
                        rapDeltaTime: t.rapDeltaTime,
                        sampleCount: i.samples.length,
                        hash: r
                    }
                }
                Tr.warn("a mandatory box is missing from the fragment, skip parsing.", {
                    hash: r
                })
            }
            function Or(e, t, n) {
                F.dispatch(E.CONFIG, "ConfigExtractor", {
                    config: e,
                    hash: t,
                    streamId: n
                })
            }
            var Lr = function(e, t, n, r) {
                var a, i = 0, o = [], s = 0, c = _e, u = _e, d = 0;
                function l() {
                    return n && n.length
                }
                function f() {
                    return l() && (0 === i || i - 1 < n.length)
                }
                function p() {
                    if (f())
                        return n[0 === i ? i : i - 1]
                }
                function m() {
                    return l() && i < n.length
                }
                function g() {
                    i = 0,
                    v()
                }
                function v() {
                    var e;
                    a.hasActiveFragment = f(),
                    a.activeFragmentStartTime = (e = p()) ? e.start : _e,
                    a.hasNextFragment = m(),
                    a.hasNextRAPFragment = function() {
                        for (var e = i; e < n.length; ) {
                            if (n[e].containsRAP)
                                return !0;
                            e += 1
                        }
                        return !1
                    }(),
                    a.nextFragmentContainsRAP = !!m() && n[i].containsRAP,
                    a.nextFragmentStartTime = m() ? n[i].start : _e
                }
                return function() {
                    for (var e = 0; n && e < n.length; e += 1)
                        (n[e].containsRAP || "audio" === t.split(":")[0]) && o.push(n[e].start),
                        s += n[e].bytes.length;
                    l() && (c = n[0].start,
                    u = n[n.length - 1].start + n[n.length - 1].duration,
                    d = u - c)
                }(),
                a = {
                    getActiveFragment: p,
                    lastSegment: !!r,
                    getNextFragment: function() {
                        var e = m() ? n[i++] : void 0;
                        return v(),
                        e
                    },
                    setTimePosition: function(e) {
                        g();
                        for (var t = 0; n && t < n.length; t += 1)
                            if (n[t].containsRAP) {
                                if (!(n[t].start <= e))
                                    break;
                                i = t
                            }
                        v()
                    },
                    reset: g,
                    segmentId: e,
                    streamId: t,
                    fragments: n,
                    size: s,
                    keyFrames: o,
                    firstTimestamp: c,
                    lastTimestamp: u,
                    duration: d
                },
                v(),
                a
            }
              , Ar = "MP4SegmentWrapper"
              , Ir = ["video/mp4", "audio/mp4"]
              , _r = function() {
                var e = l.create(Ar);
                function t(e, t) {
                    F.dispatch(e, Ar, t)
                }
                function n(n) {
                    F.validateNotificationData(n, ["segmentId", "streamId", "raw", "contentType"]),
                    -1 !== Ir.indexOf(n.data.contentType) && (0 === n.data.raw.length ? (e.warn("zero byte segment", {
                        streamId: n.data.streamId,
                        segmentId: n.data.segmentId
                    }),
                    function(e) {
                        var n = Lr(e.segmentId, e.streamId, []);
                        t(E.EMPTY_SEGMENT, {
                            segment: n,
                            streamId: e.streamId,
                            segmentId: e.segmentId
                        })
                    }({
                        segmentId: n.data.segmentId,
                        streamId: n.data.streamId
                    })) : function(n) {
                        var r, a, i, o = ir(n.raw);
                        (function(e, t) {
                            !function(e, t) {
                                for (var n, r = 0; t && r < t.boxes.length; r += 1)
                                    "fmov" === t.boxes[r].fourCC && (n = cr.getBoxByFourCC(t.boxes[r], "hash"),
                                    Or(cr.getBoxByFourCC(t.boxes[r], "idta").rawInit, n.hash, e))
                            }(e, cr.getBoxByPath(t, "free.ustm"))
                        }
                        )(n.streamId, o),
                        cr.getBoxByFourCC(o, "styp") && (r = function(e, t) {
                            for (var n, r, a, i = cr.getBoxByFourCC(t, "sidx"), o = [], s = [], c = function(e, t) {
                                var n = [e]
                                  , r = cr.getBoxByPath(t, "free.ustm.fhst");
                                return r && (n = r.hashes),
                                n
                            }(e, t), u = 0; u < t.boxes.length; u += 1)
                                r = t.boxes[u],
                                -1 !== br.indexOf(r.fourCC) && (s.push(r),
                                br.indexOf(r.fourCC) === br.length - 1 && (a = c[Math.min(o.length, c.length - 1)],
                                (n = Sr(s, i.references[o.length], i.timeScale, a)) && o.push(n),
                                s = []));
                            return o
                        }(n.streamId, o),
                        i = function(e) {
                            var t = !1
                              , n = cr.getBoxByFourCC(e, "styp");
                            return n && (t = -1 !== n.compatibleBrands.indexOf("lmsg")),
                            t
                        }(o),
                        a = Lr(n.segmentId, n.streamId, r, i),
                        e.debug("process segment", {
                            streamId: n.streamId,
                            segmentId: n.segmentId,
                            firstTimestamp: a.firstTimestamp,
                            lastTimestamp: a.lastTimestamp,
                            duration: a.duration,
                            keyFrames: a.keyFrames,
                            lastSegment: a.lastSegment
                        }),
                        t(E.SEGMENT, {
                            segment: a,
                            streamId: n.streamId,
                            segmentId: n.segmentId,
                            firstTimestamp: a.firstTimestamp,
                            lastTimestamp: a.lastTimestamp,
                            duration: a.duration,
                            keyFrames: a.keyFrames
                        }))
                    }({
                        segmentId: n.data.segmentId,
                        streamId: n.data.streamId,
                        raw: n.data.raw
                    }))
                }
                return F.addListener(V.CLEANUP, (function e() {
                    F.removeListener(V.CLEANUP, e),
                    F.removeListener(E.RAW, n),
                    t(se.DESTROY)
                }
                )),
                F.addListener(E.RAW, n),
                t(se.CREATE),
                {
                    name: Ar
                }
            }
              , Pr = " --\x3e "
              , Dr = new RegExp("([0-9:.]+)".concat(Pr, "([0-9.:]+)(.*)"));
            function Rr(e) {
                var t = e.replace(/[^0-9.:]/gi, "").split(":");
                return 60 * Number(t[0]) * 60 + 60 * Number(t[1]) + Number(t[2])
            }
            var wr, Nr = "VTTSegmentWrapper", Cr = [i.VTT], Ur = function() {
                var e = l.create(Nr);
                function t(e, t) {
                    F.dispatch(e, Nr, t)
                }
                function n(n) {
                    F.validateNotificationData(n, ["segmentId", "streamId", "raw", "contentType"]),
                    -1 !== Cr.indexOf(n.data.contentType) && function(n) {
                        var r = function(e, t) {
                            for (var n = []; e.length; ) {
                                var r = e.shift()
                                  , a = 1e3 * r.start
                                  , i = 1e3 * r.end
                                  , o = r.payload.join("\n");
                                n.push({
                                    start: a,
                                    duration: i - a,
                                    end: i,
                                    bytes: {
                                        id: r.id,
                                        meta: r.meta,
                                        text: o,
                                        length: o.length
                                    },
                                    containsRAP: !0,
                                    rapType: 0,
                                    rapDeltaTime: 0,
                                    sampleCount: r.payload.length,
                                    hash: t
                                })
                            }
                            return n
                        }(function(e) {
                            var t = []
                              , n = e.replace(/\r\n/g, "\n").split("\n\n")
                              , r = function(e) {
                                for (var t = 0; t < e.length; ) {
                                    var n = e[t];
                                    if (Dr.test(n))
                                        return t;
                                    t += 1
                                }
                                return -1
                            }(n);
                            return -1 === !r || (t = n.slice(r).map((function(e) {
                                return e.split("\n").filter((function(e) {
                                    return "" !== e
                                }
                                ))
                            }
                            )).filter((function(e) {
                                return e.length >= 2
                            }
                            )).map((function(e) {
                                return n = function(e) {
                                    var t = e.filter((function(e) {
                                        return new RegExp(Pr).test(e)
                                    }
                                    ));
                                    return e.indexOf(t[0])
                                }(t = e),
                                r = 0 === n ? null : t[0],
                                a = n + 1,
                                o = (i = t[n].match(Dr))[1],
                                s = i[2],
                                c = i[3] ? function(e) {
                                    return e.split(" ").filter((function(e) {
                                        return !!e
                                    }
                                    )).reduce((function(e, t) {
                                        var n, r = t.split(":");
                                        switch (r[0]) {
                                        case "A":
                                            r[0] = "align";
                                            break;
                                        case "T":
                                            r[0] = "position";
                                            break;
                                        case "L":
                                            r[0] = "line";
                                            break;
                                        case "S":
                                            r[0] = "size";
                                            break;
                                        case "D":
                                            r[0] = "vertical"
                                        }
                                        return e[r[0]] = function(e) {
                                            return /%$/.test(e)
                                        }(n = r[1]) ? +n.slice(0, -1) : parseInt(n, 10) || n,
                                        e
                                    }
                                    ), {})
                                }(i[3]) : null,
                                u = t.slice(a).filter((function(e) {
                                    return "" !== e
                                }
                                )),
                                {
                                    id: r,
                                    start: Rr(o),
                                    end: Rr(s),
                                    payload: u,
                                    meta: c
                                };
                                var t, n, r, a, i, o, s, c, u
                            }
                            ))),
                            t
                        }(n.raw), n.streamId)
                          , a = Lr(n.segmentId, n.streamId, r);
                        e.debug("process segment", {
                            segment: a,
                            streamId: n.streamId,
                            segmentId: n.segmentId,
                            firstTimestamp: a.firstTimestamp,
                            lastTimestamp: a.lastTimestamp,
                            duration: a.duration,
                            keyFrames: a.keyFrames
                        }),
                        t(E.SEGMENT, {
                            segment: a,
                            streamId: n.streamId,
                            segmentId: n.segmentId,
                            firstTimestamp: a.firstTimestamp,
                            lastTimestamp: a.lastTimestamp,
                            duration: a.duration,
                            keyFrames: a.keyFrames
                        })
                    }({
                        segmentId: n.data.segmentId,
                        streamId: n.data.streamId,
                        raw: n.data.raw
                    })
                }
                return F.addListener(V.CLEANUP, (function e() {
                    F.removeListener(V.CLEANUP, e),
                    F.removeListener(E.RAW, n),
                    t(se.DESTROY)
                }
                )),
                F.addListener(E.RAW, n),
                t(se.CREATE),
                {
                    name: Nr
                }
            }, Mr = "BroadcasterTimer", Fr = l.create(Mr), jr = "ContentRangeLive";
            function kr() {
                return (new Date).getTime()
            }
            var Gr = function(e) {
                var t, n, r, a, i, o = e.bufferId, s = e.segmentLength, c = (wr || (wr = function() {
                    var e, t, n = v(), r = 0, a = [];
                    function i() {
                        Fr.info("destroyed"),
                        F.removeListener(V.PAUSE, d),
                        F.removeListener(V.SUSPEND, d),
                        F.removeListener(V.RESUME, l),
                        F.removeListener(V.WAKE, l),
                        F.removeListener(V.SET_OPTION, f),
                        F.removeListener(V.CLEANUP, i),
                        F.removeListener(p.FINISHED, m),
                        o()
                    }
                    function o() {
                        c(),
                        a = [],
                        r = 0,
                        t = void 0,
                        wr = null
                    }
                    function s() {
                        e = setInterval(g, n)
                    }
                    function c() {
                        clearInterval(e)
                    }
                    function u() {
                        return (new Date).getTime()
                    }
                    function d() {
                        c()
                    }
                    function l() {
                        s()
                    }
                    function f(e) {
                        F.validateNotificationData(e, ["name"]),
                        e.data.name === j.MOVING_WINDOW_INTERVAL_DELAY && (n = v(),
                        c(),
                        s())
                    }
                    function m() {
                        c()
                    }
                    function g() {
                        var e = t ? u() - t : n;
                        r += e,
                        t = u(),
                        F.dispatch(p.BROADCASTER_TIME_UPDATE, Mr, {
                            position: r,
                            bufferIds: a
                        })
                    }
                    function v() {
                        return z.get(j.MOVING_WINDOW_INTERVAL_DELAY)
                    }
                    return F.addListener(V.PAUSE, d),
                    F.addListener(V.SUSPEND, d),
                    F.addListener(V.RESUME, l),
                    F.addListener(V.WAKE, l),
                    F.addListener(V.SET_OPTION, f),
                    F.addListener(V.CLEANUP, i),
                    F.addListener(p.FINISHED, m),
                    s(),
                    {
                        startInterval: s,
                        reset: o,
                        destroy: i,
                        tickAhead: function(e) {
                            r = Math.max(0, r + e)
                        },
                        getPosition: function() {
                            return r
                        },
                        setMovingWindow: g,
                        addBufferId: function(e) {
                            a.push(e)
                        }
                    }
                }()),
                wr), u = l.create("".concat(jr, ".").concat(o)), d = Date.now() - e.lastStreamModuleReceived, f = e.segmentStartId + Math.floor((d || 0) / s), m = f, g = f, v = e.segmentStartId + Math.floor((e.contentLength || 0) / s), E = f, h = e.contentLength ? 0 : null;
                function y(e) {
                    F.validateNotificationData(e, ["position"]),
                    T(e.data.position)
                }
                function b(e) {
                    F.validateNotificationData(e, ["position"]),
                    T(e.data.position)
                }
                function T(e) {
                    a = kr(),
                    m = L(r = e) || null,
                    c.setMovingWindow()
                }
                function S(e) {
                    if (F.validateNotificationData(e, ["position", "bufferIds"]),
                    e.data.bufferIds.includes(o)) {
                        var t = E
                          , n = h;
                        if (a) {
                            var i = kr() - a
                              , c = r + i;
                            c >= h && (h = c)
                        }
                        (X.firstReferenceId || 0 === X.firstReferenceId) && (E = X.firstReferenceId + Math.floor(e.data.position / s),
                        g = E - 10,
                        v = E + 1),
                        A(),
                        (t !== E || n !== h) && F.dispatch(p.CONTENT_MOVED, jr, {
                            bufferId: o,
                            currentId: E,
                            playPosition: h,
                            videoTagSegmentId: m
                        })
                    }
                }
                function L(e) {
                    if ("number" != typeof n || "number" != typeof e)
                        return E;
                    var r = e - n;
                    return Math.max(0, t + Math.floor(r / s))
                }
                function A() {
                    i.startId = g,
                    i.endId = v,
                    i.currentId = E,
                    i.playPosition = h
                }
                return F.addListener(O.POSITION, y, F.MAXIMUM_PRIORITY),
                F.addListener(P.STALLED, b, F.MAXIMUM_PRIORITY),
                F.addListener(V.SEEK, y, F.MAXIMUM_PRIORITY),
                F.addListener(p.BROADCASTER_TIME_UPDATE, S),
                c.addBufferId(o),
                i = {
                    setReferencePoint: function(e, r) {
                        t = e,
                        n = r,
                        X.firstReferencePosition = X.firstReferencePosition || n,
                        X.firstReferenceId = X.firstReferenceId || t
                    },
                    getSegmentIdForPosition: function(e) {
                        c.setMovingWindow();
                        var t = L(e);
                        return t >= g && t <= v ? t : void 0
                    },
                    setContentEnd: function(e) {
                        v = e,
                        A()
                    },
                    broadcasterTickAhead: c.tickAhead,
                    destroy: function() {
                        u.info("destroyed"),
                        F.removeListener(O.POSITION, y),
                        F.removeListener(V.SEEK, y),
                        F.removeListener(P.STALLED, b),
                        F.removeListener(p.BROADCASTER_TIME_UPDATE, S),
                        g = null,
                        v = null,
                        E = null,
                        t = null,
                        n = null,
                        r = null,
                        a = null,
                        A()
                    },
                    getPlayPosition: function() {
                        return h
                    }
                },
                A(),
                i
            }
              , Br = "ContentRangeRecorded"
              , Vr = "livePauseHandler"
              , xr = null
              , Hr = null;
            function Zr(e, t) {
                return t.findIndex((function(t) {
                    var n = t.start
                      , r = t.end;
                    return n <= e && e <= r
                }
                ))
            }
            var Yr, Kr = function(e, t) {
                var n, r, a;
                function i(t) {
                    n = t.data.position,
                    r = e.getSegmentIdForPosition(n),
                    F.addListener(y.SEGMENT_STORAGE_UPDATED, s)
                }
                function o(e, t) {
                    return e.start <= t && e.end >= t
                }
                function s(e) {
                    F.validateNotificationData(e, ["streamId", "ranges", "ids"]),
                    a === e.data.streamId && function(e) {
                        var t = function(e) {
                            var t = e.ids.findIndex((function(e) {
                                return o(e, r)
                            }
                            ));
                            return e.ranges[t]
                        }(e);
                        0 !== (t ? Math.abs(t.end - t.start) : 0) && (o(t, n) ? c() : function(e) {
                            var t = function(e) {
                                return e.start > n ? e.start : e.end
                            }(e);
                            Yr.getSegmentStorage(a).setTimePosition(t),
                            c()
                        }(t))
                    }({
                        ranges: e.data.ranges,
                        ids: e.data.ids
                    })
                }
                function c() {
                    n = null,
                    r = null,
                    F.removeListener(y.SEGMENT_STORAGE_UPDATED, s)
                }
                return a = t,
                Yr = kn.getInstance(),
                F.addListener(V.SEEK, i),
                {
                    setStreamId: function(e) {
                        a = e
                    },
                    destroy: function() {
                        return c(),
                        F.removeListener(V.SEEK, i),
                        a = null,
                        Yr = null,
                        null
                    }
                }
            }, Wr = function(e) {
                var t = e.bufferId
                  , n = e.representationsOptions
                  , r = e.lastStreamModuleReceived
                  , a = l.create("ContentLoader.".concat(t))
                  , i = !n.contentLength;
                X.startTime = X.startTime || (new Date).getTime(),
                X.isLive = i;
                var o, s, c, u, d, f, m, g, v = {}, h = {}, b = cn(n), S = 0, L = 0, A = 0;
                function I() {
                    F.removeListener(V.CLEANUP, I),
                    F.removeListener(V.SUSPEND, G),
                    F.removeListener(T.SEGMENT_MISSING, J),
                    F.removeListener(T.SEGMENT_MISSING_BY_ID, te),
                    F.removeListener(E.SEGMENT, W),
                    F.removeListener(E.EMPTY_SEGMENT, Q),
                    F.removeListener(E.FAILED, q),
                    F.removeListener(y.SEGMENT_STORAGE_UPDATED, K),
                    F.removeListener(p.CONTENT_MOVED, x),
                    F.removeListener(p.SWITCH_STREAM, H),
                    F.removeListener(p.CANCEL_STREAM_SWITCH, Z),
                    F.removeListener(R.STREAM_SWITCH, Y),
                    F.removeListener(V.PAUSE, M),
                    F.removeListener(V.SEEK, _),
                    F.removeListener(V.WAKE, B),
                    F.removeListener(E.SEGMENT, $),
                    o = o.destroy(),
                    s && (s = s.destroy()),
                    c = clearTimeout(c),
                    m = m.destroy(),
                    g && (g = g.destroy()),
                    v = {},
                    D(p.ABORT_DOWNLOAD, {
                        streamId: b
                    }),
                    d && D(p.ABORT_DOWNLOAD, {
                        streamId: d
                    })
                }
                function _(e) {
                    A = e.data.position,
                    U(),
                    F.removeListener(V.SEEK, _),
                    F.addListener(qe.SEEK, P, F.MINIMUM_PRIORITY),
                    F.addListener(O.SEEK_COMPLETED, P, F.MINIMUM_PRIORITY)
                }
                function P() {
                    F.addListener(p.CONTENT_MOVED, x),
                    F.addListener(V.PAUSE, M),
                    F.removeListener(qe.SEEK, P),
                    F.removeListener(O.SEEK_COMPLETED, P)
                }
                function D(e, t) {
                    F.dispatch(e, "ContentLoader", t)
                }
                function w(e, t, n) {
                    if (!function(e, t) {
                        return null !== C(e, t)
                    }(e, t)) {
                        var r = {
                            streamId: e,
                            segmentId: t,
                            contentType: h[e].contentType,
                            reason: n
                        };
                        D(p.REQUEST_SEGMENT, r)
                    }
                }
                function N(e, t, n) {
                    c = setTimeout((function() {
                        w(e, t, n)
                    }
                    ), 10)
                }
                function C(e, t) {
                    var n = v[e];
                    if (!n)
                        return null;
                    for (var r = n.ids, a = 0; a < r.length; a += 1) {
                        var i = r[a];
                        if (i.start <= t && t <= i.end)
                            return i
                    }
                    return null
                }
                function U() {
                    if (o) {
                        var e, t, n = function() {
                            var e = v[b];
                            if (!e)
                                return null;
                            if (!o)
                                return null;
                            var t, n, r, a = e.ranges, i = e.ids, s = (n = function(e) {
                                var t = e.start
                                  , n = e.end;
                                return A >= t && A <= n + 200
                            }
                            ,
                            -1 === (r = (t = a).slice().reverse().findIndex(n)) ? -1 : t.length - 1 - r);
                            return -1 === s ? null : i[s]
                        }();
                        if (n)
                            e = ee.remaining(o.playPosition, v[b].ranges),
                            t = n.end + 1;
                        else {
                            e = 0,
                            t = o.currentId;
                            var r = C(b, t);
                            r && (t = r.end + 1)
                        }
                        e < function() {
                            if (i)
                                return 1 / 0;
                            var e = z.get(j.CHUNK_PRELOAD_COUNT);
                            return h[b].segmentLength * e
                        }() && k(t) && (w(b, t, "check remaining time"),
                        d && t > f && w(d, t, "check remaining time while switching quality"))
                    }
                }
                function M() {
                    F.removeListener(V.SEEK, _),
                    F.removeListener(p.CONTENT_MOVED, x),
                    F.removeListener(V.PAUSE, M),
                    F.addListener(V.SEEK, _)
                }
                function k(e) {
                    return o.startId <= e && o.endId >= e
                }
                function G() {
                    F.removeListener(V.SUSPEND, G),
                    F.removeListener(p.CONTENT_MOVED, x),
                    F.addListener(V.WAKE, B)
                }
                function B() {
                    F.removeListener(V.WAKE, B),
                    F.addListener(p.CONTENT_MOVED, x),
                    F.addListener(V.SUSPEND, G)
                }
                function x(e) {
                    F.validateNotificationData(e, ["bufferId", "playPosition"]),
                    A = e.data.playPosition,
                    e.data.bufferId === t && U()
                }
                function H(e) {
                    if (F.validateNotificationData(e, ["bufferId", "streamId", "position"]),
                    e.data.bufferId === t) {
                        if (d === b)
                            return f = void 0,
                            void (d = void 0);
                        if (d === e.data.streamId)
                            return;
                        if (void 0 !== (f = o.getSegmentIdForPosition(e.data.position))) {
                            w(d = e.data.streamId, f, "start quality change");
                            var n = o.currentId
                              , r = C(b, f);
                            r && (n = Math.max(n, r.end));
                            for (var i = 1; i <= n - f; i += 1)
                                w(d, f + i, "request chunks before contentrange endId")
                        } else
                            a.error("unable to get segmentId for ".concat(e.data.position))
                    }
                }
                function Z(e) {
                    F.validateNotificationData(e, ["bufferId"]),
                    e.data.bufferId === t && (d && D(p.ABORT_DOWNLOAD, {
                        streamId: d
                    }),
                    d = void 0,
                    f = void 0)
                }
                function Y(e) {
                    F.validateNotificationData(e, ["bufferId", "streamId"]),
                    e.data.bufferId === t && e.data.streamId === d && (D(p.ABORT_DOWNLOAD, {
                        streamId: b
                    }),
                    b = d,
                    d = void 0,
                    m.setStreamId(b),
                    g && g.setStreamId(b),
                    ne())
                }
                function K(e) {
                    F.validateNotificationData(e, ["streamId", "ranges", "ids"]);
                    var t = e.data.streamId;
                    Object.hasOwnProperty.call(h, t) && (v[t] = {
                        ranges: e.data.ranges,
                        ids: e.data.ids
                    },
                    U())
                }
                function W(e) {
                    if (F.validateNotificationData(e, ["streamId", "segmentId", "firstTimestamp", "duration", "segment"]),
                    Object.hasOwnProperty.call(h, e.data.streamId) && e.data.firstTimestamp !== _e) {
                        i && o.setReferencePoint(e.data.segmentId, e.data.firstTimestamp),
                        e.data.segment.lastSegment && o.setContentEnd(e.data.segmentId),
                        Math.abs(h[e.data.streamId].segmentLength - e.data.duration) > .2 * h[e.data.streamId].segmentLength && a.warn("unusual segment duration: ".concat(e.data.duration, ", segmentId: ").concat(e.data.segmentId)),
                        S += e.data.duration,
                        L += h[e.data.streamId].segmentLength;
                        var t = S - L;
                        a.debug("downloaded duration: ".concat(S, ", expected duration: ").concat(L, ", diff: ").concat(t))
                    }
                }
                function Q(e) {
                    if (F.validateNotificationData(e, ["streamId", "segmentId"]),
                    Object.hasOwnProperty.call(h, e.data.streamId)) {
                        var t = e.data.segmentId + 1;
                        !i && k(t) && w(e.data.streamId, t, "zero byte segment")
                    }
                }
                function q(e) {
                    F.validateNotificationData(e, ["streamId", "segmentId", "status"]),
                    Object.hasOwnProperty.call(h, e.data.streamId) && i && 404 === e.data.status && (F.removeListener(E.SEGMENT, $),
                    F.addListener(E.SEGMENT, $, F.MAXIMUM_PRIORITY))
                }
                function $(e) {
                    F.validateNotificationData(e, ["streamId", "segmentId", "firstTimestamp"]),
                    Object.hasOwnProperty.call(h, e.data.streamId) && (F.removeListener(E.SEGMENT, $),
                    o.broadcasterTickAhead(-1e3))
                }
                function J(e) {
                    if (F.validateNotificationData(e, ["streamId", "position"]),
                    Object.hasOwnProperty.call(h, e.data.streamId)) {
                        var t = o.getSegmentIdForPosition(e.data.position);
                        void 0 !== t ? N(e.data.streamId, t, "segment missing by position") : a.error("unable to get segmentId for position: ".concat(e.data.position))
                    }
                }
                function te(e) {
                    F.validateNotificationData(e, ["streamId", "segmentId"]),
                    Object.hasOwnProperty.call(h, e.data.streamId) && k(e.data.segmentId) && N(e.data.streamId, e.data.segmentId, "segment missing by id")
                }
                function ne() {
                    u.baseUrl = h[b].baseUrl,
                    u.segmentUrl = h[b].segmentUrl,
                    u.initUrl = h[b].initUrl,
                    u.streamId = b
                }
                return a.debug("init", {
                    bufferId: t,
                    activeStreamId: b,
                    representations: n
                }),
                F.addListener(V.CLEANUP, I),
                F.addListener(V.SUSPEND, G),
                F.addListener(T.SEGMENT_MISSING, J),
                F.addListener(T.SEGMENT_MISSING_BY_ID, te),
                F.addListener(E.SEGMENT, W),
                F.addListener(E.EMPTY_SEGMENT, Q),
                F.addListener(E.FAILED, q),
                F.addListener(y.SEGMENT_STORAGE_UPDATED, K),
                F.addListener(p.CONTENT_MOVED, x),
                F.addListener(p.SWITCH_STREAM, H),
                F.addListener(p.CANCEL_STREAM_SWITCH, Z),
                F.addListener(R.STREAM_SWITCH, Y),
                h[b] = n,
                function(e) {
                    var n, a = h[b];
                    if (!a.contentLength)
                        return o = Gr({
                            bufferId: t,
                            segmentStartId: e,
                            segmentLength: a.segmentLength,
                            lastStreamModuleReceived: r
                        }),
                        s = function(e) {
                            return xr || (xr = function(e) {
                                function t() {
                                    var r = e.getPlayPosition() || X.firstReferencePosition
                                      , a = Date.now() - Hr;
                                    F.dispatch(V.SEEK, Vr, {
                                        position: r + a
                                    }),
                                    F.removeListener(V.RESUME, t),
                                    F.addListener(qe.SEEK, n)
                                }
                                function n() {
                                    F.addListener(V.PAUSE, r),
                                    F.removeListener(qe.SEEK, n)
                                }
                                function r() {
                                    Hr = Date.now(),
                                    F.addListener(V.RESUME, t),
                                    F.removeListener(V.PAUSE, r)
                                }
                                return F.addListener(V.PAUSE, r),
                                F.dispatch(p.ATLAS_FULLY_INITIALIZED, Vr),
                                {
                                    destroy: function() {
                                        F.removeListener(V.RESUME, t),
                                        F.removeListener(V.PAUSE, r),
                                        F.removeListener(qe.SEEK, n),
                                        xr = null,
                                        Hr = null
                                    }
                                }
                            }(e)),
                            xr
                        }(o),
                        F.addListener(V.PAUSE, M),
                        void F.addListener(V.SEEK, _);
                    n = X.player && X.player.element ? 1e3 * X.player.element.currentTime : Date.now() - X.startTime,
                    o = function(e) {
                        var t, n, r = e.bufferId, a = e.segmentLength, i = l.create("".concat(Br, ".").concat(r)), o = e.segmentStartId, s = o, c = 0, u = Math.floor(e.contentLength / a), d = Math.floor(e.startTime / a), f = e.contentLength ? 0 : null;
                        function m(e) {
                            F.validateNotificationData(e, ["position"]),
                            t = e.data.position,
                            s = v(t) || null,
                            g(e)
                        }
                        function g(e) {
                            F.validateNotificationData(e, ["position"]);
                            var t = d
                              , n = f;
                            f = e.data.position,
                            d = o + Math.floor(f / a),
                            E(),
                            (t !== d || n !== f) && F.dispatch(p.CONTENT_MOVED, Br, {
                                bufferId: r,
                                currentId: d,
                                playPosition: f,
                                videoTagSegmentId: s
                            })
                        }
                        function v(e) {
                            return Math.floor(e / a)
                        }
                        function E() {
                            n.currentId = d,
                            n.playPosition = f,
                            n.startId = c,
                            n.endId = u
                        }
                        return F.addListener(V.SEEK, g),
                        F.addListener(st.GAP_RECOVERING, g),
                        F.addListener(O.POSITION, m, F.MAXIMUM_PRIORITY),
                        n = {
                            getSegmentIdForPosition: v,
                            setContentEnd: function(e) {
                                u = e,
                                E()
                            },
                            destroy: function() {
                                i.info("destroyed"),
                                F.removeListener(V.SEEK, g),
                                F.removeListener(st.GAP_RECOVERING, g),
                                F.removeListener(O.POSITION, m),
                                c = null,
                                u = null,
                                d = null,
                                t = null,
                                E()
                            }
                        },
                        E(),
                        F.dispatch(p.ATLAS_FULLY_INITIALIZED, Br),
                        n
                    }({
                        bufferId: t,
                        segmentStartId: e,
                        segmentLength: a.segmentLength,
                        contentLength: a.contentLength,
                        startTime: n
                    })
                }(h[b].segmentId),
                m = Kr(o, b),
                i && (g = function(e) {
                    var t = e.contentRange
                      , n = e.streamId
                      , r = e.bufferId
                      , a = l.create("StorageGapRecovery.".concat(r))
                      , i = null
                      , o = null
                      , s = 1;
                    function c(e) {
                        F.validateNotificationData(e, ["streamId", "ranges"]);
                        var n = e.data
                          , r = n.streamId
                          , c = n.ranges
                          , u = void 0 === c ? [] : c;
                        if (r === i && !(s > 0 || u.length <= 1)) {
                            var d = o.getSegmentStorage(i)
                              , l = d.activeFragmentStartTime
                              , f = Zr(l, u);
                            if (-1 !== f && f !== u.length - 1) {
                                var p = Zr(t.playPosition, u);
                                if (-1 === p || p !== f) {
                                    var m = u[u.length - 1].start;
                                    a.warn("gap in the segment storage", {
                                        activeStreamId: i,
                                        currentStartTime: l,
                                        nextStartTime: m
                                    }),
                                    d.setTimePosition(m)
                                }
                            }
                        }
                    }
                    function u(e) {
                        F.validateNotificationData(e, ["volume"]),
                        s = e.data.volume
                    }
                    return function() {
                        if (i = n,
                        o = kn.getInstance(),
                        X.player && X.player.element) {
                            var e = X.player.element;
                            s = e.volume
                        }
                        F.addListener(y.SEGMENT_STORAGE_UPDATED, c),
                        F.addListener(V.VOLUME, u)
                    }(),
                    {
                        setStreamId: function(e) {
                            i = e
                        },
                        destroy: function() {
                            F.removeListener(y.SEGMENT_STORAGE_UPDATED, c),
                            F.removeListener(V.VOLUME, u),
                            i = null,
                            o = null,
                            s = 1
                        }
                    }
                }({
                    contentRange: o,
                    streamId: b,
                    bufferId: t
                })),
                h[b].initUrl ? w(b, o.currentId, "start with header") : w(b, o.currentId, "start with segment"),
                u = {
                    update: function(e) {
                        var t = cn(e);
                        h[t] = e
                    },
                    destroy: I
                },
                ne(),
                u
            }, Qr = function(e) {
                var t, n, r, a = l.create("Representation.".concat(e.contentType)), i = cn(e), o = "".concat(e.contentType, ';codecs="').concat(e.codecs, '"'), s = 0, c = !1;
                function u(e, t) {
                    F.dispatch(e, "buffer", t)
                }
                function d() {
                    F.removeListener(V.SUSPEND, d),
                    F.addListener(V.WAKE, f)
                }
                function f() {
                    F.addListener(V.SUSPEND, d),
                    F.removeListener(V.WAKE, f),
                    m()
                }
                function m() {
                    u(p.ADD_BUFFER, {
                        streamId: i,
                        contentType: o
                    })
                }
                function g(e, t) {
                    var n = Un.getRepresentation(e)
                      , r = Un.getRepresentation(t);
                    return n.label !== r.label || n.country !== r.country || n.language !== r.language ? "language" : "quality"
                }
                function v(e) {
                    "BufferManager" === e.originId.split(":")[1] && m()
                }
                function E(e) {
                    F.validateNotificationData(e, ["position"]),
                    s = e.data.position
                }
                function h(r) {
                    if (F.validateNotificationData(r, ["bufferId", "contentType"]),
                    r.data.contentType === o) {
                        F.removeListener(N.BUFFER_ADDED, h),
                        t = r.data.bufferId,
                        a.debug("onBufferAdded ".concat(t));
                        var s = Un.getRepresentation(i);
                        n = Wr({
                            bufferId: t,
                            representationsOptions: s,
                            lastStreamModuleReceived: e.lastStreamModuleReceived
                        })
                    }
                }
                function y(e) {
                    F.validateNotificationData(e, ["streamId", "position"]),
                    c && e.data.streamId === i && u(p.SWITCH_STREAM, {
                        bufferId: t,
                        streamId: r,
                        position: e.data.position
                    })
                }
                function b(e) {
                    if (F.validateNotificationData(e, ["bufferId", "streamId"]),
                    e.data.bufferId === t) {
                        u("language" === g(i, r) ? p.LANGUAGE_CHANGE_COMPLETED : p.QUALITY_CHANGE_COMPLETED, {
                            prevStreamId: i,
                            activeStreamId: r
                        }),
                        Un.removeRepresentation(i);
                        var n = Un.getRepresentation(e.data.streamId);
                        Un.addRepresentation(n, e.data.streamId, "active"),
                        c = !1,
                        i = e.data.streamId,
                        r = void 0,
                        S()
                    }
                }
                function S() {
                    var e = Un.getRepresentation(i);
                    z.set(j.MOVING_WINDOW_INTERVAL_DELAY, e.segmentLength / 10)
                }
                return Un.addRepresentation(e, i, "active"),
                S(),
                Hn(i, e),
                F.addListener(V.CLEANUP, (function e() {
                    F.removeListener(V.CLEANUP, e),
                    F.removeListener(V.SUSPEND, d),
                    F.removeListener(V.WAKE, d),
                    F.removeListener(se.CREATE, v),
                    F.removeListener(N.BUFFER_ADDED, h),
                    F.removeListener(O.POSITION, E),
                    F.removeListener(T.KEYFRAME_POSITION, y),
                    F.removeListener(R.STREAM_SWITCH, b),
                    Yn(i),
                    r && Yn(r),
                    i = void 0,
                    t = void 0,
                    o = void 0,
                    n = void 0,
                    s = 0,
                    r = void 0,
                    c = !1,
                    Un.cleanup()
                }
                )),
                F.addListener(V.SUSPEND, d),
                F.addListener(se.CREATE, v),
                F.addListener(N.BUFFER_ADDED, h),
                F.addListener(O.POSITION, E),
                F.addListener(T.KEYFRAME_POSITION, y),
                F.addListener(R.STREAM_SWITCH, b),
                m(),
                {
                    updateHash: function(e) {
                        var t = cn(e);
                        Hn(t, e)
                    },
                    update: function(e) {
                        var d = cn(e);
                        Hn(d, e);
                        var l = d === i ? "active" : "requested";
                        Un.addRepresentation(e, d, l),
                        n && n.update(e),
                        c && d !== r && (a.debug("cancel stream switch", {
                            activeStreamId: i,
                            targetStreamId: r
                        }),
                        u("language" === g(i, r) ? p.LANGUAGE_CHANGE_CANCELLED : p.QUALITY_CHANGE_CANCELLED, {
                            activeStreamId: i,
                            targetStreamId: r
                        }),
                        Un.removeRepresentation(r),
                        u(p.CANCEL_KEYFRAME_REQUEST, {
                            streamId: i
                        }),
                        u(p.CANCEL_STREAM_SWITCH, {
                            bufferId: t,
                            streamId: r
                        }),
                        r = void 0,
                        c = !1),
                        c || d === i || function(e) {
                            r = e,
                            c = !0;
                            var n = Un.getRepresentation(e).segmentLength;
                            a.debug("switch stream, searching switch position", {
                                activeStreamId: i,
                                targetStreamId: r,
                                playPosition: s,
                                segmentLength: n
                            }),
                            u("language" === g(i, r) ? p.LANGUAGE_CHANGE_STARTED : p.QUALITY_CHANGE_STARTED, {
                                activeStreamId: i,
                                targetStreamId: r
                            }),
                            o.indexOf("video") > -1 ? u(p.REQUEST_KEYFRAME_POSITION, {
                                after: s,
                                streamId: i
                            }) : u(p.SWITCH_STREAM, {
                                bufferId: t,
                                streamId: r,
                                position: s
                            })
                        }(d)
                    },
                    destroy: function() {
                        Un.removeRepresentation(i),
                        Un.removeRepresentation(r),
                        n.destroy()
                    }
                }
            };
            function zr(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var n = 0, r = new Array(t); n < t; n++)
                    r[n] = e[n];
                return r
            }
            var Xr = "SegmentedController";
            function qr(e, t) {
                F.dispatch(e, Xr, t)
            }
            var $r = function(e) {
                var t, n, r = l.create(Xr), a = 1 / 0, o = !1, s = !1;
                function c(e) {
                    F.validateNotificationData(e, ["position"]),
                    a = Math.min(a, e.data.position),
                    r.info("last segment reached, content finishes at ".concat(a))
                }
                function u(e) {
                    F.validateNotificationData(e, ["position"]),
                    o = !1,
                    g(e.data.position)
                }
                function d(e) {
                    F.validateNotificationData(e, ["position"]),
                    g(e.data.position)
                }
                function f(e) {
                    F.validateNotificationData(e, ["position"]),
                    s = !0,
                    g(e.data.position)
                }
                function m() {
                    s = !1
                }
                function g(e) {
                    e >= a - (s ? 200 : 0) && !o && (r.info("content finished"),
                    o = !0,
                    n = setTimeout((function() {
                        qr(p.FINISHED)
                    }
                    ), 10))
                }
                function v() {
                    for (var t, n, r = [], a = 0; a < e.representations.length; a += 1)
                        n = e.representations[a],
                        (t = {}).contentType = n.contentType,
                        t.codecs = n.codecs,
                        t.mediaType = n.contentType,
                        t.initUrl = n.initUrl,
                        t.baseUrl = e.baseUrl,
                        t.segmentUrl = n.segmentUrl,
                        t.segmentId = e.segmentId,
                        t.segmentLength = n.segmentLength || 5e3,
                        t.hashes = e.hashes,
                        t.contentLength = e.contentLength,
                        t.contentStart = e.contentStart,
                        t.lastStreamModuleReceived = e.lastStreamModuleReceived,
                        t.label = n.label,
                        t.country = n.country,
                        t.language = n.language,
                        r.push(t);
                    return r
                }
                function E(n) {
                    F.validateNotificationData(n, ["hashes"]),
                    e = Object.assign(e, {
                        hashes: n.data.hashes
                    }),
                    v().forEach((function(e) {
                        var n = e.mediaType;
                        t[n] && t[n].updateHash(e)
                    }
                    ))
                }
                function h(n) {
                    F.validateNotificationData(n, ["options"]),
                    e = n.data.options;
                    for (var r = v(), a = [], i = 0; i < r.length; i += 1) {
                        if (Object.hasOwnProperty.call(t, r[i].mediaType))
                            t[r[i].mediaType].update(r[i]);
                        else {
                            if (["video/mp4", "audio/mp4"].includes(r[i].mediaType))
                                return void qr(p.NEW_REPRESENTATION, {
                                    mediaType: r[i].mediaType
                                });
                            t[r[i].mediaType] = Qr(r[i])
                        }
                        a.push(r[i].mediaType)
                    }
                    Object.entries(t).forEach((function(e) {
                        var n = function(e, t) {
                            return function(e) {
                                if (Array.isArray(e))
                                    return e
                            }(e) || function(e, t) {
                                var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                                if (null != n) {
                                    var r, a, i = [], o = !0, s = !1;
                                    try {
                                        for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value),
                                        2 !== i.length); o = !0)
                                            ;
                                    } catch (e) {
                                        s = !0,
                                        a = e
                                    } finally {
                                        try {
                                            o || null == n.return || n.return()
                                        } finally {
                                            if (s)
                                                throw a
                                        }
                                    }
                                    return i
                                }
                            }(e) || function(e, t) {
                                if (e) {
                                    if ("string" == typeof e)
                                        return zr(e, 2);
                                    var n = Object.prototype.toString.call(e).slice(8, -1);
                                    return "Object" === n && e.constructor && (n = e.constructor.name),
                                    "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? zr(e, 2) : void 0
                                }
                            }(e) || function() {
                                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                            }()
                        }(e)
                          , r = n[0]
                          , i = n[1];
                        a.indexOf(r) < 0 && (i.destroy(),
                        delete t[r])
                    }
                    ))
                }
                function b(t) {
                    var n;
                    F.validateNotificationData(t, ["bufferId", "contentType"]),
                    -1 !== t.data.contentType.indexOf(i.VTT) && function(e, t) {
                        nn[e] || (nn[e] = t)
                    }(t.data.bufferId, (n = i.VTT,
                    e.representations.filter((function(e) {
                        return e.contentType === n
                    }
                    ))[0]))
                }
                return e.contentLength && (a = void 0 !== e.contentStart ? e.contentStart : 0,
                a += e.contentLength),
                function(e) {
                    t = {};
                    for (var n = 0; n < e.length; n += 1)
                        Object.hasOwnProperty.call(t, e[n].mediaType) ? r.warn("duplicated media type: ".concat(e[n].mediaType)) : t[e[n].mediaType] = Qr(e[n])
                }(v()),
                F.addListener(y.EOS_POSITION_DETECTED, c),
                F.addListener(O.POSITION, d),
                F.addListener(O.BUFFER_EMPTY, f),
                F.addListener(O.BUFFER_FULL, m),
                F.addListener(V.SEEK, u),
                F.addListener(V.CLEANUP, (function e() {
                    F.removeListener(y.EOS_POSITION_DETECTED, c),
                    F.removeListener(O.POSITION, d),
                    F.removeListener(O.BUFFER_EMPTY, f),
                    F.removeListener(O.BUFFER_FULL, m),
                    F.removeListener(V.SEEK, u),
                    F.removeListener(V.CLEANUP, e),
                    F.removeListener(V.UPDATE_OPTIONS, h),
                    F.removeListener(V.UPDATE_HASHES, E),
                    F.removeListener(N.BUFFER_ADDED, b),
                    s = !1,
                    t = null,
                    n = clearTimeout(n),
                    qr(se.DESTROY)
                }
                )),
                F.addListener(V.UPDATE_OPTIONS, h),
                F.addListener(V.UPDATE_HASHES, E),
                F.addListener(N.BUFFER_ADDED, b),
                qr(se.CREATE),
                {
                    name: Xr
                }
            };
            function Jr(e, t) {
                return function(e) {
                    if (Array.isArray(e))
                        return e
                }(e) || function(e, t) {
                    var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                    if (null != n) {
                        var r, a, i = [], o = !0, s = !1;
                        try {
                            for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value),
                            !t || i.length !== t); o = !0)
                                ;
                        } catch (e) {
                            s = !0,
                            a = e
                        } finally {
                            try {
                                o || null == n.return || n.return()
                            } finally {
                                if (s)
                                    throw a
                            }
                        }
                        return i
                    }
                }(e, t) || function(e, t) {
                    if (e) {
                        if ("string" == typeof e)
                            return ea(e, t);
                        var n = Object.prototype.toString.call(e).slice(8, -1);
                        return "Object" === n && e.constructor && (n = e.constructor.name),
                        "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? ea(e, t) : void 0
                    }
                }(e, t) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }
            function ea(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var n = 0, r = new Array(t); n < t; n++)
                    r[n] = e[n];
                return r
            }
            var ta = l.create("URLTools")
              , na = function(e) {
                ta.debug("serializeURLVariables ", e);
                var t = [];
                return Object.entries(e).forEach((function(e) {
                    var n = Jr(e, 2)
                      , r = n[0]
                      , a = n[1];
                    t.push("".concat(r, "=").concat(a))
                }
                )),
                t.join("&")
            };
            function ra(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var n = 0, r = new Array(t); n < t; n++)
                    r[n] = e[n];
                return r
            }
            var aa = "FLVSegmenterController"
              , ia = l.create(aa);
            function oa(e, t) {
                F.dispatch(e, aa, t)
            }
            var sa = function(e) {
                var t, n, r, a, i, o, s, c, u = cn(e), d = !1, l = 0;
                function f() {
                    F.removeListener(V.CLEANUP, f),
                    F.removeListener(tn.METADATA, b),
                    F.removeListener(tn.FAILED, h),
                    F.removeListener(N.BUFFER_ADDED, _),
                    F.removeListener(E.LOAD_COMPLETE, I),
                    F.removeListener(y.SEGMENT_STORAGE_UPDATED, v),
                    F.removeListener(V.UPDATE_OPTIONS, P),
                    F.removeListener(se.CREATE, m),
                    F.removeListener(T.SEGMENT_MISSING, S),
                    F.removeListener(V.SEEK, L),
                    F.removeListener(O.POSITION, L),
                    F.removeListener(O.POSITION, A),
                    F.removeListener(O.BUFFER_EMPTY, A),
                    oa(se.DESTROY)
                }
                function m(e) {
                    var t = e.originId.split(":")[1];
                    ia.warn("onComponentCreate ".concat(t, " ").concat("DownloadQueue")),
                    "DownloadManager" === t && g()
                }
                function g() {
                    oa(p.LOAD_MOVIE_META, {
                        url: "".concat(i, "?").concat(na(o)),
                        streamId: u
                    })
                }
                function v(e) {
                    F.validateNotificationData(e, ["streamId", "ranges", "ids"]),
                    e.data.streamId === u && (void 0 === l && e.data.ranges.length && (l = e.data.ranges[0].start),
                    s = e.data.ranges,
                    c = e.data.ids,
                    D())
                }
                function h(e) {
                    F.validateNotificationData(e, ["streamId"]),
                    ia.error("onDownloaderFailure"),
                    f()
                }
                function b(e) {
                    if (F.validateNotificationData(e, ["streamId", "metadata"]),
                    u === e.data.streamId)
                        if (ia.debug("onDownloaderMetadata", e.data.metadata),
                        e.data.metadata.segments) {
                            r = e.data.metadata.contentLength,
                            a = e.data.metadata.contentSize,
                            n = e.data.metadata.segments.positions,
                            t = e.data.metadata.segments.times;
                            for (var i = 1; i < t.length; i += 1)
                                t[i] === t[i - 1] && (t.splice(i, 1),
                                n.splice(i, 1),
                                i -= 1);
                            oa(p.ADD_BUFFER, {
                                streamId: u,
                                contentType: "flv"
                            })
                        } else
                            ia.error("onDownloaderMetadata : no segment info in metadata, unable to continue"),
                            f()
                }
                function S(e) {
                    F.validateNotificationData(e, ["streamId", "position"]),
                    e.data.streamId === u && (l = e.data.position,
                    D())
                }
                function L(e) {
                    F.validateNotificationData(e, ["position"]),
                    l = e.data.position,
                    D()
                }
                function A(e) {
                    F.validateNotificationData(e, ["position"]);
                    var t = e.type === O.BUFFER_EMPTY ? 200 : 0;
                    e.data.position >= r - t && (ia.info("content finished"),
                    oa(p.FINISHED))
                }
                function I(e) {
                    F.validateNotificationData(e, ["streamId"]),
                    e.data.streamId === u && (ia.debug("download complete"),
                    d = !1)
                }
                function _(e) {
                    F.validateNotificationData(e, ["streamId"]),
                    R()
                }
                function P(e) {
                    F.validateNotificationData(e, ["options"]),
                    C(e.data.options)
                }
                function D() {
                    ee.remaining(l, s) < 5e3 && !d && R()
                }
                function R() {
                    var f = ee.current(l, s)
                      , m = f ? c[s.indexOf(f)] : null
                      , g = m ? m.end + 1 : function(e) {
                        for (var n = 1; n < t.length; n += 1)
                            if (t[n] > e)
                                return n - 1;
                        return 1 / 0
                    }(l)
                      , v = function(e) {
                        for (var n, a, i, o = 0, s = 0; s < 15e3 && e + o < t.length; )
                            s += (a = e + (o += 1),
                            i = r,
                            (a < (n = t).length ? n[a] : i) - t[e]);
                        return o
                    }(g);
                    g !== 1 / 0 && v && function(s, c) {
                        d && oa(p.ABORT_DOWNLOAD, {
                            streamId: u
                        });
                        for (var l = [], f = [], m = [], g = s; g < s + c; g += 1)
                            l.push(g),
                            m.push(w(n, a, g)),
                            f.push(w(t, r, g));
                        o[e.seekParameter] = n[s];
                        var v = "".concat(i, "?").concat(na(o));
                        d = !0,
                        oa(p.LOAD_SEGMENT, {
                            streamId: u,
                            segmentIds: l,
                            segmentDurations: f,
                            segmentSizes: m,
                            url: v
                        })
                    }(g, v)
                }
                function w(e, t, n) {
                    return (n < e.length - 1 ? e[n + 1] : t) - e[n]
                }
                function C(e) {
                    var t, n = (1,
                    function(e) {
                        if (Array.isArray(e))
                            return e
                    }(t = e.url.split("?")) || function(e, t) {
                        var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                        if (null != n) {
                            var r, a, i = [], o = !0, s = !1;
                            try {
                                for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value),
                                1 !== i.length); o = !0)
                                    ;
                            } catch (e) {
                                s = !0,
                                a = e
                            } finally {
                                try {
                                    o || null == n.return || n.return()
                                } finally {
                                    if (s)
                                        throw a
                                }
                            }
                            return i
                        }
                    }(t) || function(e, t) {
                        if (e) {
                            if ("string" == typeof e)
                                return ra(e, 1);
                            var n = Object.prototype.toString.call(e).slice(8, -1);
                            return "Object" === n && e.constructor && (n = e.constructor.name),
                            "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? ra(e, 1) : void 0
                        }
                    }(t) || function() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }());
                    i = n[0],
                    o = function(e) {
                        ta.debug("parseURLVariables ".concat(e));
                        var t, n = {};
                        if (-1 !== e.indexOf("?")) {
                            t = e.split("?")[1].split("&");
                            for (var r = 0; r < t.length; r += 1) {
                                var a = Jr(t[r].split("="), 2)
                                  , i = a[0]
                                  , o = a[1];
                                n[i] = o
                            }
                        }
                        return n
                    }(e.url)
                }
                return C(e),
                Un.addRepresentation(e, u, "active"),
                ia.debug("baseUrl: ".concat(i), o),
                o.ri = 0,
                o.rs = 0,
                F.addListener(V.CLEANUP, f),
                F.addListener(tn.METADATA, b),
                F.addListener(tn.FAILED, h),
                F.addListener(N.BUFFER_ADDED, _),
                F.addListener(E.LOAD_COMPLETE, I),
                F.addListener(y.SEGMENT_STORAGE_UPDATED, v),
                F.addListener(V.UPDATE_OPTIONS, P),
                F.addListener(se.CREATE, m),
                F.addListener(T.SEGMENT_MISSING, S),
                F.addListener(V.SEEK, L),
                F.addListener(O.POSITION, L),
                F.addListener(O.POSITION, A),
                F.addListener(O.BUFFER_EMPTY, A),
                oa(se.CREATE),
                oa(p.ATLAS_FULLY_INITIALIZED, aa),
                g(),
                {
                    name: aa
                }
            }
              , ca = "DirectController";
            function ua(e, t) {
                F.dispatch(e, ca, t)
            }
            var da = "GarbageCollector"
              , la = "unused"
              , fa = "used"
              , pa = "switch"
              , ma = .8
              , ga = l.create(da);
            function va() {
                return z.get(j.MEMORY_LIMIT_IN_BYTES)
            }
            function Ea(e, t) {
                F.dispatch(e, da, t)
            }
            var ha = function() {
                var e = 0
                  , t = !1
                  , n = {}
                  , r = {}
                  , a = null;
                function i() {
                    var n = va();
                    return e > n * (t ? ma : 1)
                }
                function o(c) {
                    F.validateNotificationData(c, ["streamId"]);
                    var u = va();
                    if (!i())
                        return t = !1,
                        ga.info("memory usage is back to normal", {
                            memoryLimit: u,
                            limitThreshold: u * ma,
                            memoryUsage: e
                        }),
                        void F.removeListener(y.SEGMENT_STORAGE_UPDATED, o);
                    var d = Object.getOwnPropertyNames(n).sort(s)
                      , l = !!d.length && d.shift();
                    if (!function(e) {
                        return n[e].usage === fa || n[e].usage === pa
                    }(l) && n[l].size > e - u)
                        return a.removeSegmentStorage(l),
                        void delete n[l];
                    var f = !!l && function(e) {
                        return function(e) {
                            return n[e] && n[e].ids.length && n[e].ids[0].start < r[e]
                        }(e) ? In.DISCARD_START_SEGMENT : !!function(e) {
                            return n[e] && n[e].ids.length && n[e].ids[n[e].ids.length - 1].end > r[e]
                        }(e) && In.DISCARD_END_SEGMENT
                    }(l);
                    f ? (t = !0,
                    Ea(f, {
                        streamId: l
                    })) : (ga.warn("memory usage is high but there is no segment to discard", {
                        memoryLimit: u,
                        limitThreshold: u * ma,
                        memoryUsage: e
                    }),
                    F.removeListener(y.SEGMENT_STORAGE_UPDATED, o))
                }
                function s(e, t) {
                    if (n[e].usage !== n[t].usage) {
                        if (n[t].usage === la)
                            return 1;
                        if (n[e].usage === la)
                            return -1;
                        if (n[t].usage === fa)
                            return 1;
                        if (n[e].usage === fa)
                            return -1
                    }
                    return n[t].length - n[e].length
                }
                function c(e, t) {
                    if (t !== la) {
                        var r = {
                            mediaType: un(e).mediaType,
                            usage: t
                        };
                        Object.keys(n).forEach((function(e) {
                            (function(e, t) {
                                if (Object.hasOwnProperty.call(n, e))
                                    return !1;
                                for (var r = Object.keys(t), a = 0; a < r.length; a += 1) {
                                    var i = r[a];
                                    if (e[i] !== t[i])
                                        return !1
                                }
                                return !0
                            }
                            )(e, r) && (n[e].usage = la)
                        }
                        )),
                        n[e] = n[e] || {},
                        n[e].usage = t
                    } else
                        n[e].usage = t
                }
                function u(t) {
                    F.validateNotificationData(t, ["streamId", "size", "ranges", "ids"]),
                    n[t.data.streamId] = n[t.data.streamId] || {};
                    var r = n[t.data.streamId];
                    r.ids = t.data.ids,
                    r.size = t.data.size,
                    r.ranges = t.data.ranges,
                    r.length = function(e) {
                        for (var t = 0, n = 0; n < e.length; n += 1)
                            t += e[n].end - e[n].start;
                        return t
                    }(t.data.ranges),
                    r.usage = r.usage || la,
                    r.mediaType = un(t.data.streamId).mediaType,
                    e = 0,
                    Object.values(n).forEach((function(t) {
                        var n;
                        e += null !== (n = null == t ? void 0 : t.size) && void 0 !== n ? n : 0
                    }
                    ))
                }
                function d(n) {
                    F.validateNotificationData(n, ["streamId", "segmentId"]),
                    r[n.data.streamId] = n.data.segmentId,
                    c(n.data.streamId, fa),
                    t || function(t) {
                        if (i()) {
                            var n = va();
                            ga.info("memory usage exceeds limit", {
                                memoryLimit: n,
                                limitThreshold: n * ma,
                                memoryUsage: e
                            }),
                            F.addListener(y.SEGMENT_STORAGE_UPDATED, o, F.MINIMUM_PRIORITY),
                            o(t)
                        }
                    }(n)
                }
                function l(e) {
                    F.validateNotificationData(e, ["streamId"]),
                    c(e.data.streamId, fa)
                }
                function f(e) {
                    F.validateNotificationData(e, ["streamId"]),
                    c(e.data.streamId, pa)
                }
                function p(e) {
                    F.validateNotificationData(e, ["limit"]),
                    ga.warn("apiEvents.SET_MAX_MEMORY_USAGE is deprecated, use the options module!"),
                    z.set(j.MEMORY_LIMIT_IN_BYTES, e.data.limit)
                }
                return ga.debug("init"),
                F.addListener(y.SEGMENT_STORAGE_UPDATED, u),
                F.addListener(T.SEGMENT_CHANGE, d),
                F.addListener(R.STREAM_SWITCH, l),
                F.addListener(N.BUFFER_ADDED, f),
                F.addListener(V.SET_MAX_MEMORY_USAGE, p),
                F.addListener(V.CLEANUP, (function e() {
                    F.removeListener(y.SEGMENT_STORAGE_UPDATED, u),
                    F.removeListener(y.SEGMENT_STORAGE_UPDATED, o),
                    F.removeListener(T.SEGMENT_CHANGE, d),
                    F.removeListener(R.STREAM_SWITCH, l),
                    F.removeListener(N.BUFFER_ADDED, f),
                    F.removeListener(V.SET_MAX_MEMORY_USAGE, p),
                    F.removeListener(V.CLEANUP, e),
                    n = null,
                    r = null,
                    a = null,
                    Ea(se.DESTROY)
                }
                )),
                a = kn.getInstance(),
                Ea(se.CREATE),
                {
                    name: da
                }
            }
              , ya = l.create("ComponentFactory");
            function ba(e) {
                return e.some((function(e) {
                    return e.contentType === i.VTT
                }
                ))
            }
            var Ta = function(e, t) {
                !function(e, t) {
                    switch (t.format) {
                    case i.MP4_SEGMENTED:
                        jt.create(t).initVideo(e),
                        ke(t.contentLength),
                        ba(t.representations) && En.create(t),
                        function() {
                            var e, t, n, r, a = [], i = !1, o = {}, s = {}, c = {}, u = 0;
                            function d() {
                                for (i = !0; a.length; ) {
                                    var t = a.shift();
                                    m(t.streamId, t.contentType)
                                }
                                e = setInterval(S, 1e3)
                            }
                            function l() {
                                i = !1,
                                v(),
                                clearInterval(e)
                            }
                            function f(e) {
                                F.validateNotificationData(e, ["streamId", "contentType"]),
                                i ? m(e.data.streamId, e.data.contentType) : a.push({
                                    streamId: e.data.streamId,
                                    contentType: e.data.contentType
                                })
                            }
                            function m(e, t) {
                                var n, a = t.split("/")[0], i = Object.keys(o).filter((function(e) {
                                    return e.indexOf(a) > -1
                                }
                                ))[0];
                                i ? n = i : (n = "".concat(a, ".").concat(He(3)),
                                o[n] = mr(n, e, t)),
                                X.firstReferencePosition && r.getSegmentStorage(e).setTimePosition(X.firstReferencePosition + (Date.now() - X.startTime)),
                                s[n] = [],
                                hr(N.BUFFER_ADDED, {
                                    streamId: e,
                                    bufferId: n,
                                    contentType: t
                                })
                            }
                            function g(e) {
                                Object.hasOwnProperty.call(o, e) && (delete o[e],
                                delete s[e],
                                delete c[e],
                                hr(N.BUFFER_REMOVED, {
                                    bufferId: e
                                }))
                            }
                            function v() {
                                Object.keys(o).forEach((function(e) {
                                    return g(e)
                                }
                                ))
                            }
                            function E(e) {
                                F.validateNotificationData(e, ["bufferId"]),
                                g(e.data.bufferId)
                            }
                            function h(e) {
                                F.validateNotificationData(e, ["bufferId"]),
                                c[e.data.bufferId] = !0
                            }
                            function b(e) {
                                F.validateNotificationData(e, ["bufferId", "ranges"]),
                                c[e.data.bufferId] = !1,
                                s[e.data.bufferId] = e.data.ranges,
                                S()
                            }
                            function T(e) {
                                F.validateNotificationData(e, ["position"]),
                                u = e.data.position,
                                S()
                            }
                            function S() {
                                var e, r = function() {
                                    var e = ["audio", "video"].filter((function(e) {
                                        return (X.representations || []).some((function(t) {
                                            return t.mediaType.indexOf(e) > -1
                                        }
                                        ))
                                    }
                                    ));
                                    return Object.getOwnPropertyNames(s).reduce((function(t, n) {
                                        var r = n.split(".")[0];
                                        return -1 !== e.indexOf(r) && (t[n] = s[n]),
                                        t
                                    }
                                    ), {})
                                }(), a = (e = r,
                                Object.getOwnPropertyNames(e).every((function(n) {
                                    var r = e[n];
                                    return ee.remainingTotal(u, r) >= t
                                }
                                ))), i = Object.getOwnPropertyNames(r).map((function(e) {
                                    return r[e]
                                }
                                )), o = ee.intersect.apply(null, i), d = ee.remainingTotal(u, o);
                                a && d < n ? t += 1e3 : t = z.get(j.MINIMUM_REMAINING_THRESHOLD),
                                Object.entries(s).forEach((function(e) {
                                    var n, r = function(e) {
                                        if (Array.isArray(e))
                                            return e
                                    }(n = e) || function(e, t) {
                                        var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                                        if (null != n) {
                                            var r, a, i = [], o = !0, s = !1;
                                            try {
                                                for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value),
                                                2 !== i.length); o = !0)
                                                    ;
                                            } catch (e) {
                                                s = !0,
                                                a = e
                                            } finally {
                                                try {
                                                    o || null == n.return || n.return()
                                                } finally {
                                                    if (s)
                                                        throw a
                                                }
                                            }
                                            return i
                                        }
                                    }(n) || function(e, t) {
                                        if (e) {
                                            if ("string" == typeof e)
                                                return gr(e, 2);
                                            var n = Object.prototype.toString.call(e).slice(8, -1);
                                            return "Object" === n && e.constructor && (n = e.constructor.name),
                                            "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? gr(e, 2) : void 0
                                        }
                                    }(n) || function() {
                                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                    }(), a = r[0], i = r[1];
                                    if (!c[a]) {
                                        var o = ee.remainingTotal(u, i)
                                          , s = !o && X.representations && !function(e) {
                                            var t = e.substring(0, e.indexOf("."));
                                            return X.representations.some((function(e) {
                                                return e.mediaType.indexOf(t) > -1
                                            }
                                            ))
                                        }(a);
                                        s ? g(a) : o < t && hr(N.APPEND_TO_BUFFER, {
                                            bufferId: a
                                        })
                                    }
                                }
                                ))
                            }
                            Er.debug("create"),
                            F.addListener($.SOURCE_OPEN, d),
                            F.addListener($.SOURCE_CLOSE, l),
                            F.addListener(p.ADD_BUFFER, f),
                            F.addListener(p.REMOVE_BUFFER, E),
                            F.addListener(V.CLEANUP, (function n() {
                                F.removeListener($.SOURCE_OPEN, d),
                                F.removeListener($.SOURCE_CLOSE, l),
                                F.removeListener(p.ADD_BUFFER, f),
                                F.removeListener(p.REMOVE_BUFFER, E),
                                F.removeListener(V.CLEANUP, n),
                                F.removeListener(R.BUFFER_UPDATING, h),
                                F.removeListener(R.BUFFER_UPDATED, b),
                                F.removeListener(O.POSITION, T),
                                F.removeListener(V.SEEK, T),
                                F.removeListener(y.SEGMENT_STORAGE_UPDATED, S),
                                F.removeListener($.SOURCE_BUFFER_ADDED, S),
                                F.removeListener(wt.EMPTY_CUE_ADDED, S),
                                v(),
                                clearInterval(e),
                                o = null,
                                a = null,
                                u = null,
                                s = null,
                                c = null,
                                t = null,
                                hr(se.DESTROY)
                            }
                            )),
                            F.addListener(R.BUFFER_UPDATING, h),
                            F.addListener(R.BUFFER_UPDATED, b),
                            F.addListener(O.POSITION, T),
                            F.addListener(V.SEEK, T),
                            F.addListener(y.SEGMENT_STORAGE_UPDATED, S),
                            F.addListener($.SOURCE_BUFFER_ADDED, S),
                            F.addListener(wt.EMPTY_CUE_ADDED, S),
                            t = z.get(j.MINIMUM_REMAINING_THRESHOLD),
                            n = z.get(j.COLDSTART_THRESHOLD),
                            hr(se.CREATE),
                            r = kn.getInstance()
                        }(),
                        Ln(),
                        qn(),
                        kn.create(),
                        _r(),
                        Ur();
                        break;
                    case i.HLS:
                    case i.MP4_MOVIE:
                        jt.create(t).initVideo(e);
                        break;
                    case i.FLV_MOVIE:
                    case i.FLV_SEGMENTED:
                        (function(e, t) {
                            var n, r, a = function() {
                                var e = z.get(j.FLASH_PROXY_URL_SECURE)
                                  , t = z.get(j.FLASH_PROXY_URL_PLAIN);
                                if (void 0 !== e && void 0 !== t)
                                    return "".concat(Ie.ssl ? e : t, "/player/atlas/atlas-4.0.0.swf");
                                We.error("flash url is missing")
                            }(), i = "atlas.".concat(He(3));
                            function o(e) {
                                e.type === g.LOG ? l.log(e.data.source, e.data.line, e.data.data, e.data.level) : 0 !== e.originId.indexOf("Flash:") && r && r.dispatch(e.type, e.originId, e.data ? encodeURIComponent(JSON.stringify(e.data)) : null)
                            }
                            (n = function(e) {
                                var t = e.split(".")
                                  , n = window;
                                for (t.shift(); t.length; )
                                    n[t[0]] || (n[t[0]] = {}),
                                    n = n[t.shift()];
                                return n
                            }(Ke + i)).ready = function() {
                                r = document.getElementById(i),
                                Qe(se.CREATE)
                            }
                            ,
                            n.dispatch = function(e) {
                                F.dispatch(e.type, e.originId, e.data ? JSON.parse(decodeURIComponent(e.data)) : null)
                            }
                            ,
                            function() {
                                var t = document.createElement("div");
                                t.id = i,
                                document.getElementById(e).appendChild(t);
                                var n = {
                                    url: a,
                                    width: "100%",
                                    height: "100%",
                                    minVersion: "11.0.0",
                                    params: {
                                        wmode: "opaque",
                                        allowfullscreen: !0,
                                        bgcolor: "#000000",
                                        allowscriptaccess: "always"
                                    },
                                    flashVars: {
                                        cpath: Ke + i
                                    }
                                };
                                xe.embedSWF(n.url, i, n.width, n.height, n.minVersion, null, n.flashVars, n.params),
                                X.player = {
                                    type: "flash",
                                    id: i
                                }
                            }(),
                            F.addListener("*", o),
                            F.addListener(V.CLEANUP, (function e() {
                                F.removeListener("*", o),
                                F.removeListener(V.CLEANUP, e),
                                r && r.parentNode.removeChild(r),
                                delete X.player,
                                function(e) {
                                    var t = e.split(".")
                                      , n = window;
                                    for (t.shift(); t.length > 1; )
                                        n = n[t.shift()];
                                    delete n[t.shift()]
                                }(Ke + i),
                                Qe(se.DESTROY)
                            }
                            ))
                        }
                        )(e, t.debug),
                        qn()
                    }
                }(e, t),
                function(e) {
                    switch (e.format) {
                    case i.FLV_MOVIE:
                        ha(),
                        sa(e);
                        break;
                    case i.FLV_SEGMENTED:
                    case i.MP4_SEGMENTED:
                        ha(),
                        $r(e);
                        break;
                    case i.HLS:
                    case i.MP4_MOVIE:
                        !function(e) {
                            var t;
                            function n() {
                                ua(qe.SEEK, {
                                    position: t
                                }),
                                F.removeListener(P.TIME_UPDATE, n)
                            }
                            function r() {
                                ua(qe.PLAY),
                                F.removeListener(P.EMPTIED, r),
                                !X.isLive && t > 0 && F.addListener(P.TIME_UPDATE, n)
                            }
                            function a(n) {
                                F.validateNotificationData(n, ["options"]);
                                var a = e.url
                                  , i = n.data.options.url;
                                a !== i && function(e) {
                                    F.addListener(P.EMPTIED, r),
                                    t = 1e3 * jt.getCurrentTime(),
                                    ua(p.STREAM_URL, {
                                        source: e
                                    })
                                }(i),
                                e = n.data.options
                            }
                            function i() {
                                ua(p.FINISHED)
                            }
                            function o() {
                                ua(p.STREAM_URL, {
                                    source: e.url
                                })
                            }
                            F.addListener(P.ENDED, i),
                            F.addListener(V.CLEANUP, (function e() {
                                F.removeListener(P.ENDED, i),
                                F.removeListener(V.CLEANUP, e),
                                F.removeListener(V.WAKE, o),
                                F.removeListener(P.TIME_UPDATE, n),
                                F.removeListener(V.UPDATE_OPTIONS, a),
                                F.removeListener(P.EMPTIED, r),
                                Un.cleanup(),
                                ua(se.DESTROY)
                            }
                            )),
                            F.addListener(V.WAKE, o),
                            F.addListener(V.UPDATE_OPTIONS, a),
                            Un.addRepresentation(e, "direct", "active"),
                            ua(p.STREAM_URL, {
                                source: e.url
                            }),
                            ua(p.ATLAS_FULLY_INITIALIZED, ca)
                        }(e)
                    }
                }(t)
            };
            function Sa(e, t) {
                return function(e) {
                    if (Array.isArray(e))
                        return e
                }(e) || function(e, t) {
                    var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                    if (null != n) {
                        var r, a, i = [], o = !0, s = !1;
                        try {
                            for (n = n.call(e); !(o = (r = n.next()).done) && (i.push(r.value),
                            !t || i.length !== t); o = !0)
                                ;
                        } catch (e) {
                            s = !0,
                            a = e
                        } finally {
                            try {
                                o || null == n.return || n.return()
                            } finally {
                                if (s)
                                    throw a
                            }
                        }
                        return i
                    }
                }(e, t) || function(e, t) {
                    if (e) {
                        if ("string" == typeof e)
                            return Oa(e, t);
                        var n = Object.prototype.toString.call(e).slice(8, -1);
                        return "Object" === n && e.constructor && (n = e.constructor.name),
                        "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Oa(e, t) : void 0
                    }
                }(e, t) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }
            function Oa(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var n = 0, r = new Array(t); n < t; n++)
                    r[n] = e[n];
                return r
            }
            function La(e) {
                return La = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }
                ,
                La(e)
            }
            var Aa, Ia, _a, Pa = 1, Da = l.create("Atlas"), Ra = null;
            function wa() {
                Ba(r.ATLAS_FULLY_INITIALIZED)
            }
            function Na() {
                xa(),
                _a.cleanup(),
                _a = null,
                Ia = null,
                Ra = null,
                z.cleanup(),
                Ca(),
                ka(se.CREATE, Ha),
                ka(O.ERROR, Ka),
                ka(O.POSITION, za),
                ka(O.RESIZE, Xa),
                ka(O.BUFFERED, qa),
                ka(O.BUFFER_EMPTY, oi),
                ka(O.BUFFER_FULL, oi),
                ka(O.THROTTLE, si),
                ka(O.CC_DETECTED, ci),
                ka(O.AUDIO_TRACKS, fi),
                ka(O.TEXT_TRACKS, pi),
                ka(O.SEEK_COMPLETED, Ei),
                ka(O.WEBKIT_SUPPORTS_FULLSCREEN, li),
                ka(P.WEBKIT_ENTER_FULLSCREEN, ui),
                ka(P.WEBKIT_END_FULLSCREEN, di),
                ka(O.UNRECOVERED_STALLED, gi),
                ka(O.PLAY_ERROR, vi),
                ka(qe.SEEK, Ei),
                ka(wt.TEXT_TRACK_CUE_CHANGE, mi),
                ka(R.BUFFER_UPDATED, qa),
                ka(E.LOAD_COMPLETE, Za),
                ka(E.FAILED, Ya),
                ka(y.SEGMENT_STORAGE_UPDATED, ai),
                ka(p.FINISHED, ii),
                ka(p.CAN_NOT_CREATE_URL, Wa),
                ka(p.NEW_REPRESENTATION, Qa),
                ka(p.QUALITY_CHANGE_STARTED, $a),
                ka(p.QUALITY_CHANGE_CANCELLED, Ja),
                ka(p.QUALITY_CHANGE_COMPLETED, ei),
                ka(p.ATLAS_FULLY_INITIALIZED, wa),
                ka(p.LANGUAGE_CHANGE_STARTED, ti),
                ka(p.LANGUAGE_CHANGE_CANCELLED, ni),
                ka(p.LANGUAGE_CHANGE_COMPLETED, ri),
                ka(tn.METADATA, hi),
                ka(st.GAP_RECOVERING, yi),
                Ga(V.CLEANUP),
                l.cleanup()
            }
            function Ca() {
                Ti.initialized = !!_a
            }
            function Ua(e) {
                xa(),
                Ga(V.VOLUME, {
                    volume: Pa = e
                })
            }
            function Ma(e, t) {
                xa(),
                e === r.LOG ? l.addListener(l.events.LOG, t) : _a.addListener(e, t)
            }
            function Fa(e, t) {
                xa(),
                e === r.LOG ? l.removeListener(l.events.LOG, t) : _a.removeListener(e, t)
            }
            function ja(e, t) {
                F.addListener(e, t, F.MINIMUM_PRIORITY)
            }
            function ka(e, t) {
                F.removeListener(e, t)
            }
            function Ga(e, t) {
                F.dispatch(e, "atlas", t)
            }
            function Ba(e, t) {
                var n = {
                    event: e
                };
                "object" === La(t) && null !== t && Object.entries(t).forEach((function(e) {
                    var t = Sa(e, 2)
                      , r = t[0]
                      , a = t[1];
                    "event" === r ? Da.warn('notify: "event" property ignored on data') : n[r] = a
                }
                )),
                _a.dispatch("Atlas.*", n),
                _a.dispatch(e, n)
            }
            function Va(e, t, n) {
                Ba(r.ERROR, {
                    error: e,
                    recoverable: n = void 0 === n || n,
                    details: t
                })
            }
            function xa() {
                if (!_a)
                    throw new Error("Initialize Atlas before usage!")
            }
            function Ha(e) {
                var t = e.originId.split(":")[1].split(".")[0];
                "QueueStreamProxy" !== t && t !== jt.name || Ua(Pa)
            }
            function Za(e) {
                F.validateNotificationData(e, ["time", "size", "url"]);
                var t = {
                    time: e.data.time,
                    size: e.data.size,
                    url: e.data.url
                };
                if (window.performance && "function" == typeof window.performance.getEntriesByName) {
                    var n = performance.getEntriesByName(e.data.url);
                    if (n.length) {
                        var a = Sa(n, 1);
                        t.performance = a[0],
                        performance.clearResourceTimings()
                    }
                }
                Ba(r.BANDWIDTH, t)
            }
            function Ya(e) {
                F.validateNotificationData(e, ["url", "status"]),
                Va(404 === e.data.status || 0 === e.data.status ? a.SEGMENT_NOT_FOUND : a.SEGMENT_LOAD_FAILED, {
                    url: e.data.url,
                    status: e.data.status,
                    reason: e.data.reason
                })
            }
            function Ka(e) {
                F.validateNotificationData(e, ["code", "message"]);
                var t = {
                    code: e.data.code,
                    message: e.data.message
                };
                Va(a.VIDEO_PLAYER, t, !1),
                Na()
            }
            function Wa(e) {
                F.validateNotificationData(e, ["streamId", "segmentId", "reason"]),
                Va(a.CAN_NOT_CREATE_URL, e.data, !1),
                Na()
            }
            function Qa(e) {
                F.validateNotificationData(e, ["mediaType"]),
                Va(a.NEW_REPRESENTATION, e.data, !1),
                Na()
            }
            function za(e) {
                F.validateNotificationData(e, ["position"]),
                Ba(r.POSITION, {
                    position: e.data.position
                })
            }
            function Xa(e) {
                F.validateNotificationData(e, ["width", "height"]),
                Ra = {
                    width: e.data.width,
                    height: e.data.height
                }
            }
            function qa(e) {
                F.validateNotificationData(e, ["bufferId", "ranges"]),
                Ba(r.BUFFERED, {
                    ranges: e.data.ranges,
                    bufferId: e.data.bufferId
                })
            }
            function $a(e) {
                F.validateNotificationData(e, ["activeStreamId", "targetStreamId"]),
                Ba(r.QUALITY_CHANGE_STARTED, {
                    activeStreamId: e.data.activeStreamId,
                    targetStreamId: e.data.targetStreamId
                })
            }
            function Ja(e) {
                F.validateNotificationData(e, ["activeStreamId", "targetStreamId"]),
                Ba(r.QUALITY_CHANGE_CANCELLED, {
                    activeStreamId: e.data.activeStreamId,
                    targetStreamId: e.data.targetStreamId
                })
            }
            function ei(e) {
                F.validateNotificationData(e, ["prevStreamId", "activeStreamId"]),
                Ba(r.QUALITY_CHANGE_COMPLETED, {
                    prevStreamId: e.data.prevStreamId,
                    activeStreamId: e.data.activeStreamId
                })
            }
            function ti(e) {
                F.validateNotificationData(e, ["activeStreamId", "targetStreamId"]),
                Ba(r.LANGUAGE_CHANGE_STARTED, {
                    activeStreamId: e.data.activeStreamId,
                    targetStreamId: e.data.targetStreamId
                })
            }
            function ni(e) {
                F.validateNotificationData(e, ["activeStreamId", "targetStreamId"]),
                Ba(r.LANGUAGE_CHANGE_CANCELLED, {
                    activeStreamId: e.data.activeStreamId,
                    targetStreamId: e.data.targetStreamId
                })
            }
            function ri(e) {
                F.validateNotificationData(e, ["prevStreamId", "activeStreamId"]),
                Ba(r.LANGUAGE_CHANGE_COMPLETED, {
                    prevStreamId: e.data.prevStreamId,
                    activeStreamId: e.data.activeStreamId
                })
            }
            function ai(e) {
                F.validateNotificationData(e, ["streamId", "ranges"]),
                Ba(r.STORED, {
                    ranges: e.data.ranges,
                    streamId: e.data.streamId
                })
            }
            function ii() {
                Ba(r.FINISHED)
            }
            function oi(e) {
                switch (e.type) {
                case O.BUFFER_EMPTY:
                    Da.warn("buffer empty"),
                    Ba(r.BUFFER_EMPTY);
                    break;
                case O.BUFFER_FULL:
                    Da.info("buffer full"),
                    Ba(r.BUFFER_FULL)
                }
            }
            function si(e) {
                F.validateNotificationData(e, ["state"]),
                Ba(r.THROTTLE, {
                    state: e.data.state
                })
            }
            function ci() {
                Ba(r.X08_DETECTED)
            }
            function ui() {
                Ba(r.WEBKIT_ENTER_FULLSCREEN)
            }
            function di() {
                Ba(r.WEBKIT_END_FULLSCREEN)
            }
            function li(e) {
                Ba(r.WEBKIT_SUPPORTS_FULLSCREEN, e)
            }
            function fi(e) {
                Ba(r.AUDIO_TRACKS, e)
            }
            function pi(e) {
                Ba(r.TEXT_TRACKS, e)
            }
            function mi(e) {
                Ba(r.TEXT_TRACK_CUE_CHANGE, e)
            }
            function gi(e) {
                F.validateNotificationData(e, ["position", "remaining"]);
                var t = {
                    position: e.data.position,
                    remaining: e.data.remaining
                };
                Ba(a.UNRECOVERED_STALLED, t)
            }
            function vi(e) {
                F.validateNotificationData(e, ["error"]);
                var t = {
                    error: e.data.error
                };
                Va(a.PLAY_ERROR, t)
            }
            function Ei() {
                Ba(r.SEEK_COMPLETED)
            }
            function hi(e) {
                F.validateNotificationData(e, ["metadata"]),
                Ba(r.METADATA, {
                    type: "flv",
                    data: e.data.metadata
                })
            }
            function yi(e) {
                F.validateNotificationData(e, ["position", "gapLength"]),
                Ba(r.GAP_RECOVERING, {
                    gapEndPosition: e.data.position,
                    gapLength: e.data.gapLength
                })
            }
            function bi() {
                return X.player && X.player.element ? X.player.element : null
            }
            var Ti = {
                events: r,
                errors: a,
                logLevels: l.levels,
                formats: i,
                capabilities: Bt,
                version: Pe,
                internals: X,
                initialized: !1,
                initialize: function(e) {
                    Aa = e,
                    Da.debug("initializing atlas ".concat(Pe), {
                        containerId: Aa
                    }),
                    _a = o(),
                    z.init(),
                    Ca(),
                    F.addListener(se.CREATE, Ha)
                },
                cleanup: Na,
                suspend: function() {
                    xa(),
                    Ga(V.SUSPEND)
                },
                wake: function() {
                    xa(),
                    Ga(V.WAKE)
                },
                play: function(e) {
                    if (Da.debug("play", e),
                    xa(),
                    function(e) {
                        var t = !0;
                        if (!e || "object" !== xt(e))
                            return !1;
                        switch (e.format) {
                        case i.MP4_SEGMENTED:
                            return t = function(e) {
                                return !!e.representations && e.representations.some((function(e) {
                                    return !!e.contentType && -1 !== e.contentType.indexOf("text")
                                }
                                ))
                            }(e) ? t && Jt(e, Wt) : t && Jt(e, Kt),
                            t && $t(e, Zt);
                        case i.FLV_SEGMENTED:
                            return (t = t && Jt(e, Qt)) && $t(e, Yt);
                        case i.FLV_MOVIE:
                            return Jt(e, zt);
                        case i.HLS:
                            return Jt(e, Xt);
                        case i.MP4_MOVIE:
                            return Jt(e, qt);
                        default:
                            return Ht.error("unrecognized data format: ".concat(e.format)),
                            !1
                        }
                    }(e)) {
                        var t, n = !Ia;
                        X.isLive = e.isLive,
                        Ia = e,
                        n ? function(e) {
                            return -1 === Bt.indexOf(e.format) ? (ya.error("unsupported format", {
                                format: e.format
                            }),
                            !1) : !(e.format === i.MP4_SEGMENTED && !function(e) {
                                for (var t, n, r, a = !0, o = 0; e.representations && o < e.representations.length; o += 1)
                                    (n = e.representations[o]).contentType === i.VTT ? (t = 'application/mp4; codecs="text/vtt"',
                                    r = !0) : (t = "".concat(n.contentType, ';codecs="').concat(n.codecs, '"'),
                                    r = Be(t)),
                                    r ? ya.info("playable type", {
                                        mediaType: t
                                    }) : ya.error("unplayable type", {
                                        mediaType: t
                                    }),
                                    a = a && r;
                                return a
                            }(e))
                        }(t = e) ? (ja(O.ERROR, Ka),
                        ja(O.POSITION, za),
                        ja(O.RESIZE, Xa),
                        ja(O.BUFFERED, qa),
                        ja(O.BUFFER_EMPTY, oi),
                        ja(O.BUFFER_FULL, oi),
                        ja(O.THROTTLE, si),
                        ja(O.SEEK_COMPLETED, Ei),
                        ja(O.CC_DETECTED, ci),
                        ja(O.AUDIO_TRACKS, fi),
                        ja(O.TEXT_TRACKS, pi),
                        ja(O.WEBKIT_SUPPORTS_FULLSCREEN, li),
                        ja(P.WEBKIT_ENTER_FULLSCREEN, ui),
                        ja(P.WEBKIT_END_FULLSCREEN, di),
                        ja(O.UNRECOVERED_STALLED, gi),
                        ja(O.PLAY_ERROR, vi),
                        ja(qe.SEEK, Ei),
                        ja(wt.TEXT_TRACK_CUE_CHANGE, mi),
                        ja(R.BUFFER_UPDATED, qa),
                        ja(E.LOAD_COMPLETE, Za),
                        ja(E.FAILED, Ya),
                        ja(y.SEGMENT_STORAGE_UPDATED, ai),
                        ja(p.FINISHED, ii),
                        ja(p.CAN_NOT_CREATE_URL, Wa),
                        ja(p.NEW_REPRESENTATION, Qa),
                        ja(p.QUALITY_CHANGE_STARTED, $a),
                        ja(p.QUALITY_CHANGE_CANCELLED, Ja),
                        ja(p.QUALITY_CHANGE_COMPLETED, ei),
                        ja(p.ATLAS_FULLY_INITIALIZED, wa),
                        ja(p.LANGUAGE_CHANGE_STARTED, ti),
                        ja(p.LANGUAGE_CHANGE_CANCELLED, ni),
                        ja(p.LANGUAGE_CHANGE_COMPLETED, ri),
                        ja(tn.METADATA, hi),
                        ja(st.GAP_RECOVERING, yi),
                        Ta(Aa, t)) : Va(a.UNSUPPORTED) : (function(e) {
                            e.format === i.MP4_SEGMENTED && ba(e.representations) && En.create()
                        }(e),
                        Ga(V.UPDATE_OPTIONS, {
                            options: e
                        }))
                    } else
                        Va(a.INVALID_OPTIONS)
                },
                pause: function() {
                    xa(),
                    Ga(V.PAUSE)
                },
                resume: function() {
                    xa(),
                    Ga(V.RESUME)
                },
                seek: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "user";
                    xa(),
                    Da.info("seek", {
                        position: e
                    });
                    var n = bi();
                    Ba(r.SEEK_STARTED, {
                        from: n && n.currentTime,
                        to: e / 1e3,
                        initiator: t
                    }),
                    Ga(V.SEEK, {
                        position: Math.floor(e)
                    })
                },
                getOption: function(e) {
                    return xa(),
                    z.get(e)
                },
                setOption: function(e, t) {
                    return xa(),
                    z.set(e, t, !0)
                },
                optionNames: j,
                getVideoTag: bi,
                getFlashObjectSize: function() {
                    return Ra
                },
                setHash: function(e) {
                    xa(),
                    Ga(V.UPDATE_HASHES, {
                        hashes: e
                    })
                },
                setVolume: Ua,
                getVolume: function() {
                    return xa(),
                    Pa
                },
                setPlaybackSpeed: function(e) {
                    xa(),
                    Ga(V.PLAYBACK_SPEED, {
                        speed: e
                    })
                },
                setCaptionPosition: function(e) {
                    xa(),
                    Ga(V.CAPTION_POSITION, {
                        position: e
                    })
                },
                toggleCaptions: function(e) {
                    var t = e.trackId
                      , n = e.isVisible;
                    xa(),
                    Ga(V.CAPTIONS, {
                        trackId: t,
                        isVisible: n
                    })
                },
                selectAudio: function(e) {
                    xa(),
                    Ga(V.SELECT_AUDIO, {
                        id: e
                    })
                },
                getVideoMetrics: function() {
                    return xa(),
                    jt.getInstance().getMetrics()
                },
                on: Ma,
                off: Fa,
                addListener: Ma,
                removeListener: Fa
            };
            Ca();
            var Si = Ti;
            return t
        }()
    }
}]);
